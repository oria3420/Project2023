{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oria3\\\\Desktop\\\\\\u05DB\\u05DC\\u05DC\\u05D9\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8 \\u05D2\\u05DE\\u05E8\\\\code\\\\client\\\\src\\\\pages\\\\Setting.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport './Connect.css';\nimport Navbar from '../components/Navbar';\nimport './App.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Setting() {\n  _s();\n  const navigate = useNavigate();\n  const [nameNew, setNameNew] = useState('');\n  const [password, setPassword] = useState('');\n  const [image, setImage] = useState('');\n  const [name, setName] = useState(null);\n  const [setUser] = useState(null);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const _user = jwt_decode(token);\n      setName(_user.name);\n      setUser(_user);\n      if (!_user) {\n        localStorage.removeItem('token');\n        navigate.replace('/login');\n      }\n    }\n  }, [navigate]);\n  const handleNameChange = event => {\n    setNameNew(event.target.value);\n  };\n  const handlePasswordChange = event => {\n    setPassword(event.target.value);\n  };\n  const handleImageChange = event => {\n    setImage(event.target.value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    // Here, you would typically send the updated settings to the server\n    // using an API call or any other method.\n\n    // Reset the form fields after submission\n    setNameNew('');\n    setPassword('');\n    setImage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [name && /*#__PURE__*/_jsxDEV(Navbar, {\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connect-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-connect\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/images/logo_black_english.png\",\n            alt: \"Logo\",\n            className: \"logo-login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-title\",\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: nameNew,\n              onChange: handleNameChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              value: password,\n              onChange: handlePasswordChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Profile Image URL:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: image,\n              onChange: handleImageChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(Setting, \"/fhlFHvGgNhp1Grynlnc4/o+rjc=\", false, function () {\n  return [useNavigate];\n});\n_c = Setting;\nexport default Setting;\nvar _c;\n$RefreshReg$(_c, \"Setting\");","map":{"version":3,"names":["React","useState","useEffect","jwt_decode","Navbar","useNavigate","jsxDEV","_jsxDEV","Setting","_s","navigate","nameNew","setNameNew","password","setPassword","image","setImage","name","setName","setUser","token","localStorage","getItem","_user","removeItem","replace","handleNameChange","event","target","value","handlePasswordChange","handleImageChange","handleSubmit","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","src","alt","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/oria3/Desktop/כללי/שנה ג/פרוייקט גמר/code/client/src/pages/Setting.js"],"sourcesContent":["import React, { useState, useEffect} from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport './Connect.css';\nimport Navbar from '../components/Navbar';\nimport './App.css';\nimport { useNavigate } from 'react-router-dom';\n\n\nfunction Setting() {\n  const navigate = useNavigate()\n  const [nameNew, setNameNew] = useState('');\n  const [password, setPassword] = useState('');\n  const [image, setImage] = useState('');\n  const [name, setName] = useState(null)\n  const [setUser] = useState(null)\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n        const _user = jwt_decode(token)\n        setName(_user.name)\n        setUser(_user)\n        if (!_user) {\n            localStorage.removeItem('token')\n            navigate.replace('/login')\n        }\n    }\n}, [navigate])\n  const handleNameChange = (event) => {\n    setNameNew(event.target.value);\n  };\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const handleImageChange = (event) => {\n    setImage(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    // Here, you would typically send the updated settings to the server\n    // using an API call or any other method.\n\n    // Reset the form fields after submission\n    setNameNew('');\n    setPassword('');\n    setImage('');\n  };\n\n  return (\n    <div>\n    {name && <Navbar name={name} />}\n    <div className=\"connect-body\">\n      <div className=\"form-connect\">\n        <form onSubmit={handleSubmit}>\n          <img src=\"/images/logo_black_english.png\" alt=\"Logo\" className=\"logo-login\" />\n          <label className=\"form-title\">Settings</label>\n          <div>\n            <label>Name:</label>\n            <input type=\"text\" value={nameNew} onChange={handleNameChange} />\n          </div>\n          <div>\n            <label>Password:</label>\n            <input type=\"password\" value={password} onChange={handlePasswordChange} />\n          </div>\n          <div>\n            <label>Profile Image URL:</label>\n            <input type=\"text\" value={image} onChange={handleImageChange} />\n          </div>\n          <button type=\"submit\">Save Changes</button>\n        </form>\n      </div>\n    </div>\n    </div>\n  );\n}\n\nexport default Setting;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}