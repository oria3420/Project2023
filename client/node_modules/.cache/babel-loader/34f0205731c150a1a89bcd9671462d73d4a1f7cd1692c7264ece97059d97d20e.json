{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oria3\\\\Desktop\\\\\\u05DB\\u05DC\\u05DC\\u05D9\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8 \\u05D2\\u05DE\\u05E8\\\\code\\\\client\\\\src\\\\pages\\\\AddRecipe.js\",\n  _s = $RefreshSig$();\nimport Navbar from '../components/Navbar';\nimport './App.css';\nimport './AddRecipe.css';\nimport React, { useState, useEffect } from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddRecipe = () => {\n  _s();\n  const navigate = useNavigate();\n  const [name, setName] = useState(null);\n  const [user, setUser] = useState(null);\n  const [recipeName, setRecipeName] = useState('');\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [cookTime, setCookTime] = useState('00:00');\n  const [prepTime, setPrepTime] = useState('00:00');\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [description, setDescription] = useState('');\n  const [recipeYield, setRecipeYield] = useState('');\n  const [categories, setCategories] = useState([]);\n  const [checkedItems, setCheckedItems] = useState({});\n  const [userId, setUserId] = useState('');\n  const [ingredients, setIngredients] = useState([]);\n  const [instructions, setInstructions] = useState(['']);\n  ;\n  const [measurements, setMeasurements] = useState([]);\n  const [recipeIngredients, setRecipeIngredients] = useState([{\n    ingredient: '',\n    amount: ''\n  }]);\n  const [suggestions, setSuggestions] = useState([]);\n  const handleMeasurementChange = (index, value) => {\n    const updatedIngredients = [...recipeIngredients];\n    updatedIngredients[index].measurementId = value;\n    setRecipeIngredients(updatedIngredients);\n  };\n  const handleIngredientChange = (index, field, value) => {\n    const updatedIngredients = [...recipeIngredients];\n    updatedIngredients[index][field] = value;\n    setRecipeIngredients(updatedIngredients);\n    // Call a function to filter and update the suggestions based on the current input value\n    updateIngredientSuggestions(value, index);\n  };\n  const updateIngredientSuggestions = (inputValue, index) => {\n    // Check if the length of inputValue is at least 3 before searching for suggestions\n    if (inputValue.length >= 3) {\n      const filteredIngredients = ingredients.filter(ingredient => typeof ingredient.ingredient === 'string' && ingredient.ingredient.toLowerCase().startsWith(inputValue.toLowerCase())).map(ingredient => ingredient.ingredient);\n\n      // Update the suggestions array at the specified index\n      setSuggestions(prevSuggestions => {\n        const updatedSuggestions = [...prevSuggestions];\n        updatedSuggestions[index] = filteredIngredients;\n        return updatedSuggestions;\n      });\n    } else {\n      // Clear suggestions if inputValue is less than 3 letters\n      setSuggestions(prevSuggestions => {\n        const updatedSuggestions = [...prevSuggestions];\n        updatedSuggestions[index] = [];\n        return updatedSuggestions;\n      });\n    }\n  };\n  const handleSuggestionClick = (index, suggestion) => {\n    const updatedIngredients = [...recipeIngredients];\n    updatedIngredients[index].ingredient = suggestion;\n    setRecipeIngredients(updatedIngredients);\n    // Clear suggestions for the clicked input field\n    setSuggestions([], index);\n  };\n  const addIngredient = () => {\n    setRecipeIngredients([...recipeIngredients, {\n      ingredient: '',\n      amount: ''\n    }]);\n  };\n  const removeIngredient = index => {\n    const updatedIngredients = [...recipeIngredients];\n    updatedIngredients.splice(index, 1);\n    setRecipeIngredients(updatedIngredients);\n  };\n  const addInstruction = () => {\n    setInstructions([...instructions, '']);\n  };\n  const removeInstruction = index => {\n    const updatedInstructions = [...instructions];\n    updatedInstructions.splice(index, 1);\n    setInstructions(updatedInstructions);\n  };\n  const handleInstructionChange = (index, value) => {\n    const updatedInstructions = [...instructions];\n    updatedInstructions[index] = value;\n    setInstructions(updatedInstructions);\n  };\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const _user = jwt_decode(token);\n      setName(_user.name);\n      setUser(_user);\n      setUserId(_user.email);\n      if (!_user) {\n        localStorage.removeItem('token');\n        navigate.replace('/login');\n      }\n    }\n  }, [navigate]);\n  useEffect(() => {\n    fetch('http://localhost:1337/api/search_recipe').then(response => response.json()).then(data => {\n      const expandedCategories = {};\n      const checkedItems = {};\n      Object.keys(data).forEach(category => {\n        //expandedCategories[category] = false;\n        checkedItems[category] = {};\n      });\n      setCategories(data);\n      // for (const categoryKey in data) {\n      //     if (Object.hasOwnProperty.call(data, categoryKey)) {\n      //       const categoryEntries = data[categoryKey];\n      //       console.log(`Category: ${categoryKey}`);\n\n      //       for (const entry of categoryEntries) {\n      //         const [id, name] = entry;\n      //         console.log(`  Entry ID: ${id}, Name: ${name}`);\n      //       }\n      //     }\n      //   }\n      //setExpandedCategories(expandedCategories);\n      setCheckedItems(checkedItems);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  useEffect(() => {\n    if (user) {\n      fetch(`http://localhost:1337/api/groceries`).then(res => res.json()).then(data => {\n        setIngredients(data);\n      }).catch(error => console.error(error));\n    }\n  }, [user]);\n  useEffect(() => {\n    if (user) {\n      fetch(`http://localhost:1337/api/measurements`).then(res => res.json()).then(data => {\n        setMeasurements(data);\n      }).catch(error => console.error(error));\n    }\n  }, [user]);\n\n  // useEffect(() => {\n  //     if (searchTerm.length >= 3) {\n  //         const filtered = ingredients.filter((ingred) =>\n  //             ingred && ingred.ingredient\n  //                 ? ingred.ingredient.toLowerCase().includes(searchTerm.toLowerCase())\n  //                 : false\n  //         );\n  //         setFilteredIngredients(filtered);\n  //     } else {\n  //         setFilteredIngredients([]);\n  //     }\n  // }, [searchTerm, ingredients]);\n\n  // const handleAddToGroceryList = () => {\n  //     if (selectedIngredient && selectedMeasurement && amount) {\n  //         const selectedIngredientObject = filteredIngredients.find(item => item.ingredient === selectedIngredient);\n  //         const selectedMeasurementObject = measurements.find(item => item.measurement === selectedMeasurement);\n  //         const newItem = {\n  //             ingredientId: selectedIngredientObject?.id,\n  //             measurementId: selectedMeasurementObject?.id,\n  //             amount: amount,\n  //             ingredientName: selectedIngredient,\n  //             measurementName: selectedMeasurement\n  //         };\n  //         setIngredientsList([...ingredientsList, newItem]);\n  //         // Clear the input fields after adding to the list\n  //         setSelectedIngredient('');\n  //         setSelectedMeasurement('');\n  //         setAmount('');\n  //         setSearchTerm('');\n  //     }\n  // };\n\n  const handleImageChange = event => {\n    const file = event.target.files[0];\n    setSelectedImage(file);\n  };\n  const handleCheckboxChange = (category, id, checked) => {\n    setCheckedItems(prevCheckedItems => {\n      const newCheckedItems = {\n        ...prevCheckedItems,\n        [category]: {\n          ...(prevCheckedItems[category] || {}),\n          [id]: checked\n        }\n      };\n\n      // If the category is kosher_categories, enforce exactly one checkbox\n      if (category === 'kosher_categories') {\n        const kosherCategoryIds = Object.keys(newCheckedItems[category]);\n        const numChecked = kosherCategoryIds.reduce((count, checkboxId) => newCheckedItems[category][checkboxId] ? count + 1 : count, 0);\n\n        // If more than one checkbox is checked, uncheck the current one\n        if (numChecked > 1) {\n          newCheckedItems[category][id] = false;\n        }\n      }\n      return newCheckedItems;\n    });\n  };\n\n  // const handleSubmit = async (e) => {\n  //     e.preventDefault();\n  //     const kosherCategoryIds = Object.keys(checkedItems['kosher_categories'] || {});\n  //     const isKosherCategoryValid = kosherCategoryIds.some(\n  //         (checkboxId) => checkedItems['kosher_categories'][checkboxId]\n  //     );\n\n  //     if (!isKosherCategoryValid) {\n  //         setErrorMessage('Please select at least one checkbox in kosher_categories');\n  //         return;\n  //     }\n  //     setErrorMessage('');\n  //     console.log('Form Data:', {\n  //         recipeName,\n  //         selectedImage,\n  //         cookTime,\n  //         prepTime,\n  //         selectedCategory,\n  //         groceryList: ingredientsList,\n  //         description,\n  //         recipeServings,\n  //         recipeYield,\n  //         recipeInstructions: instructions,\n  //         checkedItems,\n  //     });\n  //     // setRecipeName('');\n  //     // setSelectedImage(null);\n  //     // setCookTime('00:00');\n  //     // setPrepTime('00:00');\n  //     // setSelectedCategory('');\n  //     // setSearchTerm('');\n  //     // setSelectedMeasurement('');\n  //     // setAmount('');\n  //     // setDescription('');\n  //     // setRecipeServings(1);\n  //     // setRecipeYield('');\n  //     // setRecipeInstructions('');\n  //     // setCheckedItems({});\n  //     // setGroceryList([]);\n  //     const formData = new FormData();\n  //     formData.append('selectedImage', selectedImage);\n  //     formData.append('recipeName', recipeName);\n  //     formData.append('cookTime', cookTime);\n  //     formData.append('prepTime', prepTime);\n  //     formData.append('selectedCategory', selectedCategory);\n  //     formData.append('groceryList', JSON.stringify(ingredientsList)); // Assuming groceryList is an array\n  //     formData.append('description', description);\n  //     formData.append('recipeServings', recipeServings);\n  //     formData.append('recipeYield', recipeYield);\n  //     formData.append('recipeInstructions', instructions);\n  //     formData.append('checkedItems', JSON.stringify(checkedItems));\n  //     formData.append('name', name);\n  //     formData.append('userId', userId);\n\n  //     try {\n  //         const response = await fetch('http://localhost:1337/api/addRecipe', {\n  //             method: 'POST',\n  //             body: formData,\n  //         });\n  //         if (response.ok) {\n  //             const result = await response.json();\n  //             console.log(result); // Recipe successfully added\n  //         } else {\n  //             console.error(`HTTP Error: ${response.status}`);\n  //             // Handle error response\n  //         }\n  //     } catch (error) {\n  //         console.error(error);\n  //         // Handle fetch error (e.g., network error)\n  //     }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [name && /*#__PURE__*/_jsxDEV(Navbar, {\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: user && /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"add-recipe-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-details two-sections-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-left image-details-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"add-image-head\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"black-title\",\n                children: \"Add Images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-container\",\n              children: selectedImage ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"recipe-image\",\n                  src: URL.createObjectURL(selectedImage),\n                  alt: \"Selected\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"custom-file-upload\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-images\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 332,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"input-file\",\n                    type: \"file\",\n                    accept: \"image/*\",\n                    onChange: handleImageChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 333,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"add-file-title\",\n                  children: \"Upload images\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-right image-details-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"description-head\",\n              children: \"Add Your Recipe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"description-bottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"black-title\",\n                children: \"Recipe Name & Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"description-fields\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"desc-field\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"input-title\",\n                    children: \"Recipe Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 349,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"input-field\",\n                    type: \"text\",\n                    value: recipeName || '',\n                    onChange: e => setRecipeName(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 350,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"times-yields\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"desc-field\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"input-title\",\n                      children: \"Prep Time\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 362,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"input-field time-field\",\n                      type: \"time\",\n                      value: prepTime,\n                      onChange: e => setPrepTime(e.target.value),\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 363,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 361,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"desc-field\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"input-title\",\n                      children: \"Cook Time\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 373,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"input-field time-field\",\n                      type: \"time\",\n                      value: cookTime,\n                      onChange: e => setCookTime(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 374,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 372,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"desc-field yields-field\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"input-title\",\n                      children: \"Yields /Servings\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 383,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"input-field\",\n                      type: \"text\",\n                      value: recipeYield,\n                      onChange: e => setRecipeYield(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 384,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"desc-field\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"input-title\",\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 394,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    className: \"input-field desc-textbox\",\n                    value: description,\n                    onChange: e => setDescription(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 395,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"desc-field\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"input-title\",\n                    children: \"Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 403,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    className: \"input-field category-desc\",\n                    value: selectedCategory,\n                    onChange: e => setSelectedCategory(e.target.value),\n                    required: true,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      disabled: true,\n                      children: \"Select Category\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 410,\n                      columnNumber: 49\n                    }, this), Object.entries(categories).map(_ref => {\n                      let [category, entries] = _ref;\n                      return entries.map(_ref2 => {\n                        let [id, tagName] = _ref2;\n                        return /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: tagName,\n                          children: tagName\n                        }, id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 415,\n                          columnNumber: 57\n                        }, this);\n                      });\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 404,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ingredients-steps two-sections-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-left ingredients-steps-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"black-title\",\n              children: \"Ingredients\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"steps-container\",\n              children: [recipeIngredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"instruction-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"input-field step-input\",\n                    placeholder: `Ingredient ${index + 1}`,\n                    value: ingredient.ingredient,\n                    onChange: e => handleIngredientChange(index, 'ingredient', e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 441,\n                    columnNumber: 49\n                  }, this), Array.isArray(suggestions[index]) && suggestions[index].length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ingredient-suggestions\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"toggle-bar\",\n                      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                        children: suggestions[index].map((suggestion, suggestionIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n                          onClick: () => handleSuggestionClick(index, suggestion),\n                          children: suggestion\n                        }, suggestionIndex, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 454,\n                          columnNumber: 69\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 452,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 451,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 450,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  className: \"input-field step-input amount-input\",\n                  placeholder: `Amount ${index + 1}`,\n                  value: ingredient.amount,\n                  onChange: e => handleIngredientChange(index, 'amount', e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"input-field step-input amount-input\",\n                  value: ingredient.measurementId || '',\n                  onChange: e => handleMeasurementChange(index, e.target.value),\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    disabled: true,\n                    children: `Measurement ${index + 1}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 483,\n                    columnNumber: 49\n                  }, this), measurements.map((measurement, measurementIndex) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: measurement.measurement,\n                    children: measurement.measurement\n                  }, measurementIndex, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 485,\n                    columnNumber: 53\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  onClick: () => removeIngredient(index),\n                  className: \"bi bi-x-circle remove-icon\",\n                  title: \"Remove Ingredient\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 41\n              }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: addIngredient,\n                className: \"add-btn\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-plus-circle add-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Add another ingredient\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 506,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-right ingredients-steps-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"black-title\",\n              children: \"Instructions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"steps-container\",\n              children: [instructions.map((instruction, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"instruction-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"input-field step-input\",\n                  placeholder: `Instruction ${index + 1}`,\n                  value: instruction,\n                  onChange: e => handleInstructionChange(index, e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 520,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  onClick: () => removeInstruction(index),\n                  className: \"bi bi-x-circle remove-icon\",\n                  title: \"Remove Instruction\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 527,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 41\n              }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: addInstruction,\n                className: \"add-btn\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-plus-circle add-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 536,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Add another instruction\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 537,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 535,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tags-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"black-title\",\n            children: \"Tags\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 29\n          }, this), Object.entries(categories).map(_ref3 => {\n            let [category, entries] = _ref3;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"checkbox-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"add-recipe-lable\",\n                children: category + \":\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 35\n              }, this), entries.map(_ref4 => {\n                var _checkedItems$categor;\n                let [id, tagName] = _ref4;\n                return /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"checkbox-label\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: ((_checkedItems$categor = checkedItems[category]) === null || _checkedItems$categor === void 0 ? void 0 : _checkedItems$categor[id]) || false,\n                    onChange: e => handleCheckboxChange(category, id, e.target.checked)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 553,\n                    columnNumber: 39\n                  }, this), tagName]\n                }, id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 552,\n                  columnNumber: 37\n                }, this);\n              })]\n            }, category, true, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 33\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submit-section\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"publish-btn\",\n            type: \"submit\",\n            children: \"Publish\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 311,\n    columnNumber: 9\n  }, this);\n};\n_s(AddRecipe, \"xYSXrqXhSBfaVkwJPPi0GNfGc1A=\", false, function () {\n  return [useNavigate];\n});\n_c = AddRecipe;\nexport default AddRecipe;\n\n// const [searchTerm, setSearchTerm] = useState('');\n// const [filteredIngredients, setFilteredIngredients] = useState([]);\n// const [selectedIngredient, setSelectedIngredient] = useState('');\n// const [selectedMeasurement, setSelectedMeasurement] = useState('');\n// const [amount, setAmount] = useState('');\n// const [ingredientsList, setIngredientsList] = useState([]);\nvar _c;\n$RefreshReg$(_c, \"AddRecipe\");","map":{"version":3,"names":["Navbar","React","useState","useEffect","jwt_decode","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","AddRecipe","_s","navigate","name","setName","user","setUser","recipeName","setRecipeName","selectedImage","setSelectedImage","cookTime","setCookTime","prepTime","setPrepTime","selectedCategory","setSelectedCategory","description","setDescription","recipeYield","setRecipeYield","categories","setCategories","checkedItems","setCheckedItems","userId","setUserId","ingredients","setIngredients","instructions","setInstructions","measurements","setMeasurements","recipeIngredients","setRecipeIngredients","ingredient","amount","suggestions","setSuggestions","handleMeasurementChange","index","value","updatedIngredients","measurementId","handleIngredientChange","field","updateIngredientSuggestions","inputValue","length","filteredIngredients","filter","toLowerCase","startsWith","map","prevSuggestions","updatedSuggestions","handleSuggestionClick","suggestion","addIngredient","removeIngredient","splice","addInstruction","removeInstruction","updatedInstructions","handleInstructionChange","token","localStorage","getItem","_user","email","removeItem","replace","fetch","then","response","json","data","expandedCategories","Object","keys","forEach","category","catch","error","console","res","handleImageChange","event","file","target","files","handleCheckboxChange","id","checked","prevCheckedItems","newCheckedItems","kosherCategoryIds","numChecked","reduce","count","checkboxId","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","URL","createObjectURL","alt","type","accept","onChange","e","required","disabled","entries","_ref","_ref2","tagName","placeholder","Array","isArray","class","suggestionIndex","onClick","measurement","measurementIndex","title","instruction","_ref3","_ref4","_checkedItems$categor","_c","$RefreshReg$"],"sources":["C:/Users/oria3/Desktop/כללי/לימודים/שנה ג/פרוייקט גמר/code/client/src/pages/AddRecipe.js"],"sourcesContent":["import Navbar from '../components/Navbar';\nimport './App.css';\nimport './AddRecipe.css'\nimport React, { useState, useEffect } from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from 'react-router-dom'\n\nconst AddRecipe = () => {\n    const navigate = useNavigate()\n    const [name, setName] = useState(null)\n    const [user, setUser] = useState(null)\n    const [recipeName, setRecipeName] = useState('');\n    const [selectedImage, setSelectedImage] = useState(null);\n    const [cookTime, setCookTime] = useState('00:00');\n    const [prepTime, setPrepTime] = useState('00:00');\n    const [selectedCategory, setSelectedCategory] = useState('');\n    const [description, setDescription] = useState('');\n    const [recipeYield, setRecipeYield] = useState('');\n    const [categories, setCategories] = useState([]);\n    const [checkedItems, setCheckedItems] = useState({});\n    const [userId, setUserId] = useState('');\n\n    const [ingredients, setIngredients] = useState([])\n    const [instructions, setInstructions] = useState(['']);;\n    const [measurements, setMeasurements] = useState([]);\n    const [recipeIngredients, setRecipeIngredients] = useState([{ ingredient: '', amount: '' }]);\n    const [suggestions, setSuggestions] = useState([]);\n\n    const handleMeasurementChange = (index, value) => {\n        const updatedIngredients = [...recipeIngredients];\n        updatedIngredients[index].measurementId = value;\n        setRecipeIngredients(updatedIngredients);\n    };\n\n    const handleIngredientChange = (index, field, value) => {\n        const updatedIngredients = [...recipeIngredients];\n        updatedIngredients[index][field] = value;\n        setRecipeIngredients(updatedIngredients);\n        // Call a function to filter and update the suggestions based on the current input value\n        updateIngredientSuggestions(value, index);\n    };\n\n    const updateIngredientSuggestions = (inputValue, index) => {\n        // Check if the length of inputValue is at least 3 before searching for suggestions\n        if (inputValue.length >= 3) {\n            const filteredIngredients = ingredients\n                .filter((ingredient) =>\n                    typeof ingredient.ingredient === 'string' &&\n                    ingredient.ingredient.toLowerCase().startsWith(inputValue.toLowerCase())\n                )\n                .map((ingredient) => ingredient.ingredient);\n\n            // Update the suggestions array at the specified index\n            setSuggestions((prevSuggestions) => {\n                const updatedSuggestions = [...prevSuggestions];\n                updatedSuggestions[index] = filteredIngredients;\n                return updatedSuggestions;\n            });\n        } else {\n            // Clear suggestions if inputValue is less than 3 letters\n            setSuggestions((prevSuggestions) => {\n                const updatedSuggestions = [...prevSuggestions];\n                updatedSuggestions[index] = [];\n                return updatedSuggestions;\n            });\n        }\n    };\n\n    const handleSuggestionClick = (index, suggestion) => {\n        const updatedIngredients = [...recipeIngredients];\n        updatedIngredients[index].ingredient = suggestion;\n        setRecipeIngredients(updatedIngredients);\n        // Clear suggestions for the clicked input field\n        setSuggestions([], index);\n    };\n\n    const addIngredient = () => {\n        setRecipeIngredients([...recipeIngredients, { ingredient: '', amount: '' }]);\n    };\n\n    const removeIngredient = (index) => {\n        const updatedIngredients = [...recipeIngredients];\n        updatedIngredients.splice(index, 1);\n        setRecipeIngredients(updatedIngredients);\n    };\n\n\n    const addInstruction = () => {\n        setInstructions([...instructions, '']);\n    };\n\n    const removeInstruction = (index) => {\n        const updatedInstructions = [...instructions];\n        updatedInstructions.splice(index, 1);\n        setInstructions(updatedInstructions);\n    };\n\n    const handleInstructionChange = (index, value) => {\n        const updatedInstructions = [...instructions];\n        updatedInstructions[index] = value;\n        setInstructions(updatedInstructions);\n    };\n\n    useEffect(() => {\n        const token = localStorage.getItem('token')\n        if (token) {\n            const _user = jwt_decode(token)\n            setName(_user.name)\n            setUser(_user)\n            setUserId(_user.email)\n            if (!_user) {\n                localStorage.removeItem('token')\n                navigate.replace('/login')\n            }\n        }\n    }, [navigate])\n\n\n    useEffect(() => {\n        fetch('http://localhost:1337/api/search_recipe')\n            .then(response => response.json())\n            .then(data => {\n                const expandedCategories = {};\n                const checkedItems = {};\n                Object.keys(data).forEach(category => {\n                    //expandedCategories[category] = false;\n                    checkedItems[category] = {};\n                });\n                setCategories(data);\n                // for (const categoryKey in data) {\n                //     if (Object.hasOwnProperty.call(data, categoryKey)) {\n                //       const categoryEntries = data[categoryKey];\n                //       console.log(`Category: ${categoryKey}`);\n\n                //       for (const entry of categoryEntries) {\n                //         const [id, name] = entry;\n                //         console.log(`  Entry ID: ${id}, Name: ${name}`);\n                //       }\n                //     }\n                //   }\n                //setExpandedCategories(expandedCategories);\n                setCheckedItems(checkedItems);\n            })\n            .catch(error => {\n                console.error(error);\n            });\n    }, []);\n\n    useEffect(() => {\n        if (user) {\n            fetch(`http://localhost:1337/api/groceries`)\n                .then(res => res.json())\n                .then(data => {\n                    setIngredients(data)\n                })\n                .catch(error => console.error(error))\n        }\n    }, [user]);\n\n    useEffect(() => {\n        if (user) {\n            fetch(`http://localhost:1337/api/measurements`)\n                .then(res => res.json())\n                .then(data => {\n                    setMeasurements(data)\n                })\n                .catch(error => console.error(error))\n        }\n    }, [user]);\n\n    // useEffect(() => {\n    //     if (searchTerm.length >= 3) {\n    //         const filtered = ingredients.filter((ingred) =>\n    //             ingred && ingred.ingredient\n    //                 ? ingred.ingredient.toLowerCase().includes(searchTerm.toLowerCase())\n    //                 : false\n    //         );\n    //         setFilteredIngredients(filtered);\n    //     } else {\n    //         setFilteredIngredients([]);\n    //     }\n    // }, [searchTerm, ingredients]);\n\n\n    // const handleAddToGroceryList = () => {\n    //     if (selectedIngredient && selectedMeasurement && amount) {\n    //         const selectedIngredientObject = filteredIngredients.find(item => item.ingredient === selectedIngredient);\n    //         const selectedMeasurementObject = measurements.find(item => item.measurement === selectedMeasurement);\n    //         const newItem = {\n    //             ingredientId: selectedIngredientObject?.id,\n    //             measurementId: selectedMeasurementObject?.id,\n    //             amount: amount,\n    //             ingredientName: selectedIngredient,\n    //             measurementName: selectedMeasurement\n    //         };\n    //         setIngredientsList([...ingredientsList, newItem]);\n    //         // Clear the input fields after adding to the list\n    //         setSelectedIngredient('');\n    //         setSelectedMeasurement('');\n    //         setAmount('');\n    //         setSearchTerm('');\n    //     }\n    // };\n\n    const handleImageChange = (event) => {\n        const file = event.target.files[0];\n        setSelectedImage(file);\n    };\n\n    const handleCheckboxChange = (category, id, checked) => {\n        setCheckedItems((prevCheckedItems) => {\n            const newCheckedItems = {\n                ...prevCheckedItems,\n                [category]: {\n                    ...(prevCheckedItems[category] || {}),\n                    [id]: checked,\n                },\n            };\n\n            // If the category is kosher_categories, enforce exactly one checkbox\n            if (category === 'kosher_categories') {\n                const kosherCategoryIds = Object.keys(newCheckedItems[category]);\n                const numChecked = kosherCategoryIds.reduce(\n                    (count, checkboxId) => (newCheckedItems[category][checkboxId] ? count + 1 : count),\n                    0\n                );\n\n                // If more than one checkbox is checked, uncheck the current one\n                if (numChecked > 1) {\n                    newCheckedItems[category][id] = false;\n                }\n            }\n\n            return newCheckedItems;\n        });\n    };\n\n    // const handleSubmit = async (e) => {\n    //     e.preventDefault();\n    //     const kosherCategoryIds = Object.keys(checkedItems['kosher_categories'] || {});\n    //     const isKosherCategoryValid = kosherCategoryIds.some(\n    //         (checkboxId) => checkedItems['kosher_categories'][checkboxId]\n    //     );\n\n    //     if (!isKosherCategoryValid) {\n    //         setErrorMessage('Please select at least one checkbox in kosher_categories');\n    //         return;\n    //     }\n    //     setErrorMessage('');\n    //     console.log('Form Data:', {\n    //         recipeName,\n    //         selectedImage,\n    //         cookTime,\n    //         prepTime,\n    //         selectedCategory,\n    //         groceryList: ingredientsList,\n    //         description,\n    //         recipeServings,\n    //         recipeYield,\n    //         recipeInstructions: instructions,\n    //         checkedItems,\n    //     });\n    //     // setRecipeName('');\n    //     // setSelectedImage(null);\n    //     // setCookTime('00:00');\n    //     // setPrepTime('00:00');\n    //     // setSelectedCategory('');\n    //     // setSearchTerm('');\n    //     // setSelectedMeasurement('');\n    //     // setAmount('');\n    //     // setDescription('');\n    //     // setRecipeServings(1);\n    //     // setRecipeYield('');\n    //     // setRecipeInstructions('');\n    //     // setCheckedItems({});\n    //     // setGroceryList([]);\n    //     const formData = new FormData();\n    //     formData.append('selectedImage', selectedImage);\n    //     formData.append('recipeName', recipeName);\n    //     formData.append('cookTime', cookTime);\n    //     formData.append('prepTime', prepTime);\n    //     formData.append('selectedCategory', selectedCategory);\n    //     formData.append('groceryList', JSON.stringify(ingredientsList)); // Assuming groceryList is an array\n    //     formData.append('description', description);\n    //     formData.append('recipeServings', recipeServings);\n    //     formData.append('recipeYield', recipeYield);\n    //     formData.append('recipeInstructions', instructions);\n    //     formData.append('checkedItems', JSON.stringify(checkedItems));\n    //     formData.append('name', name);\n    //     formData.append('userId', userId);\n\n    //     try {\n    //         const response = await fetch('http://localhost:1337/api/addRecipe', {\n    //             method: 'POST',\n    //             body: formData,\n    //         });\n    //         if (response.ok) {\n    //             const result = await response.json();\n    //             console.log(result); // Recipe successfully added\n    //         } else {\n    //             console.error(`HTTP Error: ${response.status}`);\n    //             // Handle error response\n    //         }\n    //     } catch (error) {\n    //         console.error(error);\n    //         // Handle fetch error (e.g., network error)\n    //     }\n    // };\n\n    return (\n        <div>\n            {name && <Navbar name={name} />}\n            <div>\n                {user && (\n                    <form className='add-recipe-form'>\n\n                        <div className='image-details two-sections-wrapper'>\n\n                            <div className='section-left image-details-left'>\n                                <div className='add-image-head'>\n                                    <label className='black-title'>Add Images</label>\n                                </div>\n\n                                <div className='image-container'>\n                                    {selectedImage ? (\n                                        <>\n                                            <img className='recipe-image' src={URL.createObjectURL(selectedImage)} alt=\"Selected\" />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <label className=\"custom-file-upload\">\n                                                <i className=\"bi bi-images\"></i>\n                                                <input className=\"input-file\" type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\n                                            </label>\n                                            <label className='add-file-title'>Upload images</label>\n                                        </>\n                                    )}\n                                </div>\n\n                            </div>\n\n                            <div className='section-right image-details-right'>\n                                <div className='description-head'>Add Your Recipe</div>\n                                <div className='description-bottom'>\n                                    <div className='black-title'>Recipe Name & Description</div>\n\n                                    <div className='description-fields'>\n                                        <div className='desc-field'>\n                                            <label className='input-title'>Recipe Name</label>\n                                            <input\n                                                className='input-field'\n                                                type=\"text\"\n                                                value={recipeName || ''}\n                                                onChange={(e) => setRecipeName(e.target.value)}\n                                                required\n                                            />\n                                        </div>\n\n                                        <div className='times-yields'>\n\n                                            <div className='desc-field'>\n                                                <label className='input-title'>Prep Time</label>\n                                                <input\n                                                    className='input-field time-field'\n                                                    type=\"time\"\n                                                    value={prepTime}\n                                                    onChange={(e) => setPrepTime(e.target.value)}\n                                                    required\n                                                />\n                                            </div>\n\n                                            <div className='desc-field'>\n                                                <label className='input-title'>Cook Time</label>\n                                                <input\n                                                    className='input-field time-field'\n                                                    type=\"time\"\n                                                    value={cookTime}\n                                                    onChange={(e) => setCookTime(e.target.value)}\n                                                />\n                                            </div>\n\n                                            <div className='desc-field yields-field'>\n                                                <label className='input-title'>Yields /Servings</label>\n                                                <input\n                                                    className='input-field'\n                                                    type=\"text\"\n                                                    value={recipeYield}\n                                                    onChange={(e) => setRecipeYield(e.target.value)}\n                                                />\n                                            </div>\n                                        </div>\n\n                                        <div className='desc-field'>\n                                            <label className='input-title'>Description</label>\n                                            <textarea\n                                                className='input-field desc-textbox'\n                                                value={description}\n                                                onChange={(e) => setDescription(e.target.value)}\n                                            />\n                                        </div>\n\n                                        <div className='desc-field'>\n                                            <label className='input-title'>Category</label>\n                                            <select\n                                                className='input-field category-desc'\n                                                value={selectedCategory}\n                                                onChange={(e) => setSelectedCategory(e.target.value)}\n                                                required\n                                            >\n                                                <option value=\"\" disabled>\n                                                    Select Category\n                                                </option>\n                                                {Object.entries(categories).map(([category, entries]) => (\n                                                    entries.map(([id, tagName]) => (\n                                                        <option key={id} value={tagName}>\n                                                            {tagName}\n                                                        </option>\n                                                    ))\n                                                ))}\n                                            </select>\n                                        </div>\n\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className='ingredients-steps two-sections-wrapper'>\n\n                            <div className='section-left ingredients-steps-section'>\n                                <label className='black-title'>Ingredients</label>\n\n\n                                <div className='steps-container'>\n\n\n                                    {recipeIngredients.map((ingredient, index) => (\n                                        <div key={index} className='instruction-row'>\n\n                                            <div className=\"input-container\">\n                                                <input\n                                                    className='input-field step-input'\n                                                    placeholder={`Ingredient ${index + 1}`}\n                                                    value={ingredient.ingredient}\n                                                    onChange={(e) => handleIngredientChange(index, 'ingredient', e.target.value)}\n                                                    required\n                                                />\n\n                                                {Array.isArray(suggestions[index]) && suggestions[index].length > 0 && (\n                                                    <div className='ingredient-suggestions'>\n                                                        <div class='toggle-bar'>\n                                                            <ul>\n                                                                {suggestions[index].map((suggestion, suggestionIndex) => (\n                                                                    <li key={suggestionIndex} onClick={() => handleSuggestionClick(index, suggestion)}>\n                                                                        {suggestion}\n                                                                    </li>\n                                                                ))}\n                                                            </ul>\n                                                        </div>\n                                                    </div>\n                                                )}\n\n                                            </div>\n\n\n\n\n                                            <input\n                                                type=\"number\"\n                                                className='input-field step-input amount-input'\n                                                placeholder={`Amount ${index + 1}`}\n                                                value={ingredient.amount}\n                                                onChange={(e) => handleIngredientChange(index, 'amount', e.target.value)}\n                                                required\n                                            />\n\n                                            <select\n                                                className='input-field step-input amount-input'\n                                                value={ingredient.measurementId || ''}\n                                                onChange={(e) => handleMeasurementChange(index, e.target.value)}\n                                                required\n                                            >\n                                                <option value='' disabled>{`Measurement ${index + 1}`}</option>\n                                                {measurements.map((measurement, measurementIndex) => (\n                                                    <option key={measurementIndex} value={measurement.measurement}>\n                                                        {measurement.measurement}\n                                                    </option>\n                                                ))}\n                                            </select>\n\n                                            <i\n                                                onClick={() => removeIngredient(index)}\n                                                className='bi bi-x-circle remove-icon'\n                                                title='Remove Ingredient'\n                                            ></i>\n                                        </div>\n                                    ))}\n\n\n\n\n\n\n                                    <button onClick={addIngredient} className='add-btn'>\n                                        <i className=\"bi bi-plus-circle add-icon\"></i>\n                                        <span>Add another ingredient</span>\n                                    </button>\n\n                                </div>\n\n                            </div>\n\n                            <div className='section-right ingredients-steps-section'>\n                                <label className='black-title'>Instructions</label>\n\n                                <div className='steps-container'>\n\n                                    {instructions.map((instruction, index) => (\n                                        <div key={index} className='instruction-row'>\n                                            <input\n                                                className='input-field step-input'\n                                                placeholder={`Instruction ${index + 1}`}\n                                                value={instruction}\n                                                onChange={(e) => handleInstructionChange(index, e.target.value)}\n                                                required\n                                            />\n                                            <i\n                                                onClick={() => removeInstruction(index)}\n                                                className='bi bi-x-circle remove-icon'\n                                                title='Remove Instruction'\n                                            ></i>\n                                        </div>\n                                    ))}\n\n                                    <button onClick={addInstruction} className='add-btn'>\n                                        <i className=\"bi bi-plus-circle add-icon\"></i>\n                                        <span>Add another instruction</span>\n                                    </button>\n\n                                </div>\n\n                            </div>\n\n                        </div>\n\n                        <div className='tags-section'>\n                            <label className='black-title'>Tags</label>\n                            {Object.entries(categories).map(([category, entries]) => (\n                                <div key={category} className=\"checkbox-container\">\n                                  <label className=\"add-recipe-lable\">{category+\":\"}</label>\n                                  {entries.map(([id, tagName]) => (\n                                    <label key={id} className=\"checkbox-label\">\n                                      <input\n                                        type=\"checkbox\"\n                                        checked={checkedItems[category]?.[id] || false}\n                                        onChange={(e) => handleCheckboxChange(category, id, e.target.checked)}\n                                    />\n                                    {tagName}\n                                    </label>\n                                  ))}\n                                </div>\n                              ))}\n                        </div>\n\n                        <div className='submit-section'>\n                            <button className='publish-btn' type=\"submit\">Publish</button>\n                        </div>\n                    </form>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default AddRecipe\n\n\n\n// const [searchTerm, setSearchTerm] = useState('');\n// const [filteredIngredients, setFilteredIngredients] = useState([]);\n// const [selectedIngredient, setSelectedIngredient] = useState('');\n// const [selectedMeasurement, setSelectedMeasurement] = useState('');\n// const [amount, setAmount] = useState('');\n// const [ingredientsList, setIngredientsList] = useState([]);"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,sBAAsB;AACzC,OAAO,WAAW;AAClB,OAAO,iBAAiB;AACxB,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,YAAY;AACnC,SAASC,WAAW,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGP,WAAW,EAAE;EAC9B,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,OAAO,CAAC;EACjD,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,OAAO,CAAC;EACjD,MAAM,CAACuB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACyB,WAAW,EAAEC,cAAc,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC2B,WAAW,EAAEC,cAAc,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC6B,UAAU,EAAEC,aAAa,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC+B,YAAY,EAAEC,eAAe,CAAC,GAAGhC,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpD,MAAM,CAACiC,MAAM,EAAEC,SAAS,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAM,CAACmC,WAAW,EAAEC,cAAc,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACqC,YAAY,EAAEC,eAAe,CAAC,GAAGtC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAAC;EACvD,MAAM,CAACuC,YAAY,EAAEC,eAAe,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACyC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG1C,QAAQ,CAAC,CAAC;IAAE2C,UAAU,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAG,CAAC,CAAC,CAAC;EAC5F,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAG9C,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAM+C,uBAAuB,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IAC9C,MAAMC,kBAAkB,GAAG,CAAC,GAAGT,iBAAiB,CAAC;IACjDS,kBAAkB,CAACF,KAAK,CAAC,CAACG,aAAa,GAAGF,KAAK;IAC/CP,oBAAoB,CAACQ,kBAAkB,CAAC;EAC5C,CAAC;EAED,MAAME,sBAAsB,GAAGA,CAACJ,KAAK,EAAEK,KAAK,EAAEJ,KAAK,KAAK;IACpD,MAAMC,kBAAkB,GAAG,CAAC,GAAGT,iBAAiB,CAAC;IACjDS,kBAAkB,CAACF,KAAK,CAAC,CAACK,KAAK,CAAC,GAAGJ,KAAK;IACxCP,oBAAoB,CAACQ,kBAAkB,CAAC;IACxC;IACAI,2BAA2B,CAACL,KAAK,EAAED,KAAK,CAAC;EAC7C,CAAC;EAED,MAAMM,2BAA2B,GAAGA,CAACC,UAAU,EAAEP,KAAK,KAAK;IACvD;IACA,IAAIO,UAAU,CAACC,MAAM,IAAI,CAAC,EAAE;MACxB,MAAMC,mBAAmB,GAAGtB,WAAW,CAClCuB,MAAM,CAAEf,UAAU,IACf,OAAOA,UAAU,CAACA,UAAU,KAAK,QAAQ,IACzCA,UAAU,CAACA,UAAU,CAACgB,WAAW,EAAE,CAACC,UAAU,CAACL,UAAU,CAACI,WAAW,EAAE,CAAC,CAC3E,CACAE,GAAG,CAAElB,UAAU,IAAKA,UAAU,CAACA,UAAU,CAAC;;MAE/C;MACAG,cAAc,CAAEgB,eAAe,IAAK;QAChC,MAAMC,kBAAkB,GAAG,CAAC,GAAGD,eAAe,CAAC;QAC/CC,kBAAkB,CAACf,KAAK,CAAC,GAAGS,mBAAmB;QAC/C,OAAOM,kBAAkB;MAC7B,CAAC,CAAC;IACN,CAAC,MAAM;MACH;MACAjB,cAAc,CAAEgB,eAAe,IAAK;QAChC,MAAMC,kBAAkB,GAAG,CAAC,GAAGD,eAAe,CAAC;QAC/CC,kBAAkB,CAACf,KAAK,CAAC,GAAG,EAAE;QAC9B,OAAOe,kBAAkB;MAC7B,CAAC,CAAC;IACN;EACJ,CAAC;EAED,MAAMC,qBAAqB,GAAGA,CAAChB,KAAK,EAAEiB,UAAU,KAAK;IACjD,MAAMf,kBAAkB,GAAG,CAAC,GAAGT,iBAAiB,CAAC;IACjDS,kBAAkB,CAACF,KAAK,CAAC,CAACL,UAAU,GAAGsB,UAAU;IACjDvB,oBAAoB,CAACQ,kBAAkB,CAAC;IACxC;IACAJ,cAAc,CAAC,EAAE,EAAEE,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMkB,aAAa,GAAGA,CAAA,KAAM;IACxBxB,oBAAoB,CAAC,CAAC,GAAGD,iBAAiB,EAAE;MAAEE,UAAU,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAG,CAAC,CAAC,CAAC;EAChF,CAAC;EAED,MAAMuB,gBAAgB,GAAInB,KAAK,IAAK;IAChC,MAAME,kBAAkB,GAAG,CAAC,GAAGT,iBAAiB,CAAC;IACjDS,kBAAkB,CAACkB,MAAM,CAACpB,KAAK,EAAE,CAAC,CAAC;IACnCN,oBAAoB,CAACQ,kBAAkB,CAAC;EAC5C,CAAC;EAGD,MAAMmB,cAAc,GAAGA,CAAA,KAAM;IACzB/B,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAE,EAAE,CAAC,CAAC;EAC1C,CAAC;EAED,MAAMiC,iBAAiB,GAAItB,KAAK,IAAK;IACjC,MAAMuB,mBAAmB,GAAG,CAAC,GAAGlC,YAAY,CAAC;IAC7CkC,mBAAmB,CAACH,MAAM,CAACpB,KAAK,EAAE,CAAC,CAAC;IACpCV,eAAe,CAACiC,mBAAmB,CAAC;EACxC,CAAC;EAED,MAAMC,uBAAuB,GAAGA,CAACxB,KAAK,EAAEC,KAAK,KAAK;IAC9C,MAAMsB,mBAAmB,GAAG,CAAC,GAAGlC,YAAY,CAAC;IAC7CkC,mBAAmB,CAACvB,KAAK,CAAC,GAAGC,KAAK;IAClCX,eAAe,CAACiC,mBAAmB,CAAC;EACxC,CAAC;EAEDtE,SAAS,CAAC,MAAM;IACZ,MAAMwE,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACP,MAAMG,KAAK,GAAG1E,UAAU,CAACuE,KAAK,CAAC;MAC/B7D,OAAO,CAACgE,KAAK,CAACjE,IAAI,CAAC;MACnBG,OAAO,CAAC8D,KAAK,CAAC;MACd1C,SAAS,CAAC0C,KAAK,CAACC,KAAK,CAAC;MACtB,IAAI,CAACD,KAAK,EAAE;QACRF,YAAY,CAACI,UAAU,CAAC,OAAO,CAAC;QAChCpE,QAAQ,CAACqE,OAAO,CAAC,QAAQ,CAAC;MAC9B;IACJ;EACJ,CAAC,EAAE,CAACrE,QAAQ,CAAC,CAAC;EAGdT,SAAS,CAAC,MAAM;IACZ+E,KAAK,CAAC,yCAAyC,CAAC,CAC3CC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACV,MAAMC,kBAAkB,GAAG,CAAC,CAAC;MAC7B,MAAMtD,YAAY,GAAG,CAAC,CAAC;MACvBuD,MAAM,CAACC,IAAI,CAACH,IAAI,CAAC,CAACI,OAAO,CAACC,QAAQ,IAAI;QAClC;QACA1D,YAAY,CAAC0D,QAAQ,CAAC,GAAG,CAAC,CAAC;MAC/B,CAAC,CAAC;MACF3D,aAAa,CAACsD,IAAI,CAAC;MACnB;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACApD,eAAe,CAACD,YAAY,CAAC;IACjC,CAAC,CAAC,CACD2D,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACxB,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN1F,SAAS,CAAC,MAAM;IACZ,IAAIY,IAAI,EAAE;MACNmE,KAAK,CAAE,qCAAoC,CAAC,CACvCC,IAAI,CAACY,GAAG,IAAIA,GAAG,CAACV,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;QACVhD,cAAc,CAACgD,IAAI,CAAC;MACxB,CAAC,CAAC,CACDM,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;IAC7C;EACJ,CAAC,EAAE,CAAC9E,IAAI,CAAC,CAAC;EAEVZ,SAAS,CAAC,MAAM;IACZ,IAAIY,IAAI,EAAE;MACNmE,KAAK,CAAE,wCAAuC,CAAC,CAC1CC,IAAI,CAACY,GAAG,IAAIA,GAAG,CAACV,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;QACV5C,eAAe,CAAC4C,IAAI,CAAC;MACzB,CAAC,CAAC,CACDM,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;IAC7C;EACJ,CAAC,EAAE,CAAC9E,IAAI,CAAC,CAAC;;EAEV;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMiF,iBAAiB,GAAIC,KAAK,IAAK;IACjC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClChF,gBAAgB,CAAC8E,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMG,oBAAoB,GAAGA,CAACV,QAAQ,EAAEW,EAAE,EAAEC,OAAO,KAAK;IACpDrE,eAAe,CAAEsE,gBAAgB,IAAK;MAClC,MAAMC,eAAe,GAAG;QACpB,GAAGD,gBAAgB;QACnB,CAACb,QAAQ,GAAG;UACR,IAAIa,gBAAgB,CAACb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;UACrC,CAACW,EAAE,GAAGC;QACV;MACJ,CAAC;;MAED;MACA,IAAIZ,QAAQ,KAAK,mBAAmB,EAAE;QAClC,MAAMe,iBAAiB,GAAGlB,MAAM,CAACC,IAAI,CAACgB,eAAe,CAACd,QAAQ,CAAC,CAAC;QAChE,MAAMgB,UAAU,GAAGD,iBAAiB,CAACE,MAAM,CACvC,CAACC,KAAK,EAAEC,UAAU,KAAML,eAAe,CAACd,QAAQ,CAAC,CAACmB,UAAU,CAAC,GAAGD,KAAK,GAAG,CAAC,GAAGA,KAAM,EAClF,CAAC,CACJ;;QAED;QACA,IAAIF,UAAU,GAAG,CAAC,EAAE;UAChBF,eAAe,CAACd,QAAQ,CAAC,CAACW,EAAE,CAAC,GAAG,KAAK;QACzC;MACJ;MAEA,OAAOG,eAAe;IAC1B,CAAC,CAAC;EACN,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACIlG,OAAA;IAAAwG,QAAA,GACKlG,IAAI,iBAAIN,OAAA,CAACP,MAAM;MAACa,IAAI,EAAEA;IAAK;MAAAmG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC/B5G,OAAA;MAAAwG,QAAA,EACKhG,IAAI,iBACDR,OAAA;QAAM6G,SAAS,EAAC,iBAAiB;QAAAL,QAAA,gBAE7BxG,OAAA;UAAK6G,SAAS,EAAC,oCAAoC;UAAAL,QAAA,gBAE/CxG,OAAA;YAAK6G,SAAS,EAAC,iCAAiC;YAAAL,QAAA,gBAC5CxG,OAAA;cAAK6G,SAAS,EAAC,gBAAgB;cAAAL,QAAA,eAC3BxG,OAAA;gBAAO6G,SAAS,EAAC,aAAa;gBAAAL,QAAA,EAAC;cAAU;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YAAQ;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAC/C,eAEN5G,OAAA;cAAK6G,SAAS,EAAC,iBAAiB;cAAAL,QAAA,EAC3B5F,aAAa,gBACVZ,OAAA,CAAAE,SAAA;gBAAAsG,QAAA,eACIxG,OAAA;kBAAK6G,SAAS,EAAC,cAAc;kBAACC,GAAG,EAAEC,GAAG,CAACC,eAAe,CAACpG,aAAa,CAAE;kBAACqG,GAAG,EAAC;gBAAU;kBAAAR,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA;cAAG,iBACzF,gBAEH5G,OAAA,CAAAE,SAAA;gBAAAsG,QAAA,gBACIxG,OAAA;kBAAO6G,SAAS,EAAC,oBAAoB;kBAAAL,QAAA,gBACjCxG,OAAA;oBAAG6G,SAAS,EAAC;kBAAc;oBAAAJ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,QAAK,eAChC5G,OAAA;oBAAO6G,SAAS,EAAC,YAAY;oBAACK,IAAI,EAAC,MAAM;oBAACC,MAAM,EAAC,SAAS;oBAACC,QAAQ,EAAE3B;kBAAkB;oBAAAgB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,QAAG;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QACtF,eACR5G,OAAA;kBAAO6G,SAAS,EAAC,gBAAgB;kBAAAL,QAAA,EAAC;gBAAa;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAAQ;cAAA;YAE9D;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAEJ,eAEN5G,OAAA;YAAK6G,SAAS,EAAC,mCAAmC;YAAAL,QAAA,gBAC9CxG,OAAA;cAAK6G,SAAS,EAAC,kBAAkB;cAAAL,QAAA,EAAC;YAAe;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAM,eACvD5G,OAAA;cAAK6G,SAAS,EAAC,oBAAoB;cAAAL,QAAA,gBAC/BxG,OAAA;gBAAK6G,SAAS,EAAC,aAAa;gBAAAL,QAAA,EAAC;cAAyB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAM,eAE5D5G,OAAA;gBAAK6G,SAAS,EAAC,oBAAoB;gBAAAL,QAAA,gBAC/BxG,OAAA;kBAAK6G,SAAS,EAAC,YAAY;kBAAAL,QAAA,gBACvBxG,OAAA;oBAAO6G,SAAS,EAAC,aAAa;oBAAAL,QAAA,EAAC;kBAAW;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,QAAQ,eAClD5G,OAAA;oBACI6G,SAAS,EAAC,aAAa;oBACvBK,IAAI,EAAC,MAAM;oBACXtE,KAAK,EAAElC,UAAU,IAAI,EAAG;oBACxB0G,QAAQ,EAAGC,CAAC,IAAK1G,aAAa,CAAC0G,CAAC,CAACzB,MAAM,CAAChD,KAAK,CAAE;oBAC/C0E,QAAQ;kBAAA;oBAAAb,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,QACV;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QACA,eAEN5G,OAAA;kBAAK6G,SAAS,EAAC,cAAc;kBAAAL,QAAA,gBAEzBxG,OAAA;oBAAK6G,SAAS,EAAC,YAAY;oBAAAL,QAAA,gBACvBxG,OAAA;sBAAO6G,SAAS,EAAC,aAAa;sBAAAL,QAAA,EAAC;oBAAS;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,QAAQ,eAChD5G,OAAA;sBACI6G,SAAS,EAAC,wBAAwB;sBAClCK,IAAI,EAAC,MAAM;sBACXtE,KAAK,EAAE5B,QAAS;sBAChBoG,QAAQ,EAAGC,CAAC,IAAKpG,WAAW,CAACoG,CAAC,CAACzB,MAAM,CAAChD,KAAK,CAAE;sBAC7C0E,QAAQ;oBAAA;sBAAAb,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,QACV;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,QACA,eAEN5G,OAAA;oBAAK6G,SAAS,EAAC,YAAY;oBAAAL,QAAA,gBACvBxG,OAAA;sBAAO6G,SAAS,EAAC,aAAa;sBAAAL,QAAA,EAAC;oBAAS;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,QAAQ,eAChD5G,OAAA;sBACI6G,SAAS,EAAC,wBAAwB;sBAClCK,IAAI,EAAC,MAAM;sBACXtE,KAAK,EAAE9B,QAAS;sBAChBsG,QAAQ,EAAGC,CAAC,IAAKtG,WAAW,CAACsG,CAAC,CAACzB,MAAM,CAAChD,KAAK;oBAAE;sBAAA6D,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,QAC/C;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,QACA,eAEN5G,OAAA;oBAAK6G,SAAS,EAAC,yBAAyB;oBAAAL,QAAA,gBACpCxG,OAAA;sBAAO6G,SAAS,EAAC,aAAa;sBAAAL,QAAA,EAAC;oBAAgB;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,QAAQ,eACvD5G,OAAA;sBACI6G,SAAS,EAAC,aAAa;sBACvBK,IAAI,EAAC,MAAM;sBACXtE,KAAK,EAAEtB,WAAY;sBACnB8F,QAAQ,EAAGC,CAAC,IAAK9F,cAAc,CAAC8F,CAAC,CAACzB,MAAM,CAAChD,KAAK;oBAAE;sBAAA6D,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,QAClD;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,QACA;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QACJ,eAEN5G,OAAA;kBAAK6G,SAAS,EAAC,YAAY;kBAAAL,QAAA,gBACvBxG,OAAA;oBAAO6G,SAAS,EAAC,aAAa;oBAAAL,QAAA,EAAC;kBAAW;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,QAAQ,eAClD5G,OAAA;oBACI6G,SAAS,EAAC,0BAA0B;oBACpCjE,KAAK,EAAExB,WAAY;oBACnBgG,QAAQ,EAAGC,CAAC,IAAKhG,cAAc,CAACgG,CAAC,CAACzB,MAAM,CAAChD,KAAK;kBAAE;oBAAA6D,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,QAClD;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QACA,eAEN5G,OAAA;kBAAK6G,SAAS,EAAC,YAAY;kBAAAL,QAAA,gBACvBxG,OAAA;oBAAO6G,SAAS,EAAC,aAAa;oBAAAL,QAAA,EAAC;kBAAQ;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,QAAQ,eAC/C5G,OAAA;oBACI6G,SAAS,EAAC,2BAA2B;oBACrCjE,KAAK,EAAE1B,gBAAiB;oBACxBkG,QAAQ,EAAGC,CAAC,IAAKlG,mBAAmB,CAACkG,CAAC,CAACzB,MAAM,CAAChD,KAAK,CAAE;oBACrD0E,QAAQ;oBAAAd,QAAA,gBAERxG,OAAA;sBAAQ4C,KAAK,EAAC,EAAE;sBAAC2E,QAAQ;sBAAAf,QAAA,EAAC;oBAE1B;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,QAAS,EACR3B,MAAM,CAACuC,OAAO,CAAChG,UAAU,CAAC,CAACgC,GAAG,CAACiE,IAAA;sBAAA,IAAC,CAACrC,QAAQ,EAAEoC,OAAO,CAAC,GAAAC,IAAA;sBAAA,OAChDD,OAAO,CAAChE,GAAG,CAACkE,KAAA;wBAAA,IAAC,CAAC3B,EAAE,EAAE4B,OAAO,CAAC,GAAAD,KAAA;wBAAA,oBACtB1H,OAAA;0BAAiB4C,KAAK,EAAE+E,OAAQ;0BAAAnB,QAAA,EAC3BmB;wBAAO,GADC5B,EAAE;0BAAAU,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,QAEN;sBAAA,CACZ,CAAC;oBAAA,CACL,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,QACG;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QACP;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAEJ;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACJ;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACJ;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACJ,eAEN5G,OAAA;UAAK6G,SAAS,EAAC,wCAAwC;UAAAL,QAAA,gBAEnDxG,OAAA;YAAK6G,SAAS,EAAC,wCAAwC;YAAAL,QAAA,gBACnDxG,OAAA;cAAO6G,SAAS,EAAC,aAAa;cAAAL,QAAA,EAAC;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAQ,eAGlD5G,OAAA;cAAK6G,SAAS,EAAC,iBAAiB;cAAAL,QAAA,GAG3BpE,iBAAiB,CAACoB,GAAG,CAAC,CAAClB,UAAU,EAAEK,KAAK,kBACrC3C,OAAA;gBAAiB6G,SAAS,EAAC,iBAAiB;gBAAAL,QAAA,gBAExCxG,OAAA;kBAAK6G,SAAS,EAAC,iBAAiB;kBAAAL,QAAA,gBAC5BxG,OAAA;oBACI6G,SAAS,EAAC,wBAAwB;oBAClCe,WAAW,EAAG,cAAajF,KAAK,GAAG,CAAE,EAAE;oBACvCC,KAAK,EAAEN,UAAU,CAACA,UAAW;oBAC7B8E,QAAQ,EAAGC,CAAC,IAAKtE,sBAAsB,CAACJ,KAAK,EAAE,YAAY,EAAE0E,CAAC,CAACzB,MAAM,CAAChD,KAAK,CAAE;oBAC7E0E,QAAQ;kBAAA;oBAAAb,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,QACV,EAEDiB,KAAK,CAACC,OAAO,CAACtF,WAAW,CAACG,KAAK,CAAC,CAAC,IAAIH,WAAW,CAACG,KAAK,CAAC,CAACQ,MAAM,GAAG,CAAC,iBAC/DnD,OAAA;oBAAK6G,SAAS,EAAC,wBAAwB;oBAAAL,QAAA,eACnCxG,OAAA;sBAAK+H,KAAK,EAAC,YAAY;sBAAAvB,QAAA,eACnBxG,OAAA;wBAAAwG,QAAA,EACKhE,WAAW,CAACG,KAAK,CAAC,CAACa,GAAG,CAAC,CAACI,UAAU,EAAEoE,eAAe,kBAChDhI,OAAA;0BAA0BiI,OAAO,EAAEA,CAAA,KAAMtE,qBAAqB,CAAChB,KAAK,EAAEiB,UAAU,CAAE;0BAAA4C,QAAA,EAC7E5C;wBAAU,GADNoE,eAAe;0BAAAvB,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,QAG3B;sBAAC;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA;oBACD;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA;kBACH;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,QAEb;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAEC,eAKN5G,OAAA;kBACIkH,IAAI,EAAC,QAAQ;kBACbL,SAAS,EAAC,qCAAqC;kBAC/Ce,WAAW,EAAG,UAASjF,KAAK,GAAG,CAAE,EAAE;kBACnCC,KAAK,EAAEN,UAAU,CAACC,MAAO;kBACzB6E,QAAQ,EAAGC,CAAC,IAAKtE,sBAAsB,CAACJ,KAAK,EAAE,QAAQ,EAAE0E,CAAC,CAACzB,MAAM,CAAChD,KAAK,CAAE;kBACzE0E,QAAQ;gBAAA;kBAAAb,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QACV,eAEF5G,OAAA;kBACI6G,SAAS,EAAC,qCAAqC;kBAC/CjE,KAAK,EAAEN,UAAU,CAACQ,aAAa,IAAI,EAAG;kBACtCsE,QAAQ,EAAGC,CAAC,IAAK3E,uBAAuB,CAACC,KAAK,EAAE0E,CAAC,CAACzB,MAAM,CAAChD,KAAK,CAAE;kBAChE0E,QAAQ;kBAAAd,QAAA,gBAERxG,OAAA;oBAAQ4C,KAAK,EAAC,EAAE;oBAAC2E,QAAQ;oBAAAf,QAAA,EAAG,eAAc7D,KAAK,GAAG,CAAE;kBAAC;oBAAA8D,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,QAAU,EAC9D1E,YAAY,CAACsB,GAAG,CAAC,CAAC0E,WAAW,EAAEC,gBAAgB,kBAC5CnI,OAAA;oBAA+B4C,KAAK,EAAEsF,WAAW,CAACA,WAAY;oBAAA1B,QAAA,EACzD0B,WAAW,CAACA;kBAAW,GADfC,gBAAgB;oBAAA1B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,QAGhC,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QACG,eAET5G,OAAA;kBACIiI,OAAO,EAAEA,CAAA,KAAMnE,gBAAgB,CAACnB,KAAK,CAAE;kBACvCkE,SAAS,EAAC,4BAA4B;kBACtCuB,KAAK,EAAC;gBAAmB;kBAAA3B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QACxB;cAAA,GAzDCjE,KAAK;gBAAA8D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QA2DlB,CAAC,eAOF5G,OAAA;gBAAQiI,OAAO,EAAEpE,aAAc;gBAACgD,SAAS,EAAC,SAAS;gBAAAL,QAAA,gBAC/CxG,OAAA;kBAAG6G,SAAS,EAAC;gBAA4B;kBAAAJ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAAK,eAC9C5G,OAAA;kBAAAwG,QAAA,EAAM;gBAAsB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAAO;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAC9B;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAEP;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAEJ,eAEN5G,OAAA;YAAK6G,SAAS,EAAC,yCAAyC;YAAAL,QAAA,gBACpDxG,OAAA;cAAO6G,SAAS,EAAC,aAAa;cAAAL,QAAA,EAAC;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAQ,eAEnD5G,OAAA;cAAK6G,SAAS,EAAC,iBAAiB;cAAAL,QAAA,GAE3BxE,YAAY,CAACwB,GAAG,CAAC,CAAC6E,WAAW,EAAE1F,KAAK,kBACjC3C,OAAA;gBAAiB6G,SAAS,EAAC,iBAAiB;gBAAAL,QAAA,gBACxCxG,OAAA;kBACI6G,SAAS,EAAC,wBAAwB;kBAClCe,WAAW,EAAG,eAAcjF,KAAK,GAAG,CAAE,EAAE;kBACxCC,KAAK,EAAEyF,WAAY;kBACnBjB,QAAQ,EAAGC,CAAC,IAAKlD,uBAAuB,CAACxB,KAAK,EAAE0E,CAAC,CAACzB,MAAM,CAAChD,KAAK,CAAE;kBAChE0E,QAAQ;gBAAA;kBAAAb,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QACV,eACF5G,OAAA;kBACIiI,OAAO,EAAEA,CAAA,KAAMhE,iBAAiB,CAACtB,KAAK,CAAE;kBACxCkE,SAAS,EAAC,4BAA4B;kBACtCuB,KAAK,EAAC;gBAAoB;kBAAA3B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QACzB;cAAA,GAZCjE,KAAK;gBAAA8D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAclB,CAAC,eAEF5G,OAAA;gBAAQiI,OAAO,EAAEjE,cAAe;gBAAC6C,SAAS,EAAC,SAAS;gBAAAL,QAAA,gBAChDxG,OAAA;kBAAG6G,SAAS,EAAC;gBAA4B;kBAAAJ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAAK,eAC9C5G,OAAA;kBAAAwG,QAAA,EAAM;gBAAuB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAAO;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAC/B;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAEP;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAEJ;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAEJ,eAEN5G,OAAA;UAAK6G,SAAS,EAAC,cAAc;UAAAL,QAAA,gBACzBxG,OAAA;YAAO6G,SAAS,EAAC,aAAa;YAAAL,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAQ,EAC1C3B,MAAM,CAACuC,OAAO,CAAChG,UAAU,CAAC,CAACgC,GAAG,CAAC8E,KAAA;YAAA,IAAC,CAAClD,QAAQ,EAAEoC,OAAO,CAAC,GAAAc,KAAA;YAAA,oBAChDtI,OAAA;cAAoB6G,SAAS,EAAC,oBAAoB;cAAAL,QAAA,gBAChDxG,OAAA;gBAAO6G,SAAS,EAAC,kBAAkB;gBAAAL,QAAA,EAAEpB,QAAQ,GAAC;cAAG;gBAAAqB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAS,EACzDY,OAAO,CAAChE,GAAG,CAAC+E,KAAA;gBAAA,IAAAC,qBAAA;gBAAA,IAAC,CAACzC,EAAE,EAAE4B,OAAO,CAAC,GAAAY,KAAA;gBAAA,oBACzBvI,OAAA;kBAAgB6G,SAAS,EAAC,gBAAgB;kBAAAL,QAAA,gBACxCxG,OAAA;oBACEkH,IAAI,EAAC,UAAU;oBACflB,OAAO,EAAE,EAAAwC,qBAAA,GAAA9G,YAAY,CAAC0D,QAAQ,CAAC,cAAAoD,qBAAA,uBAAtBA,qBAAA,CAAyBzC,EAAE,CAAC,KAAI,KAAM;oBAC/CqB,QAAQ,EAAGC,CAAC,IAAKvB,oBAAoB,CAACV,QAAQ,EAAEW,EAAE,EAAEsB,CAAC,CAACzB,MAAM,CAACI,OAAO;kBAAE;oBAAAS,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,QACxE,EACDe,OAAO;gBAAA,GANI5B,EAAE;kBAAAU,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAON;cAAA,CACT,CAAC;YAAA,GAXMxB,QAAQ;cAAAqB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAYZ;UAAA,CACP,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACF,eAEN5G,OAAA;UAAK6G,SAAS,EAAC,gBAAgB;UAAAL,QAAA,eAC3BxG,OAAA;YAAQ6G,SAAS,EAAC,aAAa;YAACK,IAAI,EAAC,QAAQ;YAAAV,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAS;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC5D;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAEb;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEd,CAAC;AAAAxG,EAAA,CArjBKD,SAAS;EAAA,QACML,WAAW;AAAA;AAAA2I,EAAA,GAD1BtI,SAAS;AAujBf,eAAeA,SAAS;;AAIxB;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAsI,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}