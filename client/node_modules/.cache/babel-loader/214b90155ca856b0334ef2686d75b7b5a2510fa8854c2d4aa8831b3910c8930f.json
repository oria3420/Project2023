{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oria3\\\\Desktop\\\\\\u05DB\\u05DC\\u05DC\\u05D9\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8 \\u05D2\\u05DE\\u05E8\\\\code\\\\client\\\\src\\\\pages\\\\Recipe.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport Navbar from '../components/Navbar';\nimport StarRating from '../components/StarRating';\nimport Loading from '../components/Loading';\nimport NutritionTable from '../components/NutritionTable';\nimport { useLocation } from 'react-router-dom';\nimport './Recipe.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultImageUrl = '/images/pizza.jpg';\nconst RecipePage = () => {\n  _s();\n  const location = useLocation();\n  const name = location.state.name;\n  const {\n    id\n  } = useParams();\n  const [recipe, setRecipe] = useState(null);\n  const [imageUrl, setImageUrl] = useState(null);\n  const [ingredients, setIngredients] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [recipeTags, setRecipeTags] = useState([]);\n  useEffect(() => {\n    async function fetchTags() {\n      try {\n        const response = await fetch(`http://localhost:1337/api/recipes/${id}/tags`);\n        const tags = await response.json();\n        setRecipeTags(tags);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    fetchTags();\n  }, [id]);\n  useEffect(() => {\n    async function fetchRecipe() {\n      const response = await fetch(`http://localhost:1337/api/recipes/${id}`);\n      const data = await response.json();\n      setRecipe(data);\n    }\n    fetchRecipe();\n  }, [id]);\n  useEffect(() => {\n    async function fetchIngredients() {\n      try {\n        const response = await fetch(`http://localhost:1337/api/recipes/${id}/ingredients`);\n        const data = await response.json();\n        setIngredients(data);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    fetchIngredients();\n  }, [id]);\n  useEffect(() => {\n    async function fetchComments() {\n      try {\n        const response = await fetch(`http://localhost:1337/api/recipes/${id}/comments`);\n        const data = await response.json();\n        setComments(data);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    fetchComments();\n  }, [id]);\n  console.log(comments);\n  useEffect(() => {\n    async function getImageUrl() {\n      const response = await fetch(`http://localhost:1337/api/recipes/images/${id}`);\n      const data = await response.text();\n      if (data !== 'Image not found') {\n        setImageUrl(data);\n      } else {\n        setImageUrl(defaultImageUrl);\n      }\n    }\n    getImageUrl();\n  }, [id]);\n  function formatDate(inputDate) {\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    return new Date(inputDate).toLocaleDateString('en-US', options);\n  }\n  function formatDateComment(dateString) {\n    const options = {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit'\n    };\n    const formattedDate = new Date(dateString).toLocaleDateString('en-US', options);\n    return formattedDate;\n  }\n  function capitalizeFirstLetter(text) {\n    return text && text.charAt(0).toUpperCase() + text.slice(1);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: name && recipe ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [name && /*#__PURE__*/_jsxDEV(Navbar, {\n        name: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recipe-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              id: \"recipe-name\",\n              children: capitalizeFirstLetter(recipe.Name)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"author-date\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Recipe by \" + recipe.AuthorName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"author-separator\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Published on \" + formatDate(recipe.DatePublished)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StarRating, {\n              rating: recipe.AggregatedRating,\n              reviewCount: recipe.ReviewCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"times-container\",\n              children: [\"PrepTime\", \"CookTime\", \"TotalTime\"].map((timeKey, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"time\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    id: \"time-number\",\n                    children: recipe[timeKey]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    id: \"time-text\",\n                    children: [index === 0 ? \"Prep\" : index === 1 ? \"Cook\" : \"Total\", \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 131,\n                      columnNumber: 102\n                    }, this), \" Time\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 23\n                }, this), index < 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"time-separator\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 37\n                }, this)]\n              }, timeKey, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"btn-like\",\n              className: \"btn btn-primary\",\n              type: \"submit\",\n              value: \"LIKE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recipe-image-container\",\n            children: imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"recipe-image\",\n              src: imageUrl,\n              alt: \"Card cap\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description-text\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: capitalizeFirstLetter(recipe.Description)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bold-text\",\n                children: \"Servings: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\" \", capitalizeFirstLetter(recipe.RecipeServings)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bold-text\",\n                children: \"Kosher: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\" \", capitalizeFirstLetter(recipe.Kosher)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bold-text\",\n                children: \"Category: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\" \", capitalizeFirstLetter(recipe.RecipeCategory)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ingredients-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ingredients\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"title\",\n                children: \"Ingredients\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this), ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"step-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ingredient-text\",\n                  children: ingredient.name\n                }, ingredient.name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, `br-${index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"instructions\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: \"Instructions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this), recipe.RecipeInstructions.split('.').map((instruction, index) => {\n              const formattedInstruction = instruction.trim().charAt(0).toUpperCase() + instruction.trim().slice(1);\n              return instruction.trim() !== \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"step-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"step-index\",\n                  children: [index < 9 ? \"0\" : \"\", index + 1, \". \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"step-text\",\n                  children: [formattedInstruction, \".\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 21\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(NutritionTable, {\n          recipe: recipe\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tags-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title\",\n            children: \"Recipe Tags\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), recipeTags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tag\",\n            children: tag\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comments-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: \"Reviews & Comments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"rating-text\",\n              children: \"Overall rating\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StarRating, {\n              rating: recipe.AggregatedRating,\n              reviewCount: recipe.ReviewCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-count\",\n              children: `${comments.length} ${comments.length === 1 ? 'Comment' : 'Comments'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n              className: \"comment-line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this), comments.length > 0 ? comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comment-top\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"user-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    id: \"user-icon\",\n                    className: \"bi bi-person-circle\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    id: \"user-name\",\n                    children: comment.user_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  id: \"comment-date\",\n                  children: formatDateComment(comment.comment_date)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"comment-text\",\n                children: comment.comment_text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                className: \"comment-line\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 21\n            }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-comments-container\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"no-comment-firs\",\n                children: [\"No comments yet.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 21\n                }, this), \"Be the first to comment!\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipePage, \"3GUf3+AXbi/OV63gToIPvV7/wWM=\", false, function () {\n  return [useLocation, useParams];\n});\n_c = RecipePage;\nexport default RecipePage;\n\n// <p>{comment.comment_text}</p>\n// <p>{comment.comment_date}</p>\n// <p>{comment.user_name}</p>\nvar _c;\n$RefreshReg$(_c, \"RecipePage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Navbar","StarRating","Loading","NutritionTable","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","defaultImageUrl","RecipePage","_s","location","name","state","id","recipe","setRecipe","imageUrl","setImageUrl","ingredients","setIngredients","comments","setComments","recipeTags","setRecipeTags","fetchTags","response","fetch","tags","json","error","console","fetchRecipe","data","fetchIngredients","fetchComments","log","getImageUrl","text","formatDate","inputDate","options","year","month","day","Date","toLocaleDateString","formatDateComment","dateString","formattedDate","capitalizeFirstLetter","charAt","toUpperCase","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Name","AuthorName","DatePublished","rating","AggregatedRating","reviewCount","ReviewCount","map","timeKey","index","type","value","src","alt","Description","RecipeServings","Kosher","RecipeCategory","ingredient","RecipeInstructions","split","instruction","formattedInstruction","trim","tag","length","comment","user_name","comment_date","comment_text","_c","$RefreshReg$"],"sources":["C:/Users/oria3/Desktop/כללי/שנה ג/פרוייקט גמר/code/client/src/pages/Recipe.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport Navbar from '../components/Navbar';\r\nimport StarRating from '../components/StarRating';\r\nimport Loading from '../components/Loading';\r\nimport NutritionTable from '../components/NutritionTable';\r\nimport { useLocation } from 'react-router-dom';\r\nimport './Recipe.css';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\n\r\nconst defaultImageUrl = '/images/pizza.jpg'\r\n\r\nconst RecipePage = () => {\r\n  const location = useLocation();\r\n  const name = location.state.name;\r\n  const { id } = useParams();\r\n  const [recipe, setRecipe] = useState(null);\r\n  const [imageUrl, setImageUrl] = useState(null);\r\n  const [ingredients, setIngredients] = useState([]);\r\n  const [comments, setComments] = useState([]);\r\n  const [recipeTags, setRecipeTags] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchTags() {\r\n      try {\r\n        const response = await fetch(`http://localhost:1337/api/recipes/${id}/tags`);\r\n        const tags = await response.json();\r\n        setRecipeTags(tags);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n\r\n    fetchTags();\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    async function fetchRecipe() {\r\n      const response = await fetch(`http://localhost:1337/api/recipes/${id}`);\r\n      const data = await response.json();\r\n      setRecipe(data);\r\n    }\r\n    fetchRecipe();\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    async function fetchIngredients() {\r\n      try {\r\n        const response = await fetch(`http://localhost:1337/api/recipes/${id}/ingredients`);\r\n        const data = await response.json();\r\n        setIngredients(data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n\r\n    fetchIngredients();\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    async function fetchComments() {\r\n      try {\r\n        const response = await fetch(`http://localhost:1337/api/recipes/${id}/comments`);\r\n        const data = await response.json();\r\n        setComments(data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n    fetchComments();\r\n  }, [id]);\r\n\r\n  console.log(comments)\r\n\r\n  useEffect(() => {\r\n    async function getImageUrl() {\r\n      const response = await fetch(`http://localhost:1337/api/recipes/images/${id}`);\r\n      const data = await response.text();\r\n      if (data !== 'Image not found') {\r\n        setImageUrl(data)\r\n      }\r\n      else {\r\n        setImageUrl(defaultImageUrl)\r\n      }\r\n\r\n    }\r\n    getImageUrl();\r\n  }, [id]);\r\n\r\n  function formatDate(inputDate) {\r\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n    return new Date(inputDate).toLocaleDateString('en-US', options);\r\n  }\r\n\r\n  function formatDateComment(dateString) {\r\n    const options = { year: 'numeric', month: '2-digit', day: '2-digit' };\r\n    const formattedDate = new Date(dateString).toLocaleDateString('en-US', options);\r\n    return formattedDate;\r\n  }\r\n\r\n  function capitalizeFirstLetter(text) {\r\n    return text && text.charAt(0).toUpperCase() + text.slice(1);\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      {name && recipe ? (\r\n        <>\r\n          {name && <Navbar name={name} />}\r\n          <div className='recipe-container'>\r\n\r\n            <div className='recipe-header'>\r\n\r\n              <div className='recipe-details'>\r\n\r\n                <h2 id=\"recipe-name\">{capitalizeFirstLetter(recipe.Name)}</h2>\r\n                <div id=\"author-date\">\r\n                  <span>{\"Recipe by \" + recipe.AuthorName}</span>\r\n                  <span className=\"author-separator\"></span>\r\n                  <span>{\"Published on \" + formatDate(recipe.DatePublished)}</span>\r\n                </div>\r\n\r\n                <StarRating rating={recipe.AggregatedRating} reviewCount={recipe.ReviewCount} />\r\n\r\n                <div className='times-container'>\r\n                  {[\"PrepTime\", \"CookTime\", \"TotalTime\"].map((timeKey, index) => (\r\n                    <React.Fragment key={timeKey}>\r\n                      <div className='time'>\r\n                        <span id=\"time-number\">{recipe[timeKey]}</span>\r\n                        <span id=\"time-text\">{index === 0 ? \"Prep\" : index === 1 ? \"Cook\" : \"Total\"} <br /> Time</span>\r\n                      </div>\r\n                      {index < 2 && <div className='time-separator'></div>}\r\n                    </React.Fragment>\r\n                  ))}\r\n                </div>\r\n\r\n                <input id=\"btn-like\" className=\"btn btn-primary\" type=\"submit\" value=\"LIKE\" />\r\n\r\n              </div>\r\n\r\n              <div className='recipe-image-container'>\r\n                {imageUrl && <img className='recipe-image' src={imageUrl} alt=\"Card cap\"></img>}\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <div className='description'>\r\n              <div className='description-text'>\r\n                <p>{capitalizeFirstLetter(recipe.Description)}</p>\r\n\r\n              </div>\r\n              <div className='description-details'>\r\n                <p>\r\n                  <span className=\"bold-text\">Servings: </span>\r\n                  <span> {capitalizeFirstLetter(recipe.RecipeServings)}</span>\r\n                </p>\r\n                <p>\r\n                  <span className=\"bold-text\">Kosher: </span>\r\n                  <span> {capitalizeFirstLetter(recipe.Kosher)}</span>\r\n                </p>\r\n                <p>\r\n                  <span className=\"bold-text\">Category: </span>\r\n                  <span> {capitalizeFirstLetter(recipe.RecipeCategory)}</span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='recipe-body'>\r\n\r\n              <div className='ingredients-container'>\r\n                <div className='ingredients'>\r\n                  <span className=\"title\">Ingredients</span>\r\n                  {ingredients.map((ingredient, index) => (\r\n                    <div className='step-container' key={index}>\r\n                      <span className='ingredient-text' key={ingredient.name}>{ingredient.name}</span>\r\n                      <br key={`br-${index}`} />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n\r\n              </div>\r\n\r\n              <div className='instructions'>\r\n                <span className='title'>Instructions</span>\r\n                {recipe.RecipeInstructions.split('.').map((instruction, index) => {\r\n                  const formattedInstruction = instruction.trim().charAt(0).toUpperCase() + instruction.trim().slice(1);\r\n                  return instruction.trim() !== \"\" && (\r\n                    <div className='step-container' key={index}>\r\n                      <span className='step-index'>{index < 9 ? \"0\" : \"\"}{index + 1}. </span>\r\n                      <span className='step-text'>{formattedInstruction}.</span>\r\n                      <br />\r\n                    </div>\r\n                  );\r\n                })}\r\n                <br />\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <NutritionTable recipe={recipe} />\r\n\r\n            <div className='tags-container'>\r\n              <div className='title'>Recipe Tags</div>\r\n\r\n              {recipeTags.map((tag, index) => (\r\n                <span key={index} className='tag'>\r\n                  {tag}\r\n                </span>\r\n              ))}\r\n\r\n            </div>\r\n\r\n            <div>\r\n              <div className='comments-container'>\r\n                <div className='title'>Reviews & Comments</div>\r\n                <div id=\"rating-text\">Overall rating</div>\r\n                <StarRating rating={recipe.AggregatedRating} reviewCount={recipe.ReviewCount} />\r\n\r\n                <div className=\"comment-count\">{`${comments.length} ${comments.length === 1 ? 'Comment' : 'Comments'}`}</div>\r\n                <hr className=\"comment-line\" />\r\n                {comments.length > 0 ? (\r\n                  comments.map((comment, index) => (\r\n                    <div key={index} className=\"comment\">\r\n                    <div className='comment-top'>\r\n                    <div className='user-container'>\r\n                      <i id=\"user-icon\" className=\"bi bi-person-circle\"></i>\r\n                      <span id=\"user-name\">{comment.user_name}</span>\r\n                    </div>\r\n                    <span id=\"comment-date\">{formatDateComment(comment.comment_date)}</span>\r\n                  </div>\r\n                    <span id=\"comment-text\">{comment.comment_text}</span>\r\n                    <hr className=\"comment-line\" />\r\n                  </div>\r\n                  \r\n                  ))\r\n                ) : (\r\n                  <div className='no-comments-container'>\r\n                    <span id=\"no-comment-firs\">No comments yet. \r\n                    <br></br>\r\n                    Be the first to comment!</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n\r\n\r\n\r\n\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <Loading />\r\n      )}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default RecipePage;\r\n\r\n// <p>{comment.comment_text}</p>\r\n// <p>{comment.comment_date}</p>\r\n// <p>{comment.user_name}</p>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}