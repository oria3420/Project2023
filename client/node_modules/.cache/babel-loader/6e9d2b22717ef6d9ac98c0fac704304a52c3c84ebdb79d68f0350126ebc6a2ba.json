{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oria3\\\\Desktop\\\\\\u05DB\\u05DC\\u05DC\\u05D9\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8 \\u05D2\\u05DE\\u05E8\\\\code\\\\client\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const [quote, setQuote] = useState('');\n  const [tempQuote, setTempQuote] = useState('');\n  async function populateQuote() {\n    const req = await fetch('http://localhost:1337/api/quote', {\n      headers: {\n        'x-access-token': localStorage.getItem('token')\n      }\n    });\n    const data = req.json();\n    if (data.status === 'ok') {\n      setQuote(data.quote);\n    } else {\n      alert(data.error);\n    }\n  }\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const user = jwt_decode(token);\n      if (!user) {\n        localStorage.removeItem('token');\n        navigate.replace('/login');\n      } else {\n        populateQuote();\n      }\n    }\n  }, []);\n  async function updateQuote() {\n    const req = await fetch('http://localhost:1337/api/quote', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-access-token': localStorage.getItem('token')\n      },\n      body: JSON.s\n    });\n    const data = req.json();\n    if (data.status === 'ok') {\n      setQuote(data.quote);\n    } else {\n      alert(data.error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Your quote: \", quote || 'No quote found']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateQuote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Quote\",\n        value: tempQuote,\n        setValue: e => setTempQuote(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Update quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"HvnYqkMNRZSvNnakd+olfDafcAA=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","jwt_decode","useNavigate","jsxDEV","_jsxDEV","Dashboard","_s","navigate","quote","setQuote","tempQuote","setTempQuote","populateQuote","req","fetch","headers","localStorage","getItem","data","json","status","alert","error","token","user","removeItem","replace","updateQuote","method","body","JSON","s","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","setValue","e","target","_c","$RefreshReg$"],"sources":["C:/Users/oria3/Desktop/כללי/שנה ג/פרוייקט גמר/code/client/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst Dashboard = () => {\r\n    const navigate = useNavigate()\r\n    const [quote, setQuote] = useState('')\r\n    const [tempQuote, setTempQuote] = useState('')\r\n\r\n    async function populateQuote() {\r\n        const req = await fetch('http://localhost:1337/api/quote', {\r\n            headers: {\r\n                'x-access-token': localStorage.getItem('token')\r\n            },\r\n        })\r\n\r\n        const data = req.json()\r\n        if (data.status === 'ok') {\r\n            setQuote(data.quote)\r\n        }\r\n        else {\r\n            alert(data.error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token')\r\n        if (token) {\r\n            const user = jwt_decode(token)\r\n            if (!user) {\r\n                localStorage.removeItem('token')\r\n                navigate.replace('/login')\r\n            }\r\n            else {\r\n                populateQuote()\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    async function updateQuote(){\r\n        const req = await fetch('http://localhost:1337/api/quote', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': localStorage.getItem('token')\r\n            },\r\n            body: JSON.s\r\n        })\r\n\r\n        const data = req.json()\r\n        if (data.status === 'ok') {\r\n            setQuote(data.quote)\r\n        }\r\n        else {\r\n            alert(data.error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Your quote: {quote || 'No quote found'}</h1>\r\n            <form onSubmit={updateQuote}>\r\n            <input type=\"text\" placeholder=\"Quote\" value={tempQuote} setValue={e=> setTempQuote(e.target.value)}/>\r\n            <input type=\"submit\" value=\"Update quote\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}