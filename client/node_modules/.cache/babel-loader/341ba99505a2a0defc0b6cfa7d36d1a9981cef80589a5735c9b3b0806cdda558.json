{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oria3\\\\Desktop\\\\\\u05DB\\u05DC\\u05DC\\u05D9\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8 \\u05D2\\u05DE\\u05E8\\\\code\\\\client\\\\src\\\\pages\\\\Recipe.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport Navbar from '../components/Navbar';\nimport StarRating from '../components/StarRating';\nimport Loading from '../components/Loading';\nimport NutritionTable from '../components/NutritionTable';\nimport { useLocation } from 'react-router-dom';\nimport './Recipe.css';\nimport LikeButton from '../components/LikeBtn';\nimport CommentsContainer from '../components/CommentsContainer';\nimport Carousel from '../components/Carousel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultImageUrl = '/images/logo-image.png';\nconst RecipePage = () => {\n  _s();\n  let user_name;\n  let user_id;\n  const location = useLocation();\n  //console.log(location)\n  if (location.state !== null) {\n    user_name = location.state.name;\n    user_id = location.state.user_id;\n    // console.log(user_name)\n    // console.log(user_id)\n  } else {\n    user_name = \"Guest\";\n    user_id = \"Guest\";\n  }\n  const {\n    id\n  } = useParams();\n  const [recipe, setRecipe] = useState(null);\n  const [imageUrl, setImageUrls] = useState([]);\n  const [ingredients, setIngredients] = useState([]);\n  const [recipeTags, setRecipeTags] = useState([]);\n  useEffect(() => {\n    async function fetchTags() {\n      try {\n        const response = await fetch(`http://localhost:1337/api/recipes/${id}/tags`);\n        const tags = await response.json();\n        setRecipeTags(tags);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    fetchTags();\n  }, [id]);\n  useEffect(() => {\n    async function fetchRecipe() {\n      const response = await fetch(`http://localhost:1337/api/recipes/${id}`);\n      const data = await response.json();\n      setRecipe(data);\n    }\n    fetchRecipe();\n  }, [id]);\n  useEffect(() => {\n    async function fetchIngredients() {\n      try {\n        const response = await fetch(`http://localhost:1337/api/recipes/${id}/ingredients`);\n        const data = await response.json();\n        setIngredients(data);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    fetchIngredients();\n  }, [id]);\n  useEffect(() => {\n    async function getImageUrls() {\n      try {\n        const response = await fetch(`http://localhost:1337/api/recipes/images/${id}`);\n        if (response.ok) {\n          const data = await response.json();\n          if (Array.isArray(data) && data.length > 0) {\n            const urls = await Promise.all(data.map(async imageData => {\n              if (typeof imageData === 'string' && imageData.startsWith('http')) {\n                // Check if the URL is valid\n                const urlResponse = await fetch(imageData, {\n                  method: 'HEAD'\n                });\n                if (urlResponse.ok) {\n                  return imageData;\n                } else {\n                  console.warn(`Invalid URL: ${imageData}`);\n                  return null;\n                }\n              } else {\n                console.warn(`Invalid URL format: ${imageData}`);\n                return null;\n              }\n            }));\n\n            // Remove null values (invalid URLs) from the array\n            const filteredUrls = urls.filter(url => url !== null);\n\n            // Set default image URL if the array becomes empty\n            setImageUrls(filteredUrls.length > 0 ? filteredUrls : [defaultImageUrl]);\n          } else {\n            // Handle the case when the server response is not an array or is empty\n            setImageUrls([defaultImageUrl]);\n          }\n        } else {\n          // Handle the case when the server response is not okay\n          setImageUrls([defaultImageUrl]);\n        }\n      } catch (error) {\n        console.error(error);\n        // Handle the error\n        setImageUrls([defaultImageUrl]);\n      }\n    }\n    getImageUrls();\n  }, [id, defaultImageUrl]);\n  function formatDate(inputDate) {\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    return new Date(inputDate).toLocaleDateString('en-US', options);\n  }\n  function capitalizeFirstLetter(text) {\n    return text && text.charAt(0).toUpperCase() + text.slice(1);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      name: user_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), user_name && recipe ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recipe-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              id: \"recipe-name\",\n              children: capitalizeFirstLetter(recipe.Name)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"author-date\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Recipe by \" + recipe.AuthorName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"author-separator\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Published on \" + formatDate(recipe.DatePublished)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StarRating, {\n              rating: recipe.AggregatedRating,\n              reviewCount: recipe.ReviewCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"times-container\",\n              children: [\"PrepTime\", \"CookTime\", \"TotalTime\"].map((timeKey, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"time\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    id: \"time-number\",\n                    children: recipe[timeKey] || \"0S\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    id: \"time-text\",\n                    children: [index === 0 ? \"Prep\" : index === 1 ? \"Cook\" : \"Total\", \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 160,\n                      columnNumber: 100\n                    }, this), \" Time\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 21\n                }, this), index < 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"time-separator\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 35\n                }, this)]\n              }, timeKey, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(LikeButton, {\n              recipeId: id,\n              userEmail: user_id,\n              pageType: \"RecipePage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recipe-image-container\",\n            children: imageUrl.length > 1 ? /*#__PURE__*/_jsxDEV(Carousel, {\n              images: imageUrl\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imageUrl[0],\n              alt: \"Card cap\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description-text\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: capitalizeFirstLetter(recipe.Description)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description-details\",\n            children: [recipe.RecipeServings || recipe.RecipeYield ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bold-text\",\n                children: \"Servings: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: recipe.RecipeServings || recipe.RecipeYield\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this) : null, recipe.Kosher ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bold-text\",\n                children: \"Kosher: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\" \", capitalizeFirstLetter(recipe.Kosher)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this) : null, recipe.RecipeCategory ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bold-text\",\n                children: \"Category: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\" \", capitalizeFirstLetter(recipe.RecipeCategory)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ingredients-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ingredients\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"title\",\n                children: \"Ingredients\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this), ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"step-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ingredient-text\",\n                  children: ingredient.name\n                }, ingredient.name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, `br-${index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"instructions\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: \"Instructions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this), recipe.RecipeInstructions.split('.').map((instruction, index) => {\n              const formattedInstruction = instruction.trim().charAt(0).toUpperCase() + instruction.trim().slice(1);\n              return instruction.trim() !== \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"step-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"step-index\",\n                  children: [index < 9 ? \"0\" : \"\", index + 1, \". \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"step-text\",\n                  children: [formattedInstruction, \".\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 21\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(NutritionTable, {\n          recipe: recipe\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tags-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"tags-icon bi bi-bookmarks-fill\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this), \"Recipe Tags\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this), recipeTags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tag\",\n            children: tag\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CommentsContainer, {\n          id: id,\n          user_id: user_id,\n          user_name: user_name,\n          recipe: recipe\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipePage, \"ZxMe0aaH6AVh09nfH3juPC5pbSE=\", false, function () {\n  return [useLocation, useParams];\n});\n_c = RecipePage;\nexport default RecipePage;\nvar _c;\n$RefreshReg$(_c, \"RecipePage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Navbar","StarRating","Loading","NutritionTable","useLocation","LikeButton","CommentsContainer","Carousel","jsxDEV","_jsxDEV","Fragment","_Fragment","defaultImageUrl","RecipePage","_s","user_name","user_id","location","state","name","id","recipe","setRecipe","imageUrl","setImageUrls","ingredients","setIngredients","recipeTags","setRecipeTags","fetchTags","response","fetch","tags","json","error","console","fetchRecipe","data","fetchIngredients","getImageUrls","ok","Array","isArray","length","urls","Promise","all","map","imageData","startsWith","urlResponse","method","warn","filteredUrls","filter","url","formatDate","inputDate","options","year","month","day","Date","toLocaleDateString","capitalizeFirstLetter","text","charAt","toUpperCase","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Name","AuthorName","DatePublished","rating","AggregatedRating","reviewCount","ReviewCount","timeKey","index","recipeId","userEmail","pageType","images","src","alt","Description","RecipeServings","RecipeYield","Kosher","RecipeCategory","ingredient","RecipeInstructions","split","instruction","formattedInstruction","trim","tag","_c","$RefreshReg$"],"sources":["C:/Users/oria3/Desktop/כללי/לימודים/שנה ג/פרוייקט גמר/code/client/src/pages/Recipe.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport Navbar from '../components/Navbar';\r\nimport StarRating from '../components/StarRating';\r\nimport Loading from '../components/Loading';\r\nimport NutritionTable from '../components/NutritionTable';\r\nimport { useLocation } from 'react-router-dom';\r\nimport './Recipe.css';\r\nimport LikeButton from '../components/LikeBtn';\r\nimport CommentsContainer from '../components/CommentsContainer';\r\nimport Carousel from '../components/Carousel';\r\n\r\n\r\n\r\nconst defaultImageUrl = '/images/logo-image.png'\r\n\r\nconst RecipePage = () => {\r\n  let user_name\r\n  let user_id\r\n  const location = useLocation();\r\n  //console.log(location)\r\n  if (location.state !== null) {\r\n    user_name = location.state.name;\r\n    user_id = location.state.user_id;\r\n    // console.log(user_name)\r\n    // console.log(user_id)\r\n  }\r\n  else {\r\n    user_name = \"Guest\"\r\n    user_id = \"Guest\"\r\n  }\r\n\r\n\r\n  const { id } = useParams();\r\n  const [recipe, setRecipe] = useState(null);\r\n  const [imageUrl, setImageUrls] = useState([]);\r\n  const [ingredients, setIngredients] = useState([]);\r\n  const [recipeTags, setRecipeTags] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchTags() {\r\n      try {\r\n        const response = await fetch(`http://localhost:1337/api/recipes/${id}/tags`);\r\n        const tags = await response.json();\r\n        setRecipeTags(tags);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n\r\n    fetchTags();\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    async function fetchRecipe() {\r\n      const response = await fetch(`http://localhost:1337/api/recipes/${id}`);\r\n      const data = await response.json();\r\n      setRecipe(data);\r\n    }\r\n    fetchRecipe();\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    async function fetchIngredients() {\r\n      try {\r\n        const response = await fetch(`http://localhost:1337/api/recipes/${id}/ingredients`);\r\n        const data = await response.json();\r\n        setIngredients(data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n\r\n    fetchIngredients();\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    async function getImageUrls() {\r\n      try {\r\n        const response = await fetch(`http://localhost:1337/api/recipes/images/${id}`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          if (Array.isArray(data) && data.length > 0) {\r\n            const urls = await Promise.all(\r\n              data.map(async (imageData) => {\r\n                if (typeof imageData === 'string' && imageData.startsWith('http')) {\r\n                  // Check if the URL is valid\r\n                  const urlResponse = await fetch(imageData, { method: 'HEAD' });\r\n                  if (urlResponse.ok) {\r\n                    return imageData;\r\n                  } else {\r\n                    console.warn(`Invalid URL: ${imageData}`);\r\n                    return null;\r\n                  }\r\n                } else {\r\n                  console.warn(`Invalid URL format: ${imageData}`);\r\n                  return null;\r\n                }\r\n              })\r\n            );\r\n\r\n            // Remove null values (invalid URLs) from the array\r\n            const filteredUrls = urls.filter((url) => url !== null);\r\n\r\n            // Set default image URL if the array becomes empty\r\n            setImageUrls(filteredUrls.length > 0 ? filteredUrls : [defaultImageUrl]);\r\n          } else {\r\n            // Handle the case when the server response is not an array or is empty\r\n            setImageUrls([defaultImageUrl]);\r\n          }\r\n        } else {\r\n          // Handle the case when the server response is not okay\r\n          setImageUrls([defaultImageUrl]);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n        // Handle the error\r\n        setImageUrls([defaultImageUrl]);\r\n      }\r\n    }\r\n\r\n    getImageUrls();\r\n  }, [id, defaultImageUrl]);\r\n\r\n  function formatDate(inputDate) {\r\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n    return new Date(inputDate).toLocaleDateString('en-US', options);\r\n  }\r\n\r\n  function capitalizeFirstLetter(text) {\r\n    return text && text.charAt(0).toUpperCase() + text.slice(1);\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Navbar name={user_name} />\r\n      {user_name && recipe ? (\r\n        <>\r\n          <div className='recipe-container'>\r\n\r\n            <div className='recipe-header'>\r\n\r\n              <div className='recipe-details'>\r\n\r\n                <h2 id=\"recipe-name\">{capitalizeFirstLetter(recipe.Name)}</h2>\r\n                <div id=\"author-date\">\r\n                  <span>{\"Recipe by \" + recipe.AuthorName}</span>\r\n                  <span className=\"author-separator\"></span>\r\n                  <span>{\"Published on \" + formatDate(recipe.DatePublished)}</span>\r\n                </div>\r\n\r\n                <StarRating rating={recipe.AggregatedRating} reviewCount={recipe.ReviewCount} />\r\n\r\n                <div className='times-container'>\r\n                {[\"PrepTime\", \"CookTime\", \"TotalTime\"].map((timeKey, index) => (\r\n                  <React.Fragment key={timeKey}>\r\n                    <div className='time'>\r\n                      <span id=\"time-number\">{recipe[timeKey] || \"0S\"}</span>\r\n                      <span id=\"time-text\">{index === 0 ? \"Prep\" : index === 1 ? \"Cook\" : \"Total\"} <br /> Time</span>\r\n                    </div>\r\n                    {index < 2 && <div className='time-separator'></div>}\r\n                  </React.Fragment>\r\n                ))}\r\n              </div>\r\n              \r\n                <LikeButton recipeId={id} userEmail={user_id} pageType=\"RecipePage\" />\r\n\r\n              </div>\r\n\r\n              <div className='recipe-image-container'>\r\n              {imageUrl.length > 1 ? (\r\n                <Carousel  images={imageUrl} />\r\n                ):(\r\n                  <img src={imageUrl[0]} alt=\"Card cap\"></img>\r\n                )}\r\n\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <div className='description'>\r\n              <div className='description-text'>\r\n                <p>{capitalizeFirstLetter(recipe.Description)}</p>\r\n\r\n              </div>\r\n              <div className='description-details'>\r\n              {recipe.RecipeServings || recipe.RecipeYield ? (\r\n                <p>\r\n                  <span className=\"bold-text\">Servings: </span>\r\n                  <span>{recipe.RecipeServings || recipe.RecipeYield}</span>\r\n                </p>\r\n              ) : null} \r\n              {recipe.Kosher ? (\r\n                <p>\r\n                <span className=\"bold-text\">Kosher: </span>\r\n                <span> {capitalizeFirstLetter(recipe.Kosher)}</span>\r\n              </p>\r\n              ) : null}             \r\n              {recipe.RecipeCategory ? (\r\n                <p>\r\n                <span className=\"bold-text\">Category: </span>\r\n                <span> {capitalizeFirstLetter(recipe.RecipeCategory)}</span>\r\n              </p>\r\n              ) : null}\r\n              </div>\r\n            </div>\r\n\r\n            <div className='recipe-body'>\r\n\r\n              <div className='ingredients-container'>\r\n                <div className='ingredients'>\r\n                  <span className=\"title\">Ingredients</span>\r\n                  {ingredients.map((ingredient, index) => (\r\n                    <div className='step-container' key={index}>\r\n                      <span className='ingredient-text' key={ingredient.name}>{ingredient.name}</span>\r\n                      <br key={`br-${index}`} />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n\r\n              </div>\r\n\r\n              <div className='instructions'>\r\n                <span className='title'>Instructions</span>\r\n                {recipe.RecipeInstructions.split('.').map((instruction, index) => {\r\n                  const formattedInstruction = instruction.trim().charAt(0).toUpperCase() + instruction.trim().slice(1);\r\n                  return instruction.trim() !== \"\" && (\r\n                    <div className='step-container' key={index}>\r\n                      <span className='step-index'>{index < 9 ? \"0\" : \"\"}{index + 1}. </span>\r\n                      <span className='step-text'>{formattedInstruction}.</span>\r\n                      <br />\r\n                    </div>\r\n                  );\r\n                })}\r\n                <br />\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <NutritionTable recipe={recipe} />\r\n\r\n            <div className='tags-container'>\r\n              <div className='title'>\r\n                <i className=\"tags-icon bi bi-bookmarks-fill\"></i>\r\n                Recipe Tags\r\n              </div>\r\n\r\n              {recipeTags.map((tag, index) => (\r\n                <span key={index} className='tag'>\r\n                  {tag}\r\n                </span>\r\n              ))}\r\n\r\n            </div>\r\n\r\n            <CommentsContainer id={id} user_id={user_id} user_name={user_name} recipe={recipe} />\r\n\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n\r\n\r\n\r\n\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <Loading />\r\n      )}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default RecipePage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}