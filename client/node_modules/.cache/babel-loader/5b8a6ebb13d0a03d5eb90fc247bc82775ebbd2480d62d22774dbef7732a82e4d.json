{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oria3\\\\Desktop\\\\\\u05DB\\u05DC\\u05DC\\u05D9\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8 \\u05D2\\u05DE\\u05E8\\\\code\\\\client\\\\src\\\\pages\\\\SearchRecipe.js\",\n  _s = $RefreshSig$();\nimport Navbar from '../components/Navbar';\nimport RecipeCard from '../components/RecipeCard';\nimport './App.css';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchRecipe = () => {\n  _s();\n  const navigate = useNavigate();\n  const [categories, setCategories] = useState([]);\n  const [expandedCategories, setExpandedCategories] = useState({});\n  const [recipes, setRecipes] = useState([]);\n  const [checkedItems, setCheckedItems] = useState({});\n  const [filteredRecipes, setFilteredRecipes] = useState([]);\n  const [filteredRecipesByName, setFilteredRecipeByNames] = useState([]);\n  const [recipesCategories, setRecipesCategories] = useState([]);\n  const [name, setName] = useState(null);\n  const [user, setUser] = useState(null);\n  const {\n    query\n  } = useParams();\n  const location = useLocation();\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const _user = jwt_decode(token);\n      setName(_user.name);\n      setUser(_user);\n      if (!_user) {\n        localStorage.removeItem('token');\n        navigate.replace('/login');\n      }\n    }\n  }, [navigate]);\n  useEffect(() => {\n    fetch(`http://localhost:1337/api/table/recipes`).then(res => res.json()).then(data => {\n      setRecipes(data);\n      setFilteredRecipes(data); // initialize filteredRecipes with all recipes\n    }).catch(error => console.error(error));\n  }, []);\n  useEffect(() => {\n    fetch(`http://localhost:1337/api/recipes_categories`).then(res => res.json()).then(data => setRecipesCategories(data)).catch(error => console.error(error));\n  }, []);\n  useEffect(() => {\n    fetch('http://localhost:1337/api/search_recipe').then(response => response.json()).then(data => {\n      const expandedCategories = {};\n      const checkedItems = {};\n      Object.keys(data).forEach(category => {\n        expandedCategories[category] = false;\n        checkedItems[category] = {};\n      });\n      setCategories(data);\n      setExpandedCategories(expandedCategories);\n      setCheckedItems(checkedItems);\n    }).catch(error => console.error(error));\n  }, []);\n  const toggleCategory = category => {\n    console.log(category);\n    setExpandedCategories({\n      ...expandedCategories,\n      [category]: !expandedCategories[category]\n    });\n  };\n  const handleCheckboxChange = (category, value) => {\n    const checkedItemsCopy = {\n      ...checkedItems\n    };\n    checkedItemsCopy[category][value] = !checkedItemsCopy[category][value];\n    setCheckedItems(checkedItemsCopy);\n    filterRecipes(); // apply filters when checkbox changes\n  };\n\n  useEffect(() => {\n    // Extract the query parameter from the search string\n    const searchParams = new URLSearchParams(location.search);\n    const queryFromURL = searchParams.get('query');\n\n    // Update the state with the query parameter\n    setSearchTerm(queryFromURL || '');\n\n    // Other logic based on the search term\n    //console.log('Search term from URL:', queryFromURL);\n\n    // If you want to perform additional logic when the search term changes,\n    // you can use the searchTerm state variable here.\n  }, [location.search]);\n  useEffect(() => {\n    if (searchTerm) {\n      console.log(\"query: \" + searchTerm);\n      const lowercaseQuery = searchTerm.toLowerCase();\n      const filteredByName = recipes.filter(recipe => recipe.Name.toLowerCase().includes(lowercaseQuery));\n      setFilteredRecipes(filteredByName);\n      setFilteredRecipeByNames(filteredByName);\n    } else {\n      // console.log(\"no query\");\n      // If query is empty, show all recipes\n      setFilteredRecipeByNames(recipes);\n    }\n  }, [searchTerm, recipes]);\n  const filterRecipes = useCallback(() => {\n    let filteredIds = {};\n    let anyChecked = false;\n    Object.keys(checkedItems).forEach(category => {\n      Object.keys(checkedItems[category]).forEach(value => {\n        if (checkedItems[category][value]) {\n          anyChecked = true;\n          const recipeCategory = \"recipe_\" + category;\n          let category_ID;\n          for (let i = 0; i < categories[category].length; i++) {\n            if (categories[category][i][1] === value.substring(2)) {\n              category_ID = categories[category][i][0];\n            }\n          }\n          const tempFilteredIds = {};\n          for (let i = 0; i < recipesCategories[recipeCategory].length; i++) {\n            const recipe = recipesCategories[recipeCategory][i];\n            if (recipe.category_ID === category_ID) {\n              tempFilteredIds[recipe.recipe_ID] = true;\n            }\n          }\n          if (Object.keys(filteredIds).length === 0) {\n            filteredIds = tempFilteredIds;\n          } else {\n            filteredIds = Object.keys(filteredIds).filter(id => tempFilteredIds[id]).reduce((obj, id) => {\n              obj[id] = true;\n              return obj;\n            }, {});\n          }\n        }\n      });\n    });\n    if (!anyChecked) {\n      // if (filteredRecipesByName.length > 0) {\n      //     setFilteredRecipes(filteredRecipesByName);\n      //     setFilteredRecipeByNames([])\n      // }else{\n      //     setFilteredRecipes(recipes);\n      // }\n      // console.log(\"!anyChecked:\"+filteredRecipesByName.length)\n      setFilteredRecipes(filteredRecipesByName);\n    } else {\n      // if (filteredRecipesByName.length > 0) {\n      //     const filteredRecipes = filteredRecipesByName.filter((recipe) => filteredIds[recipe.RecipeId]);\n      //     setFilteredRecipes(filteredRecipes);\n      //     setFilteredRecipeByNames([])\n      // }else{\n      //     const filteredRecipes = recipes.filter((recipe) => filteredIds[recipe.RecipeId]);\n      //     setFilteredRecipes(filteredRecipes);\n      // }\n      const filteredRecipes = filteredRecipesByName.filter(recipe => filteredIds[recipe.RecipeId]);\n      setFilteredRecipes(filteredRecipes);\n      console.log(\"anyChecked:\" + filteredRecipes.length);\n    }\n  }, [checkedItems, categories, recipes, recipesCategories]);\n  useEffect(() => {\n    filterRecipes();\n  }, [checkedItems, filterRecipes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [name && /*#__PURE__*/_jsxDEV(Navbar, {\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-recipe-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-menu\",\n        children: Object.keys(categories).sort((a, b) => a.localeCompare(b)).map(category => {\n          const categoryName = category.slice(0, -11).replace(/_/g, ' ');\n          const words = categoryName.toLowerCase().split(\" \");\n          const capitalizedWords = words.map(word => word.charAt(0).toUpperCase() + word.slice(1));\n          const capitalizedCategoryName = capitalizedWords.join(\" \");\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"category\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"category-header\",\n              onClick: () => toggleCategory(category),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"category-title\",\n                children: capitalizedCategoryName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-light category-toggle-btn\",\n                children: expandedCategories[category] ? \"-\" : \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 37\n            }, this), expandedCategories[category] && categories[category].sort((a, b) => a[1].localeCompare(b[1])).map(value => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-check\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-check-input\",\n                type: \"checkbox\",\n                id: `checkbox_${value}`,\n                defaultChecked: checkedItems[category][value],\n                onChange: () => handleCheckboxChange(category, value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-check-label\",\n                htmlFor: `checkbox_${value}`,\n                children: value[1]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 45\n              }, this)]\n            }, value, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 41\n            }, this))]\n          }, category, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipes-container\",\n        children: filteredRecipes.map((recipe, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe-card-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(RecipeCard, {\n            recipe: recipe,\n            user: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchRecipe, \"dxDf3UPYR9pCBKnUVmqRd5vwh0E=\", false, function () {\n  return [useNavigate, useParams, useLocation];\n});\n_c = SearchRecipe;\nexport default SearchRecipe;\nvar _c;\n$RefreshReg$(_c, \"SearchRecipe\");","map":{"version":3,"names":["Navbar","RecipeCard","React","useState","useEffect","useCallback","jwt_decode","useNavigate","useLocation","useParams","jsxDEV","_jsxDEV","SearchRecipe","_s","navigate","categories","setCategories","expandedCategories","setExpandedCategories","recipes","setRecipes","checkedItems","setCheckedItems","filteredRecipes","setFilteredRecipes","filteredRecipesByName","setFilteredRecipeByNames","recipesCategories","setRecipesCategories","name","setName","user","setUser","query","location","searchTerm","setSearchTerm","token","localStorage","getItem","_user","removeItem","replace","fetch","then","res","json","data","catch","error","console","response","Object","keys","forEach","category","toggleCategory","log","handleCheckboxChange","value","checkedItemsCopy","filterRecipes","searchParams","URLSearchParams","search","queryFromURL","get","lowercaseQuery","toLowerCase","filteredByName","filter","recipe","Name","includes","filteredIds","anyChecked","recipeCategory","category_ID","i","length","substring","tempFilteredIds","recipe_ID","id","reduce","obj","RecipeId","children","fileName","_jsxFileName","lineNumber","columnNumber","className","sort","a","b","localeCompare","map","categoryName","slice","words","split","capitalizedWords","word","charAt","toUpperCase","capitalizedCategoryName","join","onClick","type","defaultChecked","onChange","htmlFor","index","_c","$RefreshReg$"],"sources":["C:/Users/oria3/Desktop/כללי/שנה ג/פרוייקט גמר/code/client/src/pages/SearchRecipe.js"],"sourcesContent":["import Navbar from '../components/Navbar';\r\nimport RecipeCard from '../components/RecipeCard';\r\nimport './App.css';\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useNavigate,useLocation } from 'react-router-dom'\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nconst SearchRecipe = () => {\r\n    const navigate = useNavigate()\r\n    const [categories, setCategories] = useState([]);\r\n    const [expandedCategories, setExpandedCategories] = useState({});\r\n    const [recipes, setRecipes] = useState([]);\r\n    const [checkedItems, setCheckedItems] = useState({});\r\n    const [filteredRecipes, setFilteredRecipes] = useState([]);\r\n    const [filteredRecipesByName, setFilteredRecipeByNames] = useState([]);\r\n    const [recipesCategories, setRecipesCategories] = useState([]);\r\n    const [name, setName] = useState(null)\r\n    const [user, setUser] = useState(null)\r\n    const { query } = useParams();\r\n    const location = useLocation();\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token')\r\n        if (token) {\r\n            const _user = jwt_decode(token)\r\n            setName(_user.name)\r\n            setUser(_user)\r\n            if (!_user) {\r\n                localStorage.removeItem('token')\r\n                navigate.replace('/login')\r\n            }\r\n        }\r\n    }, [navigate])\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(`http://localhost:1337/api/table/recipes`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setRecipes(data);\r\n                setFilteredRecipes(data); // initialize filteredRecipes with all recipes\r\n            })\r\n            .catch(error => console.error(error))\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetch(`http://localhost:1337/api/recipes_categories`)\r\n            .then(res => res.json())\r\n            .then(data => setRecipesCategories(data))\r\n            .catch(error => console.error(error))\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:1337/api/search_recipe')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const expandedCategories = {};\r\n                const checkedItems = {};\r\n                Object.keys(data).forEach(category => {\r\n                    expandedCategories[category] = false;\r\n                    checkedItems[category] = {};\r\n                });\r\n                setCategories(data);\r\n                setExpandedCategories(expandedCategories);\r\n                setCheckedItems(checkedItems);\r\n            })\r\n            .catch(error => console.error(error));\r\n    }, []);\r\n\r\n    const toggleCategory = (category) => {\r\n        console.log(category)\r\n        setExpandedCategories({\r\n            ...expandedCategories,\r\n            [category]: !expandedCategories[category]\r\n        });\r\n    };\r\n\r\n    const handleCheckboxChange = (category, value) => {\r\n        const checkedItemsCopy = { ...checkedItems };\r\n        checkedItemsCopy[category][value] = !checkedItemsCopy[category][value];\r\n        setCheckedItems(checkedItemsCopy);\r\n        filterRecipes(); // apply filters when checkbox changes\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        // Extract the query parameter from the search string\r\n        const searchParams = new URLSearchParams(location.search);\r\n        const queryFromURL = searchParams.get('query');\r\n\r\n        // Update the state with the query parameter\r\n        setSearchTerm(queryFromURL || '');\r\n\r\n        // Other logic based on the search term\r\n        //console.log('Search term from URL:', queryFromURL);\r\n\r\n        // If you want to perform additional logic when the search term changes,\r\n        // you can use the searchTerm state variable here.\r\n    }, [location.search]);\r\n\r\n    useEffect(() => {\r\n        if (searchTerm) {\r\n            console.log(\"query: \" + searchTerm);\r\n            const lowercaseQuery = searchTerm.toLowerCase();\r\n            const filteredByName = recipes.filter(\r\n                (recipe) => recipe.Name.toLowerCase().includes(lowercaseQuery)\r\n            );\r\n            setFilteredRecipes(filteredByName);\r\n            setFilteredRecipeByNames(filteredByName);\r\n        } else {\r\n            // console.log(\"no query\");\r\n            // If query is empty, show all recipes\r\n            setFilteredRecipeByNames(recipes);\r\n        }\r\n    }, [searchTerm, recipes]);\r\n\r\n    const filterRecipes = useCallback(() => {\r\n        let filteredIds = {};\r\n        let anyChecked = false;\r\n        Object.keys(checkedItems).forEach((category) => {\r\n            Object.keys(checkedItems[category]).forEach((value) => {\r\n                if (checkedItems[category][value]) {\r\n                    anyChecked = true;\r\n                    const recipeCategory = \"recipe_\" + category;\r\n                    let category_ID;\r\n                    for (let i = 0; i < categories[category].length; i++) {\r\n                        if (categories[category][i][1] === value.substring(2)) {\r\n                            category_ID = categories[category][i][0];\r\n                        }\r\n                    }\r\n                    const tempFilteredIds = {};\r\n                    for (let i = 0; i < recipesCategories[recipeCategory].length; i++) {\r\n                        const recipe = recipesCategories[recipeCategory][i];\r\n                        if (recipe.category_ID === category_ID) {\r\n                            tempFilteredIds[recipe.recipe_ID] = true;\r\n                        }\r\n                    }\r\n                    if (Object.keys(filteredIds).length === 0) {\r\n                        filteredIds = tempFilteredIds;\r\n                    } else {\r\n                        filteredIds = Object.keys(filteredIds)\r\n                            .filter((id) => tempFilteredIds[id])\r\n                            .reduce((obj, id) => {\r\n                                obj[id] = true;\r\n                                return obj;\r\n                            }, {});\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        if (!anyChecked) {\r\n            // if (filteredRecipesByName.length > 0) {\r\n            //     setFilteredRecipes(filteredRecipesByName);\r\n            //     setFilteredRecipeByNames([])\r\n            // }else{\r\n            //     setFilteredRecipes(recipes);\r\n            // }\r\n            // console.log(\"!anyChecked:\"+filteredRecipesByName.length)\r\n            setFilteredRecipes(filteredRecipesByName);\r\n        } else {\r\n            // if (filteredRecipesByName.length > 0) {\r\n            //     const filteredRecipes = filteredRecipesByName.filter((recipe) => filteredIds[recipe.RecipeId]);\r\n            //     setFilteredRecipes(filteredRecipes);\r\n            //     setFilteredRecipeByNames([])\r\n            // }else{\r\n            //     const filteredRecipes = recipes.filter((recipe) => filteredIds[recipe.RecipeId]);\r\n            //     setFilteredRecipes(filteredRecipes);\r\n            // }\r\n            const filteredRecipes = filteredRecipesByName.filter((recipe) => filteredIds[recipe.RecipeId]);\r\n            setFilteredRecipes(filteredRecipes);\r\n            console.log(\"anyChecked:\"+filteredRecipes.length)\r\n        }\r\n    \r\n\r\n    }, [checkedItems, categories, recipes, recipesCategories]);\r\n\r\n    useEffect(() => {\r\n        filterRecipes();\r\n    }, [checkedItems, filterRecipes]);\r\n\r\n\r\n    return (\r\n        <div>\r\n            {name && <Navbar name={name} />}\r\n            <div className='search-recipe-container'>\r\n                <div className='filter-menu'>\r\n                    {Object.keys(categories)\r\n                        .sort((a, b) => a.localeCompare(b))\r\n                        .map((category) => {\r\n                            const categoryName = category.slice(0, -11).replace(/_/g, ' ');\r\n                            const words = categoryName.toLowerCase().split(\" \");\r\n                            const capitalizedWords = words.map(word => word.charAt(0).toUpperCase() + word.slice(1));\r\n                            const capitalizedCategoryName = capitalizedWords.join(\" \");\r\n                            return (\r\n                                <div className='category' key={category}>\r\n                                    <div className=\"category-header\" onClick={() => toggleCategory(category)}>\r\n                                        <span className='category-title'>{capitalizedCategoryName}</span>\r\n                                        <button className=\"btn btn-light category-toggle-btn\">{expandedCategories[category] ? \"-\" : \"+\"}</button>\r\n                                    </div>\r\n                                    {expandedCategories[category] && categories[category].sort((a, b) => a[1].localeCompare(b[1])).map((value) => (\r\n                                        <div className=\"form-check\" key={value}>\r\n                                            <input className=\"form-check-input\" type=\"checkbox\" id={`checkbox_${value}`} defaultChecked={checkedItems[category][value]} onChange={() => handleCheckboxChange(category, value)} />\r\n                                            <label className=\"form-check-label\" htmlFor={`checkbox_${value}`}>{value[1]}</label>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            );\r\n                        })}\r\n                </div>\r\n               \r\n                <div className='recipes-container'>\r\n                    {filteredRecipes.map((recipe, index) => (\r\n                        <div className='recipe-card-wrapper' key={index}>\r\n                            <RecipeCard recipe={recipe} user={user} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchRecipe\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}