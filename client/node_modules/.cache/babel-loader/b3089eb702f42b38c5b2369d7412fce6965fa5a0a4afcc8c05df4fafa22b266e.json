{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oria3\\\\Desktop\\\\\\u05DB\\u05DC\\u05DC\\u05D9\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8 \\u05D2\\u05DE\\u05E8\\\\code\\\\client\\\\src\\\\pages\\\\AddRecipe.js\",\n  _s = $RefreshSig$();\nimport Navbar from '../components/Navbar';\nimport './App.css';\nimport './AddRecipe.css';\nimport React, { useState, useEffect } from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from 'react-router-dom';\nimport AddRecipeValidation from '../components/AddRecipeValidation';\nimport Carousel from '../components/Carousel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddRecipe = () => {\n  _s();\n  const navigate = useNavigate();\n  const [name, setName] = useState(null);\n  const [user, setUser] = useState(null);\n  const [recipeName, setRecipeName] = useState('');\n  const [selectedImages, setSelectedImages] = useState([]);\n  const [cookTime, setCookTime] = useState('00:00');\n  const [prepTime, setPrepTime] = useState('00:00');\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [description, setDescription] = useState('');\n  const [recipeYield, setRecipeYield] = useState('');\n  const [categories, setCategories] = useState([]);\n  const [recipeCategories, setRecipeCategories] = useState({});\n  const [userId, setUserId] = useState('');\n  const [ingredients, setIngredients] = useState([]);\n  const [instructions, setInstructions] = useState(['']);\n  const [measurements, setMeasurements] = useState([]);\n  const [recipeIngredients, setRecipeIngredients] = useState([{\n    ingredient: '',\n    amount: '',\n    measurementId: ''\n  }]);\n  const [suggestions, setSuggestions] = useState([]);\n  const [formSubmitted, setFormSubmitted] = useState(false);\n  const [formValid, setFormValid] = useState(false);\n  const handleMeasurementChange = (index, value) => {\n    const updatedIngredients = [...recipeIngredients];\n    updatedIngredients[index].measurementId = value;\n    setRecipeIngredients(updatedIngredients);\n  };\n  const handleIngredientChange = (index, field, value) => {\n    const updatedIngredients = [...recipeIngredients];\n    updatedIngredients[index][field] = value;\n    setRecipeIngredients(updatedIngredients);\n    console.log(updatedIngredients);\n    // Call a function to filter and update the suggestions based on the current input value\n    updateIngredientSuggestions(value, index);\n  };\n  const updateIngredientSuggestions = (inputValue, index) => {\n    // Check if the length of inputValue is at least 3 before searching for suggestions\n    if (inputValue.length >= 3) {\n      const filteredIngredients = ingredients.filter(ingredient => typeof ingredient.ingredient === 'string' && ingredient.ingredient.toLowerCase().startsWith(inputValue.toLowerCase())).map(ingredient => ingredient.ingredient);\n\n      // Update the suggestions array at the specified index\n      setSuggestions(prevSuggestions => {\n        const updatedSuggestions = [...prevSuggestions];\n        updatedSuggestions[index] = filteredIngredients;\n        return updatedSuggestions;\n      });\n    } else {\n      // Clear suggestions if inputValue is less than 3 letters\n      setSuggestions(prevSuggestions => {\n        const updatedSuggestions = [...prevSuggestions];\n        updatedSuggestions[index] = [];\n        return updatedSuggestions;\n      });\n    }\n  };\n  const handleSuggestionClick = (index, suggestion) => {\n    const updatedIngredients = [...recipeIngredients];\n    updatedIngredients[index].ingredient = suggestion;\n    setRecipeIngredients(updatedIngredients);\n    // Clear suggestions for the clicked input field\n    setSuggestions([], index);\n  };\n  const addIngredient = () => {\n    setRecipeIngredients([...recipeIngredients, {\n      ingredient: '',\n      amount: ''\n    }]);\n  };\n  const removeIngredient = index => {\n    const updatedIngredients = [...recipeIngredients];\n    updatedIngredients.splice(index, 1);\n    setRecipeIngredients(updatedIngredients);\n  };\n  const addInstruction = () => {\n    setInstructions([...instructions, '']);\n  };\n  const removeInstruction = index => {\n    const updatedInstructions = [...instructions];\n    updatedInstructions.splice(index, 1);\n    setInstructions(updatedInstructions);\n  };\n  const handleInstructionChange = (index, value) => {\n    const updatedInstructions = [...instructions];\n    updatedInstructions[index] = value;\n    setInstructions(updatedInstructions);\n  };\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const _user = jwt_decode(token);\n      setName(_user.name);\n      setUser(_user);\n      setUserId(_user.email);\n      if (!_user) {\n        localStorage.removeItem('token');\n        navigate.replace('/login');\n      }\n    }\n  }, [navigate]);\n  useEffect(() => {\n    if (user) {\n      fetch(`http://localhost:1337/api/groceries`).then(res => res.json()).then(data => {\n        setIngredients(data);\n      }).catch(error => console.error(error));\n    }\n  }, [user]);\n  useEffect(() => {\n    if (user) {\n      fetch(`http://localhost:1337/api/measurements`).then(res => res.json()).then(data => {\n        setMeasurements(data);\n      }).catch(error => console.error(error));\n    }\n  }, [user]);\n  const handleImageChange = event => {\n    const files = Array.from(event.target.files);\n    // Check if adding new files will exceed the limit of 5 images\n    if (selectedImages.length + files.length > 5) {\n      alert('You can upload a maximum of 5 images.');\n      return;\n    }\n    setSelectedImages(prevImages => [...prevImages, ...files]); // Store files\n  };\n\n  const handleSubmit = async e => {\n    console.log(\"handleSubmit\");\n    e.preventDefault();\n    const isFormValid = validateForm();\n    setFormValid(isFormValid);\n    setFormSubmitted(true);\n    console.log('formValid: ' + formValid);\n    console.log('formSubmitted: ' + formSubmitted);\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n    if (isFormValid) {\n      // Iterate over recipeIngredients\n      const updatedRecipeIngredients = await Promise.all(recipeIngredients.map(async recipeIngredient => {\n        // Find the corresponding ingredient in the ingredients array\n        const matchingIngredient = ingredients.find(ingredient => ingredient.ingredient === recipeIngredient.ingredient);\n        if (matchingIngredient) {\n          // Extract the ID from the matching ingredient and update the recipeIngredient\n          recipeIngredient.id = matchingIngredient.id;\n        }\n        return recipeIngredient;\n      }));\n\n      // Update state with the modified recipeIngredients array\n      setRecipeIngredients(updatedRecipeIngredients);\n      console.log('Form Data:', {\n        recipeName,\n        selectedImages,\n        cookTime,\n        prepTime,\n        selectedCategory,\n        groceryList: recipeIngredients,\n        description,\n        recipeYield,\n        recipeInstructions: instructions,\n        recipeCategories\n      });\n      setRecipeName('');\n      setSelectedImages([]);\n      setCookTime('00:00');\n      setPrepTime('00:00');\n      setSelectedCategory('');\n      setRecipeIngredients([{\n        ingredient: '',\n        amount: '',\n        measurementId: ''\n      }]);\n      setDescription('');\n      setRecipeYield('');\n      setInstructions(['']);\n      setRecipeCategories({});\n      const formData = new FormData();\n      selectedImages.forEach((file, index) => {\n        console.log(file);\n        formData.append('selectedImages', file); // Append files to FormData\n      });\n\n      formData.append('recipeName', recipeName);\n      formData.append('cookTime', cookTime);\n      formData.append('prepTime', prepTime);\n      formData.append('selectedCategory', selectedCategory);\n      formData.append('groceryList', JSON.stringify(recipeIngredients));\n      formData.append('description', description);\n      formData.append('recipeYield', recipeYield);\n      formData.append('recipeInstructions', JSON.stringify(instructions));\n      formData.append('recipeCategories', JSON.stringify(recipeCategories));\n      formData.append('name', name);\n      formData.append('userId', userId);\n      try {\n        const response = await fetch('http://localhost:1337/api/addRecipe', {\n          method: 'POST',\n          body: formData\n        });\n        if (response.ok) {\n          const result = await response.json();\n          console.log(result); // Recipe successfully added\n          setFormSubmitted(true);\n          console.log(\"check\");\n          window.scrollTo({\n            top: 0,\n            behavior: 'smooth'\n          });\n        } else {\n          console.error(`HTTP Error: ${response.status}`);\n          // Handle error response\n        }\n      } catch (error) {\n        console.error(error);\n        // Handle fetch error (e.g., network error)\n      }\n    } else {\n      // Update state to show the error message\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    }\n  };\n  const formatCategoryName = category => {\n    return category.replace(/_/g, ' ').replace(/categories/g, '').trim().split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n  };\n  const calculateTotalMinutes = time => {\n    const [hours, minutes] = time.split(':').map(Number);\n    return hours * 60 + minutes;\n  };\n  useEffect(() => {\n    const computeTimeCategoryTag = (prep, cook) => {\n      const totalMinutes = calculateTotalMinutes(prep) + calculateTotalMinutes(cook);\n      if (totalMinutes >= 60) {\n        return 'more than 1 hour';\n      } else if (totalMinutes >= 30) {\n        return '30-60 min';\n      } else if (totalMinutes >= 15) {\n        return '15-30 min';\n      } else {\n        return '0-15 min';\n      }\n    };\n    const timeTag = computeTimeCategoryTag(prepTime, cookTime);\n\n    // Update the time category in checkedItems\n    setRecipeCategories(prevCheckedItems => ({\n      ...prevCheckedItems,\n      time_categories: {\n        [timeTag]: true\n      }\n    }));\n  }, [prepTime, cookTime]);\n  const handleRemoveTag = (category, id) => {\n    setRecipeCategories(prevCheckedItems => {\n      const updatedCheckedItems = {\n        ...prevCheckedItems\n      };\n      updatedCheckedItems[category] = {\n        ...prevCheckedItems[category],\n        [id]: false\n      };\n      return updatedCheckedItems;\n    });\n  };\n  useEffect(() => {\n    fetch('http://localhost:1337/api/search_recipe').then(response => response.json()).then(data => {\n      const initialRecipeCategories = {};\n      Object.keys(data).forEach(category => {\n        initialRecipeCategories[category] = {};\n        data[category].forEach(_ref => {\n          let [id, tagName] = _ref;\n          initialRecipeCategories[category][id] = false;\n        });\n      });\n      setCategories(data);\n      setRecipeCategories(initialRecipeCategories);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  const handleSelectChange = (category, id) => {\n    setRecipeCategories(prevCategories => {\n      if (category === 'kosher_categories' || category === 'difficulty_categories') {\n        return {\n          ...prevCategories,\n          [category]: {\n            ...{},\n            [id]: true\n          }\n        };\n      } else {\n        return {\n          ...prevCategories,\n          [category]: {\n            ...(prevCategories[category] || {}),\n            [id]: true\n          }\n        };\n      }\n    });\n  };\n  const validateForm = () => {\n    const missingFields = [];\n    if (selectedImages.length === 0) {\n      missingFields.push(\"image\");\n    }\n    if (!recipeName) {\n      missingFields.push(\"recipeName\");\n    }\n    if (prepTime === '00:00') {\n      missingFields.push(\"prepTime\");\n    }\n    if (!recipeYield) {\n      missingFields.push(\"yields\");\n    }\n    if (!description) {\n      missingFields.push(\"description\");\n    }\n    if (!selectedCategory) {\n      missingFields.push(\"category\");\n    }\n    if (instructions.length === 0) {\n      missingFields.push(\"instructions\");\n    } else {\n      instructions.forEach((instruction, index) => {\n        if (!instruction.trim()) {\n          missingFields.push(`instruction_${index}`);\n        }\n      });\n    }\n    if (recipeIngredients.length === 0) {\n      missingFields.push(\"ingredients\");\n      console.log('check');\n    } else {\n      recipeIngredients.forEach((ingredient, index) => {\n        // Check ingredient name\n        if (!ingredient.ingredient.trim()) {\n          missingFields.push(`ingredient_${index}_name`);\n        }\n\n        // Check ingredient amount\n        if (isNaN(ingredient.amount) || ingredient.amount <= 0) {\n          missingFields.push(`ingredient_${index}_amount`);\n        }\n\n        // Check ingredient measurement\n        if (!ingredient.measurementId) {\n          missingFields.push(`ingredient_${index}_measurement`);\n        }\n      });\n    }\n    const ingredientsStepsSections = document.getElementsByClassName('ingredients-steps-section');\n    console.log(ingredientsStepsSections);\n    console.log(missingFields);\n    for (const section of ingredientsStepsSections) {\n      if (missingFields.includes(section.id)) {\n        console.log('adding' + section.id);\n        section.classList.add('missing-input');\n      } else {\n        section.classList.remove('missing-input');\n      }\n    }\n    const categoryValidations = {\n      kosher_categories: false,\n      difficulty_categories: false\n      // Add more categories as needed\n    };\n\n    Object.entries(categories).forEach(_ref2 => {\n      let [category, entries] = _ref2;\n      if (category === 'kosher_categories' || category === 'difficulty_categories') {\n        const selectedOptions = Object.values(recipeCategories[category]);\n        const selectedCount = selectedOptions.filter(option => option).length;\n        if (selectedCount !== 1) {\n          categoryValidations[category] = true; // Mark as missing\n          missingFields.push(`category_${category}`);\n        } else {\n          categoryValidations[category] = false; // Reset validation if exactly one option is selected\n        }\n      }\n    });\n\n    // Apply the red shadow class to missing input fields\n    const inputFields = document.getElementsByClassName('input-field');\n    for (const field of inputFields) {\n      if (missingFields.includes(field.id)) {\n        field.classList.add('missing-input');\n      } else {\n        field.classList.remove('missing-input');\n      }\n    }\n\n    // Return true if there are no missing fields\n    return missingFields.length === 0;\n  };\n  const handleEditImage = index => {\n    // Implement edit logic here, e.g., show file input for replacing the image\n    console.log(`Editing image at index ${index}`);\n  };\n  const handleDeleteImage = index => {\n    const updatedImages = selectedImages.filter((image, i) => i !== index);\n    setSelectedImages(updatedImages);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [name && /*#__PURE__*/_jsxDEV(Navbar, {\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: user && /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"add-recipe-form needs-validation\",\n        children: [/*#__PURE__*/_jsxDEV(AddRecipeValidation, {\n          formSubmitted: formSubmitted,\n          formValid: formValid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-details two-sections-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-left image-details-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"add-image-head\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"black-title\",\n                children: \"Add Images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"image\",\n              className: \"input-field image-container\",\n              children: selectedImages.length === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"custom-file-upload\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-images\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 475,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"input-file\",\n                    type: \"file\",\n                    accept: \"image/*\",\n                    multiple: true,\n                    onChange: handleImageChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 476,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 474,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"add-file-title\",\n                  children: \"Upload images\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true) : selectedImages.length === 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"edit-image\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"recipe-image-upload\",\n                  src: URL.createObjectURL(selectedImages[0]),\n                  alt: \"Selected\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"image-actions\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleEditImage(0),\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      class: \"bi bi-pencil-fill\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 495,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 494,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleDeleteImage(0),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 497,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 41\n              }, this) : /*#__PURE__*/_jsxDEV(Carousel, {\n                id: \"carousel\",\n                images: selectedImages.map(file => URL.createObjectURL(file)),\n                fromAddRecipe: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-right image-details-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"description-head\",\n              children: \"Add Your Recipe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"description-bottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"black-title\",\n                children: \"Recipe Name & Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"description-fields\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"desc-field\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"input-title\",\n                    children: \"Recipe Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 514,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"recipeName\",\n                    className: \"input-field\",\n                    type: \"text\",\n                    value: recipeName || '',\n                    onChange: e => setRecipeName(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 515,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"times-yields\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"desc-field\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"input-title\",\n                      children: \"Prep Time\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 528,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      id: \"prepTime\",\n                      className: \"input-field time-field\",\n                      type: \"time\",\n                      value: prepTime,\n                      onChange: e => setPrepTime(e.target.value),\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 529,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 527,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"desc-field\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"input-title\",\n                      children: \"Cook Time\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 540,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"input-field time-field\",\n                      type: \"time\",\n                      value: cookTime,\n                      onChange: e => setCookTime(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 541,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 539,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"desc-field yields-field\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"input-title\",\n                      children: \"Yields /Servings\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 550,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      id: \"yields\",\n                      className: \"input-field\",\n                      type: \"text\",\n                      value: recipeYield,\n                      onChange: e => setRecipeYield(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 551,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 549,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 525,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"desc-field\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"input-title\",\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 562,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    id: \"description\",\n                    className: \"input-field desc-textbox\",\n                    value: description,\n                    onChange: e => setDescription(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 563,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 561,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"desc-field\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"input-title\",\n                    children: \"Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 572,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    id: \"category\",\n                    className: \"input-field category-desc\",\n                    value: selectedCategory,\n                    onChange: e => setSelectedCategory(e.target.value),\n                    required: true,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      disabled: true,\n                      children: \"Select Category\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 580,\n                      columnNumber: 49\n                    }, this), Object.entries(categories).map(_ref3 => {\n                      let [category, entries] = _ref3;\n                      return entries.map(_ref4 => {\n                        let [id, tagName] = _ref4;\n                        return /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: tagName,\n                          children: tagName\n                        }, id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 585,\n                          columnNumber: 57\n                        }, this);\n                      });\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 573,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 571,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ingredients-steps two-sections-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"ingredients\",\n            className: \"section-left ingredients-steps-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"black-title\",\n              children: \"Ingredients\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"steps-container\",\n              children: [recipeIngredients.length === 0 ?\n              /*#__PURE__*/\n              // Error message when instructions array is empty\n              _jsxDEV(\"div\", {\n                className: \"error-message-empty\",\n                children: \"Please add at least one ingredient.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 608,\n                columnNumber: 41\n              }, this) :\n              /*#__PURE__*/\n              // Render instructions container with inputs\n              _jsxDEV(_Fragment, {\n                children: recipeIngredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"instruction-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"input-container\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      id: `ingredient_${index}_name`,\n                      className: \"input-field ingredient-input\",\n                      placeholder: `Ingredient ${index + 1}`,\n                      value: ingredient.ingredient,\n                      onChange: e => handleIngredientChange(index, 'ingredient', e.target.value),\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 616,\n                      columnNumber: 57\n                    }, this), Array.isArray(suggestions[index]) && suggestions[index].length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"ingredient-suggestions\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"toggle-bar\",\n                        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                          children: suggestions[index].map((suggestion, suggestionIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n                            onClick: () => handleSuggestionClick(index, suggestion),\n                            children: suggestion\n                          }, suggestionIndex, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 630,\n                            columnNumber: 77\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 628,\n                          columnNumber: 69\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 627,\n                        columnNumber: 65\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 626,\n                      columnNumber: 61\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 615,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: `ingredient_${index}_amount`,\n                    type: \"number\",\n                    className: \"input-field step-input amount-input\",\n                    placeholder: `Amount ${index + 1}`,\n                    value: ingredient.amount,\n                    onChange: e => handleIngredientChange(index, 'amount', e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 641,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    id: `ingredient_${index}_measurement`,\n                    className: \"input-field step-input measure-input selectWithScrollbar\",\n                    value: ingredient.measurementId || '',\n                    onChange: e => handleMeasurementChange(index, e.target.value),\n                    required: true,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      disabled: true,\n                      children: `Measurement ${index + 1}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 658,\n                      columnNumber: 57\n                    }, this), measurements.map((measurement, measurementIndex) => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: measurement.measurement_id,\n                      children: measurement.measurement\n                    }, measurementIndex, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 660,\n                      columnNumber: 61\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 651,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                    onClick: () => removeIngredient(index),\n                    className: \"bi bi-x-circle remove-icon\",\n                    title: \"Remove Ingredient\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 666,\n                    columnNumber: 53\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 613,\n                  columnNumber: 49\n                }, this))\n              }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: addIngredient,\n                className: \"add-btn-add-recipe\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-plus-circle add-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 677,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Add another ingredient\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 678,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 676,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"instructions\",\n            className: \"section-right ingredients-steps-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"black-title\",\n              children: \"Instructions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 686,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"steps-container\",\n              children: [instructions.length === 0 ?\n              /*#__PURE__*/\n              // Error message when instructions array is empty\n              _jsxDEV(\"div\", {\n                className: \"error-message-empty\",\n                children: \"Please add at least one instruction.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 691,\n                columnNumber: 41\n              }, this) :\n              /*#__PURE__*/\n              // Render instructions container with inputs\n              _jsxDEV(_Fragment, {\n                children: instructions.map((instruction, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"instruction-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    id: `instruction_${index}`,\n                    className: \"input-field step-input\",\n                    placeholder: `Instruction ${index + 1}`,\n                    value: instruction,\n                    onChange: e => handleInstructionChange(index, e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 697,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                    onClick: () => removeInstruction(index),\n                    className: \"bi bi-x-circle remove-icon\",\n                    title: \"Remove Instruction\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 705,\n                    columnNumber: 53\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 696,\n                  columnNumber: 49\n                }, this))\n              }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: addInstruction,\n                className: \"add-btn-add-recipe\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-plus-circle add-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 715,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Add another instruction\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 716,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 714,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 688,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 685,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tags-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"black-title\",\n            children: \"Tags\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 725,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tags-container\",\n            children: [categories && ['difficulty_categories', 'kosher_categories'].map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"select-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"category-name\",\n                children: [formatCategoryName(category), \" *\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 731,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: `category_${category}`,\n                className: \"input-field select-category\",\n                value: recipeCategories[category],\n                onChange: e => handleSelectChange(category, e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: [\"Select \", formatCategoryName(category)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 738,\n                  columnNumber: 45\n                }, this), categories[category] && categories[category].map(_ref5 => {\n                  let [id, tagName] = _ref5;\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: id,\n                    children: tagName\n                  }, id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 740,\n                    columnNumber: 49\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 732,\n                columnNumber: 41\n              }, this)]\n            }, category, true, {\n              fileName: _jsxFileName,\n              lineNumber: 730,\n              columnNumber: 37\n            }, this)), categories && Object.entries(categories).map(_ref6 => {\n              let [category, entries] = _ref6;\n              return category !== 'time_categories' && category !== 'difficulty_categories' && category !== 'kosher_categories' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"select-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"category-name\",\n                  children: formatCategoryName(category)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 752,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: `category_${category}`,\n                  className: \"input-field select-category\",\n                  value: recipeCategories[category],\n                  onChange: e => handleSelectChange(category, e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: [\"Select \", formatCategoryName(category)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 759,\n                    columnNumber: 49\n                  }, this), entries && entries.map(_ref7 => {\n                    let [id, tagName] = _ref7;\n                    return /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: id,\n                      children: tagName\n                    }, id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 761,\n                      columnNumber: 53\n                    }, this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 753,\n                  columnNumber: 45\n                }, this)]\n              }, category, true, {\n                fileName: _jsxFileName,\n                lineNumber: 751,\n                columnNumber: 41\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 727,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"separator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 772,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-tags-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"black-title\",\n              children: \"Selected Tags\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 775,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-tags\",\n              children: Object.entries(recipeCategories).map(_ref8 => {\n                let [category, tags] = _ref8;\n                return category !== 'time_categories' && Object.entries(tags).map(_ref9 => {\n                  let [id, checked] = _ref9;\n                  return checked && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"tag-container\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"tag-rec\",\n                      children: categories[category].find(_ref10 => {\n                        let [tagId] = _ref10;\n                        return tagId === parseInt(id, 10);\n                      })[1]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 782,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bi bi-x-circle remove-icon remove-tag\",\n                      onClick: () => handleRemoveTag(category, id)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 785,\n                      columnNumber: 57\n                    }, this)]\n                  }, id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 781,\n                    columnNumber: 53\n                  }, this);\n                });\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 776,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 774,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submit-section\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"publish-btn\",\n            type: \"submit\",\n            onClick: handleSubmit,\n            children: \"Publish\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 802,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 801,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 457,\n    columnNumber: 9\n  }, this);\n};\n_s(AddRecipe, \"XoUC4tjUtJS20sGErZsVSDUwt/4=\", false, function () {\n  return [useNavigate];\n});\n_c = AddRecipe;\nexport default AddRecipe;\nvar _c;\n$RefreshReg$(_c, \"AddRecipe\");","map":{"version":3,"names":["Navbar","React","useState","useEffect","jwt_decode","useNavigate","AddRecipeValidation","Carousel","jsxDEV","_jsxDEV","Fragment","_Fragment","AddRecipe","_s","navigate","name","setName","user","setUser","recipeName","setRecipeName","selectedImages","setSelectedImages","cookTime","setCookTime","prepTime","setPrepTime","selectedCategory","setSelectedCategory","description","setDescription","recipeYield","setRecipeYield","categories","setCategories","recipeCategories","setRecipeCategories","userId","setUserId","ingredients","setIngredients","instructions","setInstructions","measurements","setMeasurements","recipeIngredients","setRecipeIngredients","ingredient","amount","measurementId","suggestions","setSuggestions","formSubmitted","setFormSubmitted","formValid","setFormValid","handleMeasurementChange","index","value","updatedIngredients","handleIngredientChange","field","console","log","updateIngredientSuggestions","inputValue","length","filteredIngredients","filter","toLowerCase","startsWith","map","prevSuggestions","updatedSuggestions","handleSuggestionClick","suggestion","addIngredient","removeIngredient","splice","addInstruction","removeInstruction","updatedInstructions","handleInstructionChange","token","localStorage","getItem","_user","email","removeItem","replace","fetch","then","res","json","data","catch","error","handleImageChange","event","files","Array","from","target","alert","prevImages","handleSubmit","e","preventDefault","isFormValid","validateForm","window","scrollTo","top","behavior","updatedRecipeIngredients","Promise","all","recipeIngredient","matchingIngredient","find","id","groceryList","recipeInstructions","formData","FormData","forEach","file","append","JSON","stringify","response","method","body","ok","result","status","formatCategoryName","category","trim","split","word","charAt","toUpperCase","slice","join","calculateTotalMinutes","time","hours","minutes","Number","computeTimeCategoryTag","prep","cook","totalMinutes","timeTag","prevCheckedItems","time_categories","handleRemoveTag","updatedCheckedItems","initialRecipeCategories","Object","keys","_ref","tagName","handleSelectChange","prevCategories","missingFields","push","instruction","isNaN","ingredientsStepsSections","document","getElementsByClassName","section","includes","classList","add","remove","categoryValidations","kosher_categories","difficulty_categories","entries","_ref2","selectedOptions","values","selectedCount","option","inputFields","handleEditImage","handleDeleteImage","updatedImages","image","i","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","accept","multiple","onChange","src","URL","createObjectURL","alt","onClick","class","images","fromAddRecipe","required","disabled","_ref3","_ref4","placeholder","isArray","suggestionIndex","measurement","measurementIndex","measurement_id","title","_ref5","_ref6","_ref7","_ref8","tags","_ref9","checked","_ref10","tagId","parseInt","_c","$RefreshReg$"],"sources":["C:/Users/oria3/Desktop/כללי/לימודים/שנה ג/פרוייקט גמר/code/client/src/pages/AddRecipe.js"],"sourcesContent":["import Navbar from '../components/Navbar';\nimport './App.css';\nimport './AddRecipe.css'\nimport React, { useState, useEffect } from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from 'react-router-dom'\nimport AddRecipeValidation from '../components/AddRecipeValidation';\nimport Carousel from '../components/Carousel';\n\nconst AddRecipe = () => {\n    const navigate = useNavigate()\n    const [name, setName] = useState(null)\n    const [user, setUser] = useState(null)\n    const [recipeName, setRecipeName] = useState('');\n    const [selectedImages, setSelectedImages] = useState([]);\n    const [cookTime, setCookTime] = useState('00:00');\n    const [prepTime, setPrepTime] = useState('00:00');\n    const [selectedCategory, setSelectedCategory] = useState('');\n    const [description, setDescription] = useState('');\n    const [recipeYield, setRecipeYield] = useState('');\n    const [categories, setCategories] = useState([]);\n    const [recipeCategories, setRecipeCategories] = useState({});\n    const [userId, setUserId] = useState('');\n    const [ingredients, setIngredients] = useState([])\n    const [instructions, setInstructions] = useState(['']);\n    const [measurements, setMeasurements] = useState([]);\n    const [recipeIngredients, setRecipeIngredients] = useState([{ ingredient: '', amount: '', measurementId: '' }]);\n    const [suggestions, setSuggestions] = useState([]);\n    const [formSubmitted, setFormSubmitted] = useState(false);\n    const [formValid, setFormValid] = useState(false);\n\n    const handleMeasurementChange = (index, value) => {\n        const updatedIngredients = [...recipeIngredients];\n        updatedIngredients[index].measurementId = value;\n        setRecipeIngredients(updatedIngredients);\n    };\n\n    const handleIngredientChange = (index, field, value) => {\n        const updatedIngredients = [...recipeIngredients];\n        updatedIngredients[index][field] = value;\n        setRecipeIngredients(updatedIngredients);\n        console.log(updatedIngredients)\n        // Call a function to filter and update the suggestions based on the current input value\n        updateIngredientSuggestions(value, index);\n    };\n\n    const updateIngredientSuggestions = (inputValue, index) => {\n        // Check if the length of inputValue is at least 3 before searching for suggestions\n        if (inputValue.length >= 3) {\n            const filteredIngredients = ingredients\n                .filter((ingredient) =>\n                    typeof ingredient.ingredient === 'string' &&\n                    ingredient.ingredient.toLowerCase().startsWith(inputValue.toLowerCase())\n                )\n                .map((ingredient) => ingredient.ingredient);\n\n            // Update the suggestions array at the specified index\n            setSuggestions((prevSuggestions) => {\n                const updatedSuggestions = [...prevSuggestions];\n                updatedSuggestions[index] = filteredIngredients;\n                return updatedSuggestions;\n            });\n        } else {\n            // Clear suggestions if inputValue is less than 3 letters\n            setSuggestions((prevSuggestions) => {\n                const updatedSuggestions = [...prevSuggestions];\n                updatedSuggestions[index] = [];\n                return updatedSuggestions;\n            });\n        }\n    };\n\n    const handleSuggestionClick = (index, suggestion) => {\n        const updatedIngredients = [...recipeIngredients];\n\n        updatedIngredients[index].ingredient = suggestion;\n        setRecipeIngredients(updatedIngredients);\n        // Clear suggestions for the clicked input field\n        setSuggestions([], index);\n    };\n\n    const addIngredient = () => {\n        setRecipeIngredients([...recipeIngredients, { ingredient: '', amount: '' }]);\n    };\n\n    const removeIngredient = (index) => {\n        const updatedIngredients = [...recipeIngredients];\n        updatedIngredients.splice(index, 1);\n        setRecipeIngredients(updatedIngredients);\n    };\n\n    const addInstruction = () => {\n        setInstructions([...instructions, '']);\n    };\n\n    const removeInstruction = (index) => {\n        const updatedInstructions = [...instructions];\n        updatedInstructions.splice(index, 1);\n        setInstructions(updatedInstructions);\n    };\n\n    const handleInstructionChange = (index, value) => {\n        const updatedInstructions = [...instructions];\n        updatedInstructions[index] = value;\n        setInstructions(updatedInstructions);\n    };\n\n    useEffect(() => {\n        const token = localStorage.getItem('token')\n        if (token) {\n            const _user = jwt_decode(token)\n            setName(_user.name)\n            setUser(_user)\n            setUserId(_user.email)\n            if (!_user) {\n                localStorage.removeItem('token')\n                navigate.replace('/login')\n            }\n        }\n    }, [navigate])\n\n    useEffect(() => {\n        if (user) {\n            fetch(`http://localhost:1337/api/groceries`)\n                .then(res => res.json())\n                .then(data => {\n                    setIngredients(data)\n                })\n                .catch(error => console.error(error))\n        }\n    }, [user]);\n\n    useEffect(() => {\n        if (user) {\n            fetch(`http://localhost:1337/api/measurements`)\n                .then(res => res.json())\n                .then(data => {\n                    setMeasurements(data)\n                })\n                .catch(error => console.error(error))\n        }\n    }, [user]);\n\n    const handleImageChange = (event) => {\n        const files = Array.from(event.target.files);\n        // Check if adding new files will exceed the limit of 5 images\n        if (selectedImages.length + files.length > 5) {\n            alert('You can upload a maximum of 5 images.');\n            return;\n        }\n        setSelectedImages(prevImages => [...prevImages, ...files]); // Store files\n    };\n\n    const handleSubmit = async (e) => {\n        console.log(\"handleSubmit\")\n        e.preventDefault();\n\n        const isFormValid = validateForm();\n        setFormValid(isFormValid)\n        setFormSubmitted(true);\n        console.log('formValid: ' + formValid)\n        console.log('formSubmitted: ' + formSubmitted)\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n        if (isFormValid) {\n\n            // Iterate over recipeIngredients\n            const updatedRecipeIngredients = await Promise.all(recipeIngredients.map(async (recipeIngredient) => {\n                // Find the corresponding ingredient in the ingredients array\n                const matchingIngredient = ingredients.find((ingredient) => ingredient.ingredient === recipeIngredient.ingredient);\n\n                if (matchingIngredient) {\n                    // Extract the ID from the matching ingredient and update the recipeIngredient\n                    recipeIngredient.id = matchingIngredient.id;\n                }\n\n                return recipeIngredient;\n            }));\n\n            // Update state with the modified recipeIngredients array\n            setRecipeIngredients(updatedRecipeIngredients);\n\n            console.log('Form Data:', {\n                recipeName,\n                selectedImages,\n                cookTime,\n                prepTime,\n                selectedCategory,\n                groceryList: recipeIngredients,\n                description,\n                recipeYield,\n                recipeInstructions: instructions,\n                recipeCategories,\n            });\n            setRecipeName('');\n            setSelectedImages([]);\n            setCookTime('00:00');\n            setPrepTime('00:00');\n            setSelectedCategory('');\n            setRecipeIngredients([{ ingredient: '', amount: '', measurementId: '' }]);\n            setDescription('');\n            setRecipeYield('');\n            setInstructions(['']);\n            setRecipeCategories({});\n            const formData = new FormData();\n            selectedImages.forEach((file, index) => {\n                console.log(file)\n                formData.append('selectedImages', file); // Append files to FormData\n            });\n            formData.append('recipeName', recipeName);\n            formData.append('cookTime', cookTime);\n            formData.append('prepTime', prepTime);\n            formData.append('selectedCategory', selectedCategory);\n            formData.append('groceryList', JSON.stringify(recipeIngredients));\n            formData.append('description', description);\n            formData.append('recipeYield', recipeYield);\n            formData.append('recipeInstructions', JSON.stringify(instructions));\n            formData.append('recipeCategories', JSON.stringify(recipeCategories));\n            formData.append('name', name);\n            formData.append('userId', userId);\n\n            try {\n                const response = await fetch('http://localhost:1337/api/addRecipe', {\n                    method: 'POST',\n                    body: formData,\n                });\n                if (response.ok) {\n                    const result = await response.json();\n                    console.log(result); // Recipe successfully added\n                    setFormSubmitted(true);\n                    console.log(\"check\")\n                    window.scrollTo({ top: 0, behavior: 'smooth' });\n                } else {\n                    console.error(`HTTP Error: ${response.status}`);\n                    // Handle error response\n                }\n            } catch (error) {\n                console.error(error);\n                // Handle fetch error (e.g., network error)\n            }\n\n        } else {\n            // Update state to show the error message\n            window.scrollTo({ top: 0, behavior: 'smooth' });\n        }\n    };\n\n    const formatCategoryName = (category) => {\n        return category\n            .replace(/_/g, ' ')\n            .replace(/categories/g, '')\n            .trim()\n            .split(' ')\n            .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n            .join(' ');\n    };\n\n    const calculateTotalMinutes = (time) => {\n        const [hours, minutes] = time.split(':').map(Number);\n        return hours * 60 + minutes;\n    };\n\n    useEffect(() => {\n        const computeTimeCategoryTag = (prep, cook) => {\n            const totalMinutes = calculateTotalMinutes(prep) + calculateTotalMinutes(cook);\n\n            if (totalMinutes >= 60) {\n                return 'more than 1 hour';\n            } else if (totalMinutes >= 30) {\n                return '30-60 min';\n            } else if (totalMinutes >= 15) {\n                return '15-30 min';\n            } else {\n                return '0-15 min';\n            }\n        };\n\n        const timeTag = computeTimeCategoryTag(prepTime, cookTime);\n\n        // Update the time category in checkedItems\n        setRecipeCategories((prevCheckedItems) => ({\n            ...prevCheckedItems,\n            time_categories: {\n                [timeTag]: true,\n            },\n        }));\n    }, [prepTime, cookTime]);\n\n    const handleRemoveTag = (category, id) => {\n        setRecipeCategories((prevCheckedItems) => {\n            const updatedCheckedItems = { ...prevCheckedItems };\n            updatedCheckedItems[category] = {\n                ...prevCheckedItems[category],\n                [id]: false,\n            };\n            return updatedCheckedItems;\n        });\n    };\n\n    useEffect(() => {\n        fetch('http://localhost:1337/api/search_recipe')\n            .then(response => response.json())\n            .then(data => {\n                const initialRecipeCategories = {};\n                Object.keys(data).forEach(category => {\n                    initialRecipeCategories[category] = {};\n                    data[category].forEach(([id, tagName]) => {\n                        initialRecipeCategories[category][id] = false;\n                    });\n                });\n                setCategories(data);\n                setRecipeCategories(initialRecipeCategories);\n            })\n            .catch(error => {\n                console.error(error);\n            });\n    }, []);\n\n    const handleSelectChange = (category, id) => {\n        setRecipeCategories((prevCategories) => {\n            if (category === 'kosher_categories' || category === 'difficulty_categories') {\n                return {\n                    ...prevCategories,\n                    [category]: {\n                        ...({}),\n                        [id]: true,\n                    },\n                };\n            } else {\n                return {\n                    ...prevCategories,\n                    [category]: {\n                        ...(prevCategories[category] || {}),\n                        [id]: true,\n                    },\n                };\n            }\n        });\n    };\n\n    const validateForm = () => {\n\n        const missingFields = [];\n\n        if (selectedImages.length === 0) {\n            missingFields.push(\"image\");\n        }\n        if (!recipeName) {\n            missingFields.push(\"recipeName\");\n        }\n        if (prepTime === '00:00') {\n            missingFields.push(\"prepTime\");\n        }\n        if (!recipeYield) {\n            missingFields.push(\"yields\");\n        }\n        if (!description) {\n            missingFields.push(\"description\");\n        }\n        if (!selectedCategory) {\n            missingFields.push(\"category\");\n        }\n\n        if (instructions.length === 0) {\n            missingFields.push(\"instructions\");\n        }\n        else {\n            instructions.forEach((instruction, index) => {\n                if (!instruction.trim()) {\n                    missingFields.push(`instruction_${index}`);\n                }\n            });\n        }\n\n        if (recipeIngredients.length === 0) {\n            missingFields.push(\"ingredients\");\n            console.log('check')\n        }\n        else {\n\n            recipeIngredients.forEach((ingredient, index) => {\n                // Check ingredient name\n                if (!ingredient.ingredient.trim()) {\n                    missingFields.push(`ingredient_${index}_name`);\n                }\n\n                // Check ingredient amount\n                if (isNaN(ingredient.amount) || ingredient.amount <= 0) {\n                    missingFields.push(`ingredient_${index}_amount`);\n                }\n\n                // Check ingredient measurement\n                if (!ingredient.measurementId) {\n                    missingFields.push(`ingredient_${index}_measurement`);\n                }\n            });\n\n        }\n\n\n        const ingredientsStepsSections = document.getElementsByClassName('ingredients-steps-section');\n        console.log(ingredientsStepsSections)\n        console.log(missingFields)\n        for (const section of ingredientsStepsSections) {\n            if (missingFields.includes(section.id)) {\n                console.log('adding' + section.id)\n                section.classList.add('missing-input');\n            } else {\n                section.classList.remove('missing-input');\n            }\n        }\n\n        const categoryValidations = {\n            kosher_categories: false,\n            difficulty_categories: false,\n            // Add more categories as needed\n        };\n\n        Object.entries(categories).forEach(([category, entries]) => {\n            if (category === 'kosher_categories' || category === 'difficulty_categories') {\n                const selectedOptions = Object.values(recipeCategories[category]);\n                const selectedCount = selectedOptions.filter(option => option).length;\n\n                if (selectedCount !== 1) {\n                    categoryValidations[category] = true;  // Mark as missing\n                    missingFields.push(`category_${category}`);\n                } else {\n                    categoryValidations[category] = false;  // Reset validation if exactly one option is selected\n                }\n            }\n        });\n\n        // Apply the red shadow class to missing input fields\n        const inputFields = document.getElementsByClassName('input-field');\n        for (const field of inputFields) {\n            if (missingFields.includes(field.id)) {\n                field.classList.add('missing-input');\n            } else {\n                field.classList.remove('missing-input');\n            }\n        }\n\n        // Return true if there are no missing fields\n        return missingFields.length === 0;\n    };\n\n    const handleEditImage = (index) => {\n        // Implement edit logic here, e.g., show file input for replacing the image\n        console.log(`Editing image at index ${index}`);\n    };\n\n    const handleDeleteImage = (index) => {\n        const updatedImages = selectedImages.filter((image, i) => i !== index);\n        setSelectedImages(updatedImages);\n    };\n\n    return (\n        <div>\n            {name && <Navbar name={name} />}\n            <div>\n                {user && (\n                    <form className='add-recipe-form needs-validation' >\n                        <AddRecipeValidation formSubmitted={formSubmitted} formValid={formValid} />\n\n                        <div className='image-details two-sections-wrapper'>\n\n                            <div className='section-left image-details-left'>\n                                <div className='add-image-head'>\n                                    <label className='black-title'>Add Images</label>\n                                </div>\n\n                                <div id='image' className='input-field image-container'>\n                                    {selectedImages.length === 0 ? (\n                                        <>\n                                            <label className=\"custom-file-upload\">\n                                                <i className=\"bi bi-images\"></i>\n                                                <input\n                                                    className=\"input-file\"\n                                                    type=\"file\"\n                                                    accept=\"image/*\"\n                                                    multiple\n                                                    onChange={handleImageChange}\n                                                />\n                                            </label>\n                                            <label className='add-file-title'>Upload images</label>\n                                        </>\n                                    ) : selectedImages.length === 1 ? (\n                                        <div className=\"edit-image\">\n                                            <img\n                                                className='recipe-image-upload'\n                                                src={URL.createObjectURL(selectedImages[0])}\n                                                alt=\"Selected\"\n                                            />\n                                            <div className=\"image-actions\">\n                                                <button onClick={() => handleEditImage(0)}>\n                                                    <i class=\"bi bi-pencil-fill\"></i>\n                                                </button>\n                                                <button onClick={() => handleDeleteImage(0)}>Delete</button>\n                                            </div>\n                                        </div>\n                                    ) : (\n                                        <Carousel id='carousel' images={selectedImages.map(file => URL.createObjectURL(file))} fromAddRecipe={true} />\n                                    )}\n                                </div>\n\n                            </div>\n\n                            <div className='section-right image-details-right'>\n                                <div className='description-head'>Add Your Recipe</div>\n                                <div className='description-bottom'>\n                                    <div className='black-title'>Recipe Name & Description</div>\n\n                                    <div className='description-fields'>\n                                        <div className='desc-field'>\n                                            <label className='input-title'>Recipe Name</label>\n                                            <input\n                                                id='recipeName'\n                                                className='input-field'\n                                                type=\"text\"\n                                                value={recipeName || ''}\n                                                onChange={(e) => setRecipeName(e.target.value)}\n                                                required\n                                            />\n                                        </div>\n\n                                        <div className='times-yields'>\n\n                                            <div className='desc-field'>\n                                                <label className='input-title'>Prep Time</label>\n                                                <input\n                                                    id='prepTime'\n                                                    className='input-field time-field'\n                                                    type=\"time\"\n                                                    value={prepTime}\n                                                    onChange={(e) => setPrepTime(e.target.value)}\n                                                    required\n                                                />\n                                            </div>\n\n                                            <div className='desc-field'>\n                                                <label className='input-title'>Cook Time</label>\n                                                <input\n                                                    className='input-field time-field'\n                                                    type=\"time\"\n                                                    value={cookTime}\n                                                    onChange={(e) => setCookTime(e.target.value)}\n                                                />\n                                            </div>\n\n                                            <div className='desc-field yields-field'>\n                                                <label className='input-title'>Yields /Servings</label>\n                                                <input\n                                                    id='yields'\n                                                    className='input-field'\n                                                    type=\"text\"\n                                                    value={recipeYield}\n                                                    onChange={(e) => setRecipeYield(e.target.value)}\n                                                />\n                                            </div>\n                                        </div>\n\n                                        <div className='desc-field'>\n                                            <label className='input-title'>Description</label>\n                                            <textarea\n                                                id='description'\n                                                className='input-field desc-textbox'\n                                                value={description}\n                                                onChange={(e) => setDescription(e.target.value)}\n                                            />\n                                        </div>\n\n                                        <div className='desc-field'>\n                                            <label className='input-title'>Category</label>\n                                            <select\n                                                id='category'\n                                                className='input-field category-desc'\n                                                value={selectedCategory}\n                                                onChange={(e) => setSelectedCategory(e.target.value)}\n                                                required\n                                            >\n                                                <option value=\"\" disabled>\n                                                    Select Category\n                                                </option>\n                                                {Object.entries(categories).map(([category, entries]) => (\n                                                    entries.map(([id, tagName]) => (\n                                                        <option key={id} value={tagName}>\n                                                            {tagName}\n                                                        </option>\n                                                    ))\n                                                ))}\n                                            </select>\n                                        </div>\n\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className='ingredients-steps two-sections-wrapper'>\n\n                            <div id=\"ingredients\" className='section-left ingredients-steps-section'>\n                                <label className='black-title'>Ingredients</label>\n\n\n                                <div className='steps-container'>\n\n                                    {recipeIngredients.length === 0 ? (\n                                        // Error message when instructions array is empty\n                                        <div className='error-message-empty'>Please add at least one ingredient.</div>\n                                    ) : (\n                                        // Render instructions container with inputs\n                                        <>\n                                            {recipeIngredients.map((ingredient, index) => (\n                                                <div key={index} className='instruction-row'>\n\n                                                    <div className=\"input-container\">\n                                                        <input\n                                                            id={`ingredient_${index}_name`}\n                                                            className='input-field ingredient-input'\n                                                            placeholder={`Ingredient ${index + 1}`}\n                                                            value={ingredient.ingredient}\n                                                            onChange={(e) => handleIngredientChange(index, 'ingredient', e.target.value)}\n                                                            required\n                                                        />\n\n                                                        {Array.isArray(suggestions[index]) && suggestions[index].length > 0 && (\n                                                            <div className='ingredient-suggestions'>\n                                                                <div className='toggle-bar'>\n                                                                    <ul>\n                                                                        {suggestions[index].map((suggestion, suggestionIndex) => (\n                                                                            <li key={suggestionIndex} onClick={() => handleSuggestionClick(index, suggestion)}>\n                                                                                {suggestion}\n                                                                            </li>\n                                                                        ))}\n                                                                    </ul>\n                                                                </div>\n                                                            </div>\n                                                        )}\n\n                                                    </div>\n\n                                                    <input\n                                                        id={`ingredient_${index}_amount`}\n                                                        type=\"number\"\n                                                        className='input-field step-input amount-input'\n                                                        placeholder={`Amount ${index + 1}`}\n                                                        value={ingredient.amount}\n                                                        onChange={(e) => handleIngredientChange(index, 'amount', e.target.value)}\n                                                        required\n                                                    />\n\n                                                    <select\n                                                        id={`ingredient_${index}_measurement`}\n                                                        className='input-field step-input measure-input selectWithScrollbar'\n                                                        value={ingredient.measurementId || ''}\n                                                        onChange={(e) => handleMeasurementChange(index, e.target.value)}\n                                                        required\n                                                    >\n                                                        <option value='' disabled>{`Measurement ${index + 1}`}</option>\n                                                        {measurements.map((measurement, measurementIndex) => (\n                                                            <option key={measurementIndex} value={measurement.measurement_id}>\n                                                                {measurement.measurement}\n                                                            </option>\n                                                        ))}\n                                                    </select>\n\n                                                    <i\n                                                        onClick={() => removeIngredient(index)}\n                                                        className='bi bi-x-circle remove-icon'\n                                                        title='Remove Ingredient'\n                                                    ></i>\n                                                </div>\n                                            ))}\n\n                                        </>\n                                    )}\n                                    <button onClick={addIngredient} className='add-btn-add-recipe'>\n                                        <i className=\"bi bi-plus-circle add-icon\"></i>\n                                        <span>Add another ingredient</span>\n                                    </button>\n\n                                </div>\n\n                            </div>\n\n                            <div id='instructions' className='section-right ingredients-steps-section'>\n                                <label className='black-title'>Instructions</label>\n\n                                <div className='steps-container'>\n                                    {instructions.length === 0 ? (\n                                        // Error message when instructions array is empty\n                                        <div className='error-message-empty'>Please add at least one instruction.</div>\n                                    ) : (\n                                        // Render instructions container with inputs\n                                        <>\n                                            {instructions.map((instruction, index) => (\n                                                <div key={index} className='instruction-row'>\n                                                    <input\n                                                        id={`instruction_${index}`}\n                                                        className='input-field step-input'\n                                                        placeholder={`Instruction ${index + 1}`}\n                                                        value={instruction}\n                                                        onChange={(e) => handleInstructionChange(index, e.target.value)}\n                                                        required\n                                                    />\n                                                    <i\n                                                        onClick={() => removeInstruction(index)}\n                                                        className='bi bi-x-circle remove-icon'\n                                                        title='Remove Instruction'\n                                                    ></i>\n                                                </div>\n                                            ))}\n                                        </>\n                                    )}\n                                    <button onClick={addInstruction} className='add-btn-add-recipe'>\n                                        <i className=\"bi bi-plus-circle add-icon\"></i>\n                                        <span>Add another instruction</span>\n                                    </button>\n\n                                </div>\n                            </div>\n\n                        </div>\n\n                        <div className='tags-section'>\n                            <label className='black-title'>Tags</label>\n\n                            <div className='tags-container'>\n                                {/* Render 'difficulty_categories' and 'kosher_categories' first */}\n                                {categories && ['difficulty_categories', 'kosher_categories'].map(category => (\n                                    <div key={category} className=\"select-container\">\n                                        <label className='category-name'>{formatCategoryName(category)} *</label>\n                                        <select\n                                            id={`category_${category}`}\n                                            className='input-field select-category'\n                                            value={recipeCategories[category]}\n                                            onChange={(e) => handleSelectChange(category, e.target.value)}\n                                        >\n                                            <option value=\"\">Select {formatCategoryName(category)}</option>\n                                            {categories[category] && categories[category].map(([id, tagName]) => (\n                                                <option key={id} value={id}>\n                                                    {tagName}\n                                                </option>\n                                            ))}\n                                        </select>\n                                    </div>\n                                ))}\n\n                                {/* Render the rest of the categories */}\n                                {categories && Object.entries(categories).map(([category, entries]) => (\n                                    category !== 'time_categories' && category !== 'difficulty_categories' && category !== 'kosher_categories' && (\n                                        <div key={category} className=\"select-container\">\n                                            <label className='category-name'>{formatCategoryName(category)}</label>\n                                            <select\n                                                id={`category_${category}`}\n                                                className='input-field select-category'\n                                                value={recipeCategories[category]}\n                                                onChange={(e) => handleSelectChange(category, e.target.value)}\n                                            >\n                                                <option value=\"\">Select {formatCategoryName(category)}</option>\n                                                {entries && entries.map(([id, tagName]) => (\n                                                    <option key={id} value={id}>\n                                                        {tagName}\n                                                    </option>\n                                                ))}\n                                            </select>\n                                        </div>\n                                    )\n                                ))}\n                            </div>\n\n\n                            <hr className=\"separator\" />\n\n                            <div className='selected-tags-container'>\n                                <label className='black-title'>Selected Tags</label>\n                                <div className='selected-tags'>\n                                    {Object.entries(recipeCategories).map(([category, tags]) => (\n                                        category !== 'time_categories' && (\n                                            Object.entries(tags).map(([id, checked]) => (\n                                                checked && (\n                                                    <span key={id} className='tag-container'>\n                                                        <label className='tag-rec'>\n                                                            {categories[category].find(([tagId]) => tagId === parseInt(id, 10))[1]}\n                                                        </label>\n                                                        <i\n                                                            className='bi bi-x-circle remove-icon remove-tag'\n                                                            onClick={() => handleRemoveTag(category, id)}\n                                                        ></i>\n                                                    </span>\n                                                )\n                                            ))\n                                        )\n                                    ))}\n                                </div>\n                            </div>\n\n                        </div>\n\n\n\n                        <div className='submit-section'>\n                            <button className='publish-btn' type=\"submit\" onClick={handleSubmit} >Publish</button>\n                        </div>\n                    </form>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default AddRecipe\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}