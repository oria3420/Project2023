{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oria3\\\\Desktop\\\\\\u05DB\\u05DC\\u05DC\\u05D9\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8 \\u05D2\\u05DE\\u05E8\\\\code\\\\client\\\\src\\\\components\\\\NutritionTable.js\";\nimport React from 'react';\nimport './Components.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NutritionTable = _ref => {\n  let {\n    recipe\n  } = _ref;\n  const nutritionFields = [{\n    key: 'Calories',\n    label: 'Calories'\n  }, {\n    key: 'FatContent',\n    label: 'Fat'\n  }, {\n    key: 'SaturatedFatContent',\n    label: 'Saturated Fat'\n  }, {\n    key: 'CholesterolContent',\n    label: 'Cholesterol'\n  }, {\n    key: 'SodiumContent',\n    label: 'Sodium'\n  }, {\n    key: 'CarbohydrateContent',\n    label: 'Carbohydrates'\n  }, {\n    key: 'FiberContent',\n    label: 'Fiber'\n  }, {\n    key: 'SugarContent',\n    label: 'Sugar'\n  }, {\n    key: 'ProteinContent',\n    label: 'Protein'\n  }];\n  const maxWidth = Math.max(...nutritionFields.map(field => {\n    const textWidth = String(recipe[field.key]).length + String(field.label).length;\n    return textWidth;\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"nutrition-title\",\n      children: \"Nutrition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nutrition-table\",\n      children: nutritionFields.map((field, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nutrition-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"field-value\",\n            children: recipe[field.key]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"field-label\",\n            children: field.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), index < nutritionFields.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nutrition-divider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 64\n        }, this)]\n      }, field.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_c = NutritionTable;\nexport default NutritionTable;\nvar _c;\n$RefreshReg$(_c, \"NutritionTable\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","NutritionTable","_ref","recipe","nutritionFields","key","label","maxWidth","Math","max","map","field","textWidth","String","length","children","className","fileName","_jsxFileName","lineNumber","columnNumber","index","Fragment","_c","$RefreshReg$"],"sources":["C:/Users/oria3/Desktop/כללי/שנה ג/פרוייקט גמר/code/client/src/components/NutritionTable.js"],"sourcesContent":["import React from 'react';\r\nimport './Components.css';\r\n\r\nconst NutritionTable = ({ recipe }) => {\r\n    const nutritionFields = [\r\n        { key: 'Calories', label: 'Calories' },\r\n        { key: 'FatContent', label: 'Fat' },\r\n        { key: 'SaturatedFatContent', label: 'Saturated Fat' },\r\n        { key: 'CholesterolContent', label: 'Cholesterol' },\r\n        { key: 'SodiumContent', label: 'Sodium' },\r\n        { key: 'CarbohydrateContent', label: 'Carbohydrates' },\r\n        { key: 'FiberContent', label: 'Fiber' },\r\n        { key: 'SugarContent', label: 'Sugar' },\r\n        { key: 'ProteinContent', label: 'Protein' },\r\n    ];\r\n\r\n    const maxWidth = Math.max(\r\n        ...nutritionFields.map((field) => {\r\n          const textWidth = String(recipe[field.key]).length + String(field.label).length;\r\n          return textWidth;\r\n        })\r\n      );\r\n      \r\n    return (\r\n        <div>\r\n            <span className='nutrition-title'>Nutrition</span>\r\n\r\n            <div className='nutrition-table'>\r\n                {nutritionFields.map((field, index) => (\r\n\r\n                    <React.Fragment key={field.key}>\r\n\r\n                        <div className='nutrition-field'>\r\n                            <span className='field-value'>{recipe[field.key]}</span>\r\n\r\n                            <br />\r\n\r\n                            <span className='field-label'>{field.label}</span>\r\n\r\n\r\n                        </div>\r\n                        {index < nutritionFields.length - 1 && <div className='nutrition-divider'></div>}\r\n\r\n                    </React.Fragment>\r\n\r\n                ))}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NutritionTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}