{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oria3\\\\Desktop\\\\\\u05DB\\u05DC\\u05DC\\u05D9\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8 \\u05D2\\u05DE\\u05E8\\\\code\\\\client\\\\src\\\\pages\\\\Recipe.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport Navbar from '../components/Navbar';\nimport StarRating from '../components/StarRating';\nimport Loading from '../components/Loading';\nimport NutritionTable from '../components/NutritionTable';\nimport { useLocation } from 'react-router-dom';\nimport './Recipe.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultImageUrl = '/images/pizza.jpg';\nconst RecipePage = () => {\n  _s();\n  const location = useLocation();\n  const user_name = location.state.name;\n  const user_id = location.state.user_id;\n  const {\n    id\n  } = useParams();\n  const [recipe, setRecipe] = useState(null);\n  const [imageUrl, setImageUrl] = useState(null);\n  const [ingredients, setIngredients] = useState([]);\n  const [recipeTags, setRecipeTags] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const handleCommentSubmit = async () => {\n    try {\n      const response = await fetch('http://localhost:1337/api/recipes/new_comment', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          comment_text: newComment,\n          recipe_id: id,\n          user_id,\n          user_name\n        })\n      });\n      const result = await response.json();\n      setComments([...comments, result.newComment]);\n      setNewComment('');\n    } catch (error) {\n      console.error('Error submitting comment:', error);\n    }\n  };\n  useEffect(() => {\n    async function fetchComments() {\n      try {\n        const response = await fetch(`http://localhost:1337/api/recipes/${id}/comments`);\n        const data = await response.json();\n        setComments(data);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    fetchComments();\n  }, [id]);\n  useEffect(() => {\n    async function fetchTags() {\n      try {\n        const response = await fetch(`http://localhost:1337/api/recipes/${id}/tags`);\n        const tags = await response.json();\n        setRecipeTags(tags);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    fetchTags();\n  }, [id]);\n  useEffect(() => {\n    async function fetchRecipe() {\n      const response = await fetch(`http://localhost:1337/api/recipes/${id}`);\n      const data = await response.json();\n      setRecipe(data);\n    }\n    fetchRecipe();\n  }, [id]);\n  useEffect(() => {\n    async function fetchIngredients() {\n      try {\n        const response = await fetch(`http://localhost:1337/api/recipes/${id}/ingredients`);\n        const data = await response.json();\n        setIngredients(data);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    fetchIngredients();\n  }, [id]);\n  useEffect(() => {\n    async function getImageUrl() {\n      const response = await fetch(`http://localhost:1337/api/recipes/images/${id}`);\n      const data = await response.text();\n      if (data !== 'Image not found') {\n        setImageUrl(data);\n      } else {\n        setImageUrl(defaultImageUrl);\n      }\n    }\n    getImageUrl();\n  }, [id]);\n  function formatDate(inputDate) {\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    return new Date(inputDate).toLocaleDateString('en-US', options);\n  }\n  function formatDateComment(dateString) {\n    const isoDate = new Date(dateString);\n\n    // Month names array\n    const monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    const day = isoDate.getDate();\n    const month = monthNames[isoDate.getMonth()];\n    const year = isoDate.getFullYear();\n    const hours = isoDate.getHours();\n    const minutes = isoDate.getMinutes();\n\n    // Function to add the ordinal suffix to the day (e.g., 1st, 2nd, 3rd)\n    const getOrdinalSuffix = number => {\n      const suffixes = ['st', 'nd', 'rd'];\n      const v = number % 100;\n      return number + (suffixes[(v - 20) % 10] || suffixes[v] || 'th');\n    };\n    const formattedDate = `${month} ${getOrdinalSuffix(day)}, ${year} at ${hours}:${minutes.toString().padStart(2, '0')}`;\n    return formattedDate;\n  }\n  function capitalizeFirstLetter(text) {\n    return text && text.charAt(0).toUpperCase() + text.slice(1);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: user_name && recipe ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [user_name && /*#__PURE__*/_jsxDEV(Navbar, {\n        name: user_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recipe-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              id: \"recipe-name\",\n              children: capitalizeFirstLetter(recipe.Name)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"author-date\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Recipe by \" + recipe.AuthorName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"author-separator\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Published on \" + formatDate(recipe.DatePublished)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StarRating, {\n              rating: recipe.AggregatedRating,\n              reviewCount: recipe.ReviewCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"times-container\",\n              children: [\"PrepTime\", \"CookTime\", \"TotalTime\"].map((timeKey, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"time\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    id: \"time-number\",\n                    children: recipe[timeKey]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    id: \"time-text\",\n                    children: [index === 0 ? \"Prep\" : index === 1 ? \"Cook\" : \"Total\", \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 172,\n                      columnNumber: 102\n                    }, this), \" Time\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 23\n                }, this), index < 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"time-separator\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 37\n                }, this)]\n              }, timeKey, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"btn-like\",\n              className: \"btn btn-primary\",\n              type: \"submit\",\n              value: \"LIKE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recipe-image-container\",\n            children: imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"recipe-image\",\n              src: imageUrl,\n              alt: \"Card cap\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description-text\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: capitalizeFirstLetter(recipe.Description)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bold-text\",\n                children: \"Servings: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\" \", capitalizeFirstLetter(recipe.RecipeServings)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bold-text\",\n                children: \"Kosher: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\" \", capitalizeFirstLetter(recipe.Kosher)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bold-text\",\n                children: \"Category: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\" \", capitalizeFirstLetter(recipe.RecipeCategory)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ingredients-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ingredients\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"title\",\n                children: \"Ingredients\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this), ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"step-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ingredient-text\",\n                  children: ingredient.name\n                }, ingredient.name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, `br-${index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"instructions\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: \"Instructions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this), recipe.RecipeInstructions.split('.').map((instruction, index) => {\n              const formattedInstruction = instruction.trim().charAt(0).toUpperCase() + instruction.trim().slice(1);\n              return instruction.trim() !== \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"step-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"step-index\",\n                  children: [index < 9 ? \"0\" : \"\", index + 1, \". \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"step-text\",\n                  children: [formattedInstruction, \".\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 21\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(NutritionTable, {\n          recipe: recipe\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tags-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title\",\n            children: \"Recipe Tags\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), recipeTags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tag\",\n            children: tag\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipePage, \"OI9SQgro6xqHh3ETaAFKonzHBzI=\", false, function () {\n  return [useLocation, useParams];\n});\n_c = RecipePage;\nexport default RecipePage;\n/*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"comments-container\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"title\",\n    children: \"Reviews & Comments\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 281,\n    columnNumber: 15\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-title\",\n    children: \"Your Review\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 282,\n    columnNumber: 15\n  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    placeholder: \"Add your comment...\",\n    value: newComment,\n    onChange: e => setNewComment(e.target.value)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 15\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleCommentSubmit,\n    children: \"Submit Comment\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 291,\n    columnNumber: 15\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-title\",\n    children: \"Overall rating\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 15\n  }, this), /*#__PURE__*/_jsxDEV(StarRating, {\n    rating: recipe.AggregatedRating,\n    reviewCount: recipe.ReviewCount\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 294,\n    columnNumber: 15\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-count\",\n    children: `${comments.length} ${comments.length === 1 ? 'Comment' : 'Comments'}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 296,\n    columnNumber: 15\n  }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n    className: \"comment-line\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 15\n  }, this), comments.length > 0 ? comments.slice().reverse().map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-top\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          id: \"user-icon\",\n          className: \"bi bi-person-circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"user-name\",\n          children: comment.user_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"comment-date\",\n        children: formatDateComment(comment.comment_date)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"comment-text\",\n      children: comment.comment_text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"comment-line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 21\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 301,\n    columnNumber: 19\n  }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"no-comments-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"no-comment-first\",\n      children: \"No comments yet. \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"no-comment-second\",\n      children: \"Be the first to comment!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 314,\n    columnNumber: 17\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 280,\n  columnNumber: 2\n}, this);\nvar _c;\n$RefreshReg$(_c, \"RecipePage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Navbar","StarRating","Loading","NutritionTable","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","defaultImageUrl","RecipePage","_s","location","user_name","state","name","user_id","id","recipe","setRecipe","imageUrl","setImageUrl","ingredients","setIngredients","recipeTags","setRecipeTags","comments","setComments","newComment","setNewComment","handleCommentSubmit","response","fetch","method","headers","body","JSON","stringify","comment_text","recipe_id","result","json","error","console","fetchComments","data","fetchTags","tags","fetchRecipe","fetchIngredients","getImageUrl","text","formatDate","inputDate","options","year","month","day","Date","toLocaleDateString","formatDateComment","dateString","isoDate","monthNames","getDate","getMonth","getFullYear","hours","getHours","minutes","getMinutes","getOrdinalSuffix","number","suffixes","v","formattedDate","toString","padStart","capitalizeFirstLetter","charAt","toUpperCase","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Name","AuthorName","DatePublished","rating","AggregatedRating","reviewCount","ReviewCount","map","timeKey","index","type","value","src","alt","Description","RecipeServings","Kosher","RecipeCategory","ingredient","RecipeInstructions","split","instruction","formattedInstruction","trim","tag","_c","placeholder","onChange","e","target","onClick","length","reverse","comment","comment_date","$RefreshReg$"],"sources":["C:/Users/oria3/Desktop/כללי/שנה ג/פרוייקט גמר/code/client/src/pages/Recipe.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport Navbar from '../components/Navbar';\r\nimport StarRating from '../components/StarRating';\r\nimport Loading from '../components/Loading';\r\nimport NutritionTable from '../components/NutritionTable';\r\nimport { useLocation } from 'react-router-dom';\r\nimport './Recipe.css';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\n\r\nconst defaultImageUrl = '/images/pizza.jpg'\r\n\r\nconst RecipePage = () => {\r\n  const location = useLocation();\r\n  const user_name = location.state.name;\r\n  const user_id = location.state.user_id;\r\n\r\n  const { id } = useParams();\r\n  const [recipe, setRecipe] = useState(null);\r\n  const [imageUrl, setImageUrl] = useState(null);\r\n  const [ingredients, setIngredients] = useState([]);\r\n  const [recipeTags, setRecipeTags] = useState([]);\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState('');\r\n\r\nconst handleCommentSubmit = async () => {\r\n  try {\r\n    const response = await fetch('http://localhost:1337/api/recipes/new_comment', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ comment_text: newComment, recipe_id: id, user_id, user_name }),\r\n    });\r\n    const result = await response.json();\r\n    setComments([...comments, result.newComment]);\r\n    setNewComment('');\r\n  } catch (error) {\r\n    console.error('Error submitting comment:', error);\r\n  }\r\n};\r\n\r\n\r\n  useEffect(() => {\r\n    async function fetchComments() {\r\n      try {\r\n        const response = await fetch(`http://localhost:1337/api/recipes/${id}/comments`);\r\n        const data = await response.json();\r\n        setComments(data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n    fetchComments();\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    async function fetchTags() {\r\n      try {\r\n        const response = await fetch(`http://localhost:1337/api/recipes/${id}/tags`);\r\n        const tags = await response.json();\r\n        setRecipeTags(tags);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n\r\n    fetchTags();\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    async function fetchRecipe() {\r\n      const response = await fetch(`http://localhost:1337/api/recipes/${id}`);\r\n      const data = await response.json();\r\n      setRecipe(data);\r\n    }\r\n    fetchRecipe();\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    async function fetchIngredients() {\r\n      try {\r\n        const response = await fetch(`http://localhost:1337/api/recipes/${id}/ingredients`);\r\n        const data = await response.json();\r\n        setIngredients(data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n\r\n    fetchIngredients();\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    async function getImageUrl() {\r\n      const response = await fetch(`http://localhost:1337/api/recipes/images/${id}`);\r\n      const data = await response.text();\r\n      if (data !== 'Image not found') {\r\n        setImageUrl(data)\r\n      }\r\n      else {\r\n        setImageUrl(defaultImageUrl)\r\n      }\r\n\r\n    }\r\n    getImageUrl();\r\n  }, [id]);\r\n\r\n  function formatDate(inputDate) {\r\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n    return new Date(inputDate).toLocaleDateString('en-US', options);\r\n  }\r\n\r\n  function formatDateComment(dateString) {\r\n    const isoDate = new Date(dateString);\r\n  \r\n    // Month names array\r\n    const monthNames = [\r\n      'January', 'February', 'March', 'April',\r\n      'May', 'June', 'July', 'August',\r\n      'September', 'October', 'November', 'December'\r\n    ];\r\n  \r\n    const day = isoDate.getDate();\r\n    const month = monthNames[isoDate.getMonth()];\r\n    const year = isoDate.getFullYear();\r\n    const hours = isoDate.getHours();\r\n    const minutes = isoDate.getMinutes();\r\n  \r\n    // Function to add the ordinal suffix to the day (e.g., 1st, 2nd, 3rd)\r\n    const getOrdinalSuffix = (number) => {\r\n      const suffixes = ['st', 'nd', 'rd'];\r\n      const v = number % 100;\r\n      return number + (suffixes[(v - 20) % 10] || suffixes[v] || 'th');\r\n    };\r\n  \r\n    const formattedDate = `${month} ${getOrdinalSuffix(day)}, ${year} at ${hours}:${minutes.toString().padStart(2, '0')}`;\r\n  \r\n    return formattedDate;\r\n  }\r\n  \r\n  function capitalizeFirstLetter(text) {\r\n    return text && text.charAt(0).toUpperCase() + text.slice(1);\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      {user_name && recipe ? (\r\n        <>\r\n          {user_name && <Navbar name={user_name} />}\r\n          <div className='recipe-container'>\r\n\r\n            <div className='recipe-header'>\r\n\r\n              <div className='recipe-details'>\r\n\r\n                <h2 id=\"recipe-name\">{capitalizeFirstLetter(recipe.Name)}</h2>\r\n                <div id=\"author-date\">\r\n                  <span>{\"Recipe by \" + recipe.AuthorName}</span>\r\n                  <span className=\"author-separator\"></span>\r\n                  <span>{\"Published on \" + formatDate(recipe.DatePublished)}</span>\r\n                </div>\r\n\r\n                <StarRating rating={recipe.AggregatedRating} reviewCount={recipe.ReviewCount} />\r\n\r\n                <div className='times-container'>\r\n                  {[\"PrepTime\", \"CookTime\", \"TotalTime\"].map((timeKey, index) => (\r\n                    <React.Fragment key={timeKey}>\r\n                      <div className='time'>\r\n                        <span id=\"time-number\">{recipe[timeKey]}</span>\r\n                        <span id=\"time-text\">{index === 0 ? \"Prep\" : index === 1 ? \"Cook\" : \"Total\"} <br /> Time</span>\r\n                      </div>\r\n                      {index < 2 && <div className='time-separator'></div>}\r\n                    </React.Fragment>\r\n                  ))}\r\n                </div>\r\n\r\n                <input id=\"btn-like\" className=\"btn btn-primary\" type=\"submit\" value=\"LIKE\" />\r\n\r\n              </div>\r\n\r\n              <div className='recipe-image-container'>\r\n                {imageUrl && <img className='recipe-image' src={imageUrl} alt=\"Card cap\"></img>}\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <div className='description'>\r\n              <div className='description-text'>\r\n                <p>{capitalizeFirstLetter(recipe.Description)}</p>\r\n\r\n              </div>\r\n              <div className='description-details'>\r\n                <p>\r\n                  <span className=\"bold-text\">Servings: </span>\r\n                  <span> {capitalizeFirstLetter(recipe.RecipeServings)}</span>\r\n                </p>\r\n                <p>\r\n                  <span className=\"bold-text\">Kosher: </span>\r\n                  <span> {capitalizeFirstLetter(recipe.Kosher)}</span>\r\n                </p>\r\n                <p>\r\n                  <span className=\"bold-text\">Category: </span>\r\n                  <span> {capitalizeFirstLetter(recipe.RecipeCategory)}</span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='recipe-body'>\r\n\r\n              <div className='ingredients-container'>\r\n                <div className='ingredients'>\r\n                  <span className=\"title\">Ingredients</span>\r\n                  {ingredients.map((ingredient, index) => (\r\n                    <div className='step-container' key={index}>\r\n                      <span className='ingredient-text' key={ingredient.name}>{ingredient.name}</span>\r\n                      <br key={`br-${index}`} />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n\r\n              </div>\r\n\r\n              <div className='instructions'>\r\n                <span className='title'>Instructions</span>\r\n                {recipe.RecipeInstructions.split('.').map((instruction, index) => {\r\n                  const formattedInstruction = instruction.trim().charAt(0).toUpperCase() + instruction.trim().slice(1);\r\n                  return instruction.trim() !== \"\" && (\r\n                    <div className='step-container' key={index}>\r\n                      <span className='step-index'>{index < 9 ? \"0\" : \"\"}{index + 1}. </span>\r\n                      <span className='step-text'>{formattedInstruction}.</span>\r\n                      <br />\r\n                    </div>\r\n                  );\r\n                })}\r\n                <br />\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <NutritionTable recipe={recipe} />\r\n\r\n            <div className='tags-container'>\r\n              <div className='title'>Recipe Tags</div>\r\n\r\n              {recipeTags.map((tag, index) => (\r\n                <span key={index} className='tag'>\r\n                  {tag}\r\n                </span>\r\n              ))}\r\n\r\n            </div>\r\n\r\n           \r\n\r\n\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n\r\n\r\n\r\n\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <Loading />\r\n      )}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default RecipePage;\r\n\r\n\r\n <div className='comments-container'>\r\n              <div className='title'>Reviews & Comments</div>\r\n              <div className=\"comment-title\">Your Review</div>\r\n          \r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Add your comment...\"\r\n                value={newComment}\r\n                onChange={(e) => setNewComment(e.target.value)}\r\n              />\r\n          \r\n              <button onClick={handleCommentSubmit}>Submit Comment</button>\r\n          \r\n              <div className=\"comment-title\">Overall rating</div>\r\n              <StarRating rating={recipe.AggregatedRating} reviewCount={recipe.ReviewCount} />\r\n          \r\n              <div className=\"comment-count\">{`${comments.length} ${comments.length === 1 ? 'Comment' : 'Comments'}`}</div>\r\n              <hr className=\"comment-line\" />\r\n          \r\n              {comments.length > 0 ? (\r\n                comments.slice().reverse().map((comment, index) => (\r\n                  <div key={index} className=\"comment\">\r\n                    <div className='comment-top'>\r\n                      <div className='user-container'>\r\n                        <i id=\"user-icon\" className=\"bi bi-person-circle\"></i>\r\n                        <span id=\"user-name\">{comment.user_name}</span>\r\n                      </div>\r\n                      <span id=\"comment-date\">{formatDateComment(comment.comment_date)}</span>\r\n                    </div>\r\n                    <span id=\"comment-text\">{comment.comment_text}</span>\r\n                    <hr className=\"comment-line\" />\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                <div className='no-comments-container'>\r\n                  <span id=\"no-comment-first\">No comments yet. </span>\r\n                  <br />\r\n                  <span id=\"no-comment-second\">Be the first to comment!</span>\r\n                </div>\r\n              )}\r\n            </div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}