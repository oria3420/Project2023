{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oria3\\\\Desktop\\\\\\u05DB\\u05DC\\u05DC\\u05D9\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8 \\u05D2\\u05DE\\u05E8\\\\code\\\\client\\\\src\\\\pages\\\\AddRecipe.js\",\n  _s = $RefreshSig$();\nimport Navbar from '../components/Navbar';\nimport './App.css';\nimport './AddRecipe.css';\nimport React, { useState, useEffect } from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from 'react-router-dom';\n// import Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddRecipe = () => {\n  _s();\n  const navigate = useNavigate();\n  const [name, setName] = useState(null);\n  const [user, setUser] = useState(null);\n  const [recipeName, setRecipeName] = useState('');\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [cookTime, setCookTime] = useState('00:00');\n  const [prepTime, setPrepTime] = useState('00:00');\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [description, setDescription] = useState('');\n  const [recipeYield, setRecipeYield] = useState('');\n  const [categories, setCategories] = useState([]);\n  const [recipeCategories, setRecipeCategories] = useState({});\n  const [userId, setUserId] = useState('');\n  const [ingredients, setIngredients] = useState([]);\n  const [instructions, setInstructions] = useState(['']);\n  ;\n  const [measurements, setMeasurements] = useState([]);\n  const [recipeIngredients, setRecipeIngredients] = useState([{\n    ingredient: '',\n    amount: '',\n    measurementId: ''\n  }]);\n  const [suggestions, setSuggestions] = useState([]);\n  const handleMeasurementChange = (index, value) => {\n    const updatedIngredients = [...recipeIngredients];\n    updatedIngredients[index].measurementId = value;\n    setRecipeIngredients(updatedIngredients);\n  };\n  const handleIngredientChange = (index, field, value) => {\n    const updatedIngredients = [...recipeIngredients];\n    updatedIngredients[index][field] = value;\n    setRecipeIngredients(updatedIngredients);\n    console.log(updatedIngredients);\n    // Call a function to filter and update the suggestions based on the current input value\n    updateIngredientSuggestions(value, index);\n  };\n  const updateIngredientSuggestions = (inputValue, index) => {\n    // Check if the length of inputValue is at least 3 before searching for suggestions\n    if (inputValue.length >= 3) {\n      const filteredIngredients = ingredients.filter(ingredient => typeof ingredient.ingredient === 'string' && ingredient.ingredient.toLowerCase().startsWith(inputValue.toLowerCase())).map(ingredient => ingredient.ingredient);\n\n      // Update the suggestions array at the specified index\n      setSuggestions(prevSuggestions => {\n        const updatedSuggestions = [...prevSuggestions];\n        updatedSuggestions[index] = filteredIngredients;\n        return updatedSuggestions;\n      });\n    } else {\n      // Clear suggestions if inputValue is less than 3 letters\n      setSuggestions(prevSuggestions => {\n        const updatedSuggestions = [...prevSuggestions];\n        updatedSuggestions[index] = [];\n        return updatedSuggestions;\n      });\n    }\n  };\n  const handleSuggestionClick = (index, suggestion) => {\n    const updatedIngredients = [...recipeIngredients];\n    updatedIngredients[index].ingredient = suggestion;\n    setRecipeIngredients(updatedIngredients);\n    // Clear suggestions for the clicked input field\n    setSuggestions([], index);\n  };\n  const addIngredient = () => {\n    setRecipeIngredients([...recipeIngredients, {\n      ingredient: '',\n      amount: ''\n    }]);\n  };\n  const removeIngredient = index => {\n    const updatedIngredients = [...recipeIngredients];\n    updatedIngredients.splice(index, 1);\n    setRecipeIngredients(updatedIngredients);\n  };\n  const addInstruction = () => {\n    setInstructions([...instructions, '']);\n  };\n  const removeInstruction = index => {\n    const updatedInstructions = [...instructions];\n    updatedInstructions.splice(index, 1);\n    setInstructions(updatedInstructions);\n  };\n  const handleInstructionChange = (index, value) => {\n    const updatedInstructions = [...instructions];\n    updatedInstructions[index] = value;\n    setInstructions(updatedInstructions);\n  };\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const _user = jwt_decode(token);\n      setName(_user.name);\n      setUser(_user);\n      setUserId(_user.email);\n      if (!_user) {\n        localStorage.removeItem('token');\n        navigate.replace('/login');\n      }\n    }\n  }, [navigate]);\n  useEffect(() => {\n    if (user) {\n      fetch(`http://localhost:1337/api/groceries`).then(res => res.json()).then(data => {\n        setIngredients(data);\n      }).catch(error => console.error(error));\n    }\n  }, [user]);\n  useEffect(() => {\n    if (user) {\n      fetch(`http://localhost:1337/api/measurements`).then(res => res.json()).then(data => {\n        setMeasurements(data);\n      }).catch(error => console.error(error));\n    }\n  }, [user]);\n  const handleImageChange = event => {\n    const file = event.target.files[0];\n    setSelectedImage(file);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // const kosherCategoryIds = Object.keys(recipeCategories['kosher_categories'] || {});\n    // const isKosherCategoryValid = kosherCategoryIds.some(\n    //     (checkboxId) => recipeCategories['kosher_categories'][checkboxId]\n    // );\n\n    // if (!isKosherCategoryValid) {\n    //     setErrorMessage('Please select at least one checkbox in kosher_categories');\n    //     return;\n    // }\n    // setErrorMessage('');\n    console.log('Form Data:', {\n      recipeName,\n      selectedImage,\n      cookTime,\n      prepTime,\n      selectedCategory,\n      groceryList: recipeIngredients,\n      description,\n      //recipeServings,\n      recipeYield,\n      recipeInstructions: instructions,\n      recipeCategories\n    });\n    // setRecipeName('');\n    // setSelectedImage(null);\n    // setCookTime('00:00');\n    // setPrepTime('00:00');\n    // setSelectedCategory('');\n    // setSearchTerm('');\n    // setSelectedMeasurement('');\n    // setAmount('');\n    // setDescription('');\n    // setRecipeServings(1);\n    // setRecipeYield('');\n    // setRecipeInstructions('');\n    // setRecipeCategories({});\n    // setGroceryList([]);\n    const formData = new FormData();\n    formData.append('selectedImage', selectedImage);\n    formData.append('recipeName', recipeName);\n    formData.append('cookTime', cookTime);\n    formData.append('prepTime', prepTime);\n    formData.append('selectedCategory', selectedCategory);\n    formData.append('groceryList', JSON.stringify(recipeIngredients)); // Assuming groceryList is an array\n    formData.append('description', description);\n    //formData.append('recipeServings', recipeServings);\n    formData.append('recipeYield', recipeYield);\n    formData.append('recipeInstructions', instructions);\n    formData.append('recipeCategories', recipeCategories);\n    formData.append('name', name);\n    formData.append('userId', userId);\n    try {\n      const response = await fetch('http://localhost:1337/api/addRecipe', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const result = await response.json();\n        console.log(result); // Recipe successfully added\n      } else {\n        console.error(`HTTP Error: ${response.status}`);\n        // Handle error response\n      }\n    } catch (error) {\n      console.error(error);\n      // Handle fetch error (e.g., network error)\n    }\n  };\n\n  const formatCategoryName = category => {\n    return category.replace(/_/g, ' ').replace(/categories/g, '').trim().split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n  };\n  const calculateTotalMinutes = time => {\n    const [hours, minutes] = time.split(':').map(Number);\n    return hours * 60 + minutes;\n  };\n  useEffect(() => {\n    const computeTimeCategoryTag = (prep, cook) => {\n      const totalMinutes = calculateTotalMinutes(prep) + calculateTotalMinutes(cook);\n      if (totalMinutes >= 60) {\n        return 'more than 1 hour';\n      } else if (totalMinutes >= 30) {\n        return '30-60 min';\n      } else if (totalMinutes >= 15) {\n        return '15-30 min';\n      } else {\n        return '0-15 min';\n      }\n    };\n    const timeTag = computeTimeCategoryTag(prepTime, cookTime);\n\n    // Update the time category in checkedItems\n    setRecipeCategories(prevCheckedItems => ({\n      ...prevCheckedItems,\n      time_categories: {\n        [timeTag]: true\n      }\n    }));\n  }, [prepTime, cookTime]);\n  const handleRemoveTag = (category, id) => {\n    setRecipeCategories(prevCheckedItems => {\n      const updatedCheckedItems = {\n        ...prevCheckedItems\n      };\n      updatedCheckedItems[category] = {\n        ...prevCheckedItems[category],\n        [id]: false // Set the value to false to \"unselect\" the tag\n      };\n\n      return updatedCheckedItems;\n    });\n  };\n\n  //console.log(recipeCategories)\n\n  useEffect(() => {\n    fetch('http://localhost:1337/api/search_recipe').then(response => response.json()).then(data => {\n      const initialRecipeCategories = {};\n      Object.keys(data).forEach(category => {\n        initialRecipeCategories[category] = {};\n        data[category].forEach(_ref => {\n          let [id, tagName] = _ref;\n          initialRecipeCategories[category][id] = false;\n        });\n      });\n      setCategories(data);\n      setRecipeCategories(initialRecipeCategories);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  const handleSelectChange = (category, id) => {\n    setRecipeCategories(prevCategories => ({\n      ...prevCategories,\n      [category]: {\n        ...(prevCategories[category] || {}),\n        [id]: true\n      }\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [name && /*#__PURE__*/_jsxDEV(Navbar, {\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: user && /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"add-recipe-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-details two-sections-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-left image-details-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"add-image-head\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"black-title\",\n                children: \"Add Images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-container\",\n              children: selectedImage ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"recipe-image\",\n                  src: URL.createObjectURL(selectedImage),\n                  alt: \"Selected\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"custom-file-upload\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-images\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"input-file\",\n                    type: \"file\",\n                    accept: \"image/*\",\n                    onChange: handleImageChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"add-file-title\",\n                  children: \"Upload images\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-right image-details-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"description-head\",\n              children: \"Add Your Recipe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"description-bottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"black-title\",\n                children: \"Recipe Name & Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"description-fields\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"desc-field\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"input-title\",\n                    children: \"Recipe Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"input-field\",\n                    type: \"text\",\n                    value: recipeName || '',\n                    onChange: e => setRecipeName(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"times-yields\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"desc-field\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"input-title\",\n                      children: \"Prep Time\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 354,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"input-field time-field\",\n                      type: \"time\",\n                      value: prepTime,\n                      onChange: e => setPrepTime(e.target.value),\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 355,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"desc-field\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"input-title\",\n                      children: \"Cook Time\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 365,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"input-field time-field\",\n                      type: \"time\",\n                      value: cookTime,\n                      onChange: e => setCookTime(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 366,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 364,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"desc-field yields-field\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"input-title\",\n                      children: \"Yields /Servings\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 375,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"input-field\",\n                      type: \"text\",\n                      value: recipeYield,\n                      onChange: e => setRecipeYield(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 376,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 374,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"desc-field\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"input-title\",\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 386,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    className: \"input-field desc-textbox\",\n                    value: description,\n                    onChange: e => setDescription(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 387,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"desc-field\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"input-title\",\n                    children: \"Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 395,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    className: \"input-field category-desc\",\n                    value: selectedCategory,\n                    onChange: e => setSelectedCategory(e.target.value),\n                    required: true,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      disabled: true,\n                      children: \"Select Category\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 402,\n                      columnNumber: 49\n                    }, this), Object.entries(categories).map(_ref2 => {\n                      let [category, entries] = _ref2;\n                      return entries.map(_ref3 => {\n                        let [id, tagName] = _ref3;\n                        return /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: tagName,\n                          children: tagName\n                        }, id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 407,\n                          columnNumber: 57\n                        }, this);\n                      });\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 396,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ingredients-steps two-sections-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-left ingredients-steps-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"black-title\",\n              children: \"Ingredients\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"steps-container\",\n              children: [recipeIngredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"instruction-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"input-field ingredient-input\",\n                    placeholder: `Ingredient ${index + 1}`,\n                    value: ingredient.ingredient,\n                    onChange: e => handleIngredientChange(index, 'ingredient', e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 433,\n                    columnNumber: 49\n                  }, this), Array.isArray(suggestions[index]) && suggestions[index].length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ingredient-suggestions\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"toggle-bar\",\n                      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                        children: suggestions[index].map((suggestion, suggestionIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n                          onClick: () => handleSuggestionClick(index, suggestion),\n                          children: suggestion\n                        }, suggestionIndex, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 446,\n                          columnNumber: 69\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 444,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 443,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 442,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  className: \"input-field step-input amount-input\",\n                  placeholder: `Amount ${index + 1}`,\n                  value: ingredient.amount,\n                  onChange: e => handleIngredientChange(index, 'amount', e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"input-field step-input measure-input\",\n                  value: ingredient.measurementId || '',\n                  onChange: e => handleMeasurementChange(index, e.target.value),\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    disabled: true,\n                    children: `Measurement ${index + 1}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 472,\n                    columnNumber: 49\n                  }, this), measurements.map((measurement, measurementIndex) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: measurement.id,\n                    children: measurement.measurement\n                  }, measurementIndex, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 474,\n                    columnNumber: 53\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  onClick: () => removeIngredient(index),\n                  className: \"bi bi-x-circle remove-icon\",\n                  title: \"Remove Ingredient\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 41\n              }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: addIngredient,\n                className: \"add-btn\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-plus-circle add-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Add another ingredient\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-right ingredients-steps-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"black-title\",\n              children: \"Instructions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"steps-container\",\n              children: [instructions.map((instruction, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"instruction-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"input-field step-input\",\n                  placeholder: `Instruction ${index + 1}`,\n                  value: instruction,\n                  onChange: e => handleInstructionChange(index, e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 504,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  onClick: () => removeInstruction(index),\n                  className: \"bi bi-x-circle remove-icon\",\n                  title: \"Remove Instruction\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 511,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 41\n              }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: addInstruction,\n                className: \"add-btn\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-plus-circle add-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 520,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Add another instruction\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 521,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tags-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"black-title\",\n            children: \"Tags\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tags-container\",\n            children: categories && Object.entries(categories).map(_ref4 => {\n              let [category, entries] = _ref4;\n              return category !== 'time_categories' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"select-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"category-name\",\n                  children: formatCategoryName(category)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 537,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"input-field select-category\",\n                  value: recipeCategories[category],\n                  onChange: e => handleSelectChange(category, e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: [\"Select \", formatCategoryName(category)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 543,\n                    columnNumber: 49\n                  }, this), entries && entries.map(_ref5 => {\n                    let [id, tagName] = _ref5;\n                    return /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: id,\n                      children: tagName\n                    }, id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 545,\n                      columnNumber: 53\n                    }, this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 538,\n                  columnNumber: 45\n                }, this)]\n              }, category, true, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"separator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-tags-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"black-title\",\n              children: \"Selected Tags\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-tags\",\n              children: Object.entries(recipeCategories).map(_ref6 => {\n                let [category, tags] = _ref6;\n                return category !== 'time_categories' && Object.entries(tags).map(_ref7 => {\n                  let [id, checked] = _ref7;\n                  return checked && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"tag-container\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"tag-rec\",\n                      children: categories[category].find(_ref8 => {\n                        let [tagId] = _ref8;\n                        return tagId === parseInt(id, 10);\n                      })[1]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 565,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bi bi-x-circle remove-icon remove-tag\",\n                      onClick: () => handleRemoveTag(category, id)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 568,\n                      columnNumber: 57\n                    }, this)]\n                  }, id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 564,\n                    columnNumber: 53\n                  }, this);\n                });\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submit-section\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"publish-btn\",\n            type: \"submit\",\n            onClick: handleSubmit,\n            children: \"Publish\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 303,\n    columnNumber: 9\n  }, this);\n};\n_s(AddRecipe, \"JULNPH4FTPxv3/M6TcCCt5w3hxE=\", false, function () {\n  return [useNavigate];\n});\n_c = AddRecipe;\nexport default AddRecipe;\n\n// const [searchTerm, setSearchTerm] = useState('');\n// const [filteredIngredients, setFilteredIngredients] = useState([]);\n// const [selectedIngredient, setSelectedIngredient] = useState('');\n// const [selectedMeasurement, setSelectedMeasurement] = useState('');\n// const [amount, setAmount] = useState('');\n// const [ingredientsList, setIngredientsList] = useState([]);\nvar _c;\n$RefreshReg$(_c, \"AddRecipe\");","map":{"version":3,"names":["Navbar","React","useState","useEffect","jwt_decode","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","AddRecipe","_s","navigate","name","setName","user","setUser","recipeName","setRecipeName","selectedImage","setSelectedImage","cookTime","setCookTime","prepTime","setPrepTime","selectedCategory","setSelectedCategory","description","setDescription","recipeYield","setRecipeYield","categories","setCategories","recipeCategories","setRecipeCategories","userId","setUserId","ingredients","setIngredients","instructions","setInstructions","measurements","setMeasurements","recipeIngredients","setRecipeIngredients","ingredient","amount","measurementId","suggestions","setSuggestions","handleMeasurementChange","index","value","updatedIngredients","handleIngredientChange","field","console","log","updateIngredientSuggestions","inputValue","length","filteredIngredients","filter","toLowerCase","startsWith","map","prevSuggestions","updatedSuggestions","handleSuggestionClick","suggestion","addIngredient","removeIngredient","splice","addInstruction","removeInstruction","updatedInstructions","handleInstructionChange","token","localStorage","getItem","_user","email","removeItem","replace","fetch","then","res","json","data","catch","error","handleImageChange","event","file","target","files","handleSubmit","e","preventDefault","groceryList","recipeInstructions","formData","FormData","append","JSON","stringify","response","method","body","ok","result","status","formatCategoryName","category","trim","split","word","charAt","toUpperCase","slice","join","calculateTotalMinutes","time","hours","minutes","Number","computeTimeCategoryTag","prep","cook","totalMinutes","timeTag","prevCheckedItems","time_categories","handleRemoveTag","id","updatedCheckedItems","initialRecipeCategories","Object","keys","forEach","_ref","tagName","handleSelectChange","prevCategories","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","URL","createObjectURL","alt","type","accept","onChange","required","disabled","entries","_ref2","_ref3","placeholder","Array","isArray","suggestionIndex","onClick","measurement","measurementIndex","title","instruction","_ref4","_ref5","_ref6","tags","_ref7","checked","find","_ref8","tagId","parseInt","_c","$RefreshReg$"],"sources":["C:/Users/oria3/Desktop/כללי/לימודים/שנה ג/פרוייקט גמר/code/client/src/pages/AddRecipe.js"],"sourcesContent":["import Navbar from '../components/Navbar';\nimport './App.css';\nimport './AddRecipe.css'\nimport React, { useState, useEffect } from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from 'react-router-dom'\n// import Select from 'react-select';\n\nconst AddRecipe = () => {\n    const navigate = useNavigate()\n    const [name, setName] = useState(null)\n    const [user, setUser] = useState(null)\n    const [recipeName, setRecipeName] = useState('');\n    const [selectedImage, setSelectedImage] = useState(null);\n    const [cookTime, setCookTime] = useState('00:00');\n    const [prepTime, setPrepTime] = useState('00:00');\n    const [selectedCategory, setSelectedCategory] = useState('');\n    const [description, setDescription] = useState('');\n    const [recipeYield, setRecipeYield] = useState('');\n    const [categories, setCategories] = useState([]);\n    const [recipeCategories, setRecipeCategories] = useState({});\n    const [userId, setUserId] = useState('');\n    const [ingredients, setIngredients] = useState([])\n    const [instructions, setInstructions] = useState(['']);;\n    const [measurements, setMeasurements] = useState([]);\n    const [recipeIngredients, setRecipeIngredients] = useState([{ ingredient: '', amount: '', measurementId: '' }]);\n    const [suggestions, setSuggestions] = useState([]);\n\n    const handleMeasurementChange = (index, value) => {\n        const updatedIngredients = [...recipeIngredients];\n        updatedIngredients[index].measurementId = value;\n        setRecipeIngredients(updatedIngredients);\n    };\n\n    const handleIngredientChange = (index, field, value) => {\n        const updatedIngredients = [...recipeIngredients];\n        updatedIngredients[index][field] = value;\n        setRecipeIngredients(updatedIngredients);\n        console.log(updatedIngredients)\n        // Call a function to filter and update the suggestions based on the current input value\n        updateIngredientSuggestions(value, index);\n    };\n\n    const updateIngredientSuggestions = (inputValue, index) => {\n        // Check if the length of inputValue is at least 3 before searching for suggestions\n        if (inputValue.length >= 3) {\n            const filteredIngredients = ingredients\n                .filter((ingredient) =>\n                    typeof ingredient.ingredient === 'string' &&\n                    ingredient.ingredient.toLowerCase().startsWith(inputValue.toLowerCase())\n                )\n                .map((ingredient) => ingredient.ingredient);\n\n            // Update the suggestions array at the specified index\n            setSuggestions((prevSuggestions) => {\n                const updatedSuggestions = [...prevSuggestions];\n                updatedSuggestions[index] = filteredIngredients;\n                return updatedSuggestions;\n            });\n        } else {\n            // Clear suggestions if inputValue is less than 3 letters\n            setSuggestions((prevSuggestions) => {\n                const updatedSuggestions = [...prevSuggestions];\n                updatedSuggestions[index] = [];\n                return updatedSuggestions;\n            });\n        }\n    };\n\n    const handleSuggestionClick = (index, suggestion) => {\n        const updatedIngredients = [...recipeIngredients];\n        updatedIngredients[index].ingredient = suggestion;\n        setRecipeIngredients(updatedIngredients);\n        // Clear suggestions for the clicked input field\n        setSuggestions([], index);\n    };\n\n    const addIngredient = () => {\n        setRecipeIngredients([...recipeIngredients, { ingredient: '', amount: '' }]);\n    };\n\n    const removeIngredient = (index) => {\n        const updatedIngredients = [...recipeIngredients];\n        updatedIngredients.splice(index, 1);\n        setRecipeIngredients(updatedIngredients);\n    };\n\n    const addInstruction = () => {\n        setInstructions([...instructions, '']);\n    };\n\n    const removeInstruction = (index) => {\n        const updatedInstructions = [...instructions];\n        updatedInstructions.splice(index, 1);\n        setInstructions(updatedInstructions);\n    };\n\n    const handleInstructionChange = (index, value) => {\n        const updatedInstructions = [...instructions];\n        updatedInstructions[index] = value;\n        setInstructions(updatedInstructions);\n    };\n\n    useEffect(() => {\n        const token = localStorage.getItem('token')\n        if (token) {\n            const _user = jwt_decode(token)\n            setName(_user.name)\n            setUser(_user)\n            setUserId(_user.email)\n            if (!_user) {\n                localStorage.removeItem('token')\n                navigate.replace('/login')\n            }\n        }\n    }, [navigate])\n\n    useEffect(() => {\n        if (user) {\n            fetch(`http://localhost:1337/api/groceries`)\n                .then(res => res.json())\n                .then(data => {\n                    setIngredients(data)\n                })\n                .catch(error => console.error(error))\n        }\n    }, [user]);\n\n    useEffect(() => {\n        if (user) {\n            fetch(`http://localhost:1337/api/measurements`)\n                .then(res => res.json())\n                .then(data => {\n                    setMeasurements(data)\n                })\n                .catch(error => console.error(error))\n        }\n    }, [user]);\n\n    const handleImageChange = (event) => {\n        const file = event.target.files[0];\n        setSelectedImage(file);\n    };\n\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        // const kosherCategoryIds = Object.keys(recipeCategories['kosher_categories'] || {});\n        // const isKosherCategoryValid = kosherCategoryIds.some(\n        //     (checkboxId) => recipeCategories['kosher_categories'][checkboxId]\n        // );\n\n        // if (!isKosherCategoryValid) {\n        //     setErrorMessage('Please select at least one checkbox in kosher_categories');\n        //     return;\n        // }\n        // setErrorMessage('');\n        console.log('Form Data:', {\n            recipeName,\n            selectedImage,\n            cookTime,\n            prepTime,\n            selectedCategory,\n            groceryList: recipeIngredients,\n            description,\n            //recipeServings,\n            recipeYield,\n            recipeInstructions: instructions,\n            recipeCategories,\n        });\n        // setRecipeName('');\n        // setSelectedImage(null);\n        // setCookTime('00:00');\n        // setPrepTime('00:00');\n        // setSelectedCategory('');\n        // setSearchTerm('');\n        // setSelectedMeasurement('');\n        // setAmount('');\n        // setDescription('');\n        // setRecipeServings(1);\n        // setRecipeYield('');\n        // setRecipeInstructions('');\n        // setRecipeCategories({});\n        // setGroceryList([]);\n        const formData = new FormData();\n        formData.append('selectedImage', selectedImage);\n        formData.append('recipeName', recipeName);\n        formData.append('cookTime', cookTime);\n        formData.append('prepTime', prepTime);\n        formData.append('selectedCategory', selectedCategory);\n        formData.append('groceryList', JSON.stringify(recipeIngredients)); // Assuming groceryList is an array\n        formData.append('description', description);\n        //formData.append('recipeServings', recipeServings);\n        formData.append('recipeYield', recipeYield);\n        formData.append('recipeInstructions', instructions);\n        formData.append('recipeCategories', recipeCategories);\n        formData.append('name', name);\n        formData.append('userId', userId);\n\n        try {\n            const response = await fetch('http://localhost:1337/api/addRecipe', {\n                method: 'POST',\n                body: formData,\n            });\n            if (response.ok) {\n                const result = await response.json();\n                console.log(result); // Recipe successfully added\n            } else {\n                console.error(`HTTP Error: ${response.status}`);\n                // Handle error response\n            }\n        } catch (error) {\n            console.error(error);\n            // Handle fetch error (e.g., network error)\n        }\n    };\n\n    const formatCategoryName = (category) => {\n        return category\n            .replace(/_/g, ' ')\n            .replace(/categories/g, '')\n            .trim()\n            .split(' ')\n            .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n            .join(' ');\n    };\n\n    const calculateTotalMinutes = (time) => {\n        const [hours, minutes] = time.split(':').map(Number);\n        return hours * 60 + minutes;\n    };\n\n    useEffect(() => {\n        const computeTimeCategoryTag = (prep, cook) => {\n            const totalMinutes = calculateTotalMinutes(prep) + calculateTotalMinutes(cook);\n\n            if (totalMinutes >= 60) {\n                return 'more than 1 hour';\n            } else if (totalMinutes >= 30) {\n                return '30-60 min';\n            } else if (totalMinutes >= 15) {\n                return '15-30 min';\n            } else {\n                return '0-15 min';\n            }\n        };\n\n        const timeTag = computeTimeCategoryTag(prepTime, cookTime);\n\n        // Update the time category in checkedItems\n        setRecipeCategories((prevCheckedItems) => ({\n            ...prevCheckedItems,\n            time_categories: {\n                [timeTag]: true,\n            },\n        }));\n    }, [prepTime, cookTime]);\n\n    const handleRemoveTag = (category, id) => {\n        setRecipeCategories((prevCheckedItems) => {\n            const updatedCheckedItems = { ...prevCheckedItems };\n            updatedCheckedItems[category] = {\n                ...prevCheckedItems[category],\n                [id]: false, // Set the value to false to \"unselect\" the tag\n            };\n            return updatedCheckedItems;\n        });\n    };\n\n    //console.log(recipeCategories)\n\n    useEffect(() => {\n        fetch('http://localhost:1337/api/search_recipe')\n            .then(response => response.json())\n            .then(data => {\n                const initialRecipeCategories = {};\n                Object.keys(data).forEach(category => {\n                    initialRecipeCategories[category] = {};\n                    data[category].forEach(([id, tagName]) => {\n                        initialRecipeCategories[category][id] = false;\n                    });\n                });\n                setCategories(data);\n                setRecipeCategories(initialRecipeCategories);\n            })\n            .catch(error => {\n                console.error(error);\n            });\n    }, []);\n\n    const handleSelectChange = (category, id) => {\n        setRecipeCategories((prevCategories) => ({\n            ...prevCategories,\n            [category]: {\n                ...(prevCategories[category] || {}),\n                [id]: true,\n            },\n        }));\n    };\n\n    return (\n        <div>\n            {name && <Navbar name={name} />}\n            <div>\n                {user && (\n                    <form className='add-recipe-form'>\n\n                        <div className='image-details two-sections-wrapper'>\n\n                            <div className='section-left image-details-left'>\n                                <div className='add-image-head'>\n                                    <label className='black-title'>Add Images</label>\n                                </div>\n\n                                <div className='image-container'>\n                                    {selectedImage ? (\n                                        <>\n                                            <img className='recipe-image' src={URL.createObjectURL(selectedImage)} alt=\"Selected\" />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <label className=\"custom-file-upload\">\n                                                <i className=\"bi bi-images\"></i>\n                                                <input className=\"input-file\" type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\n                                            </label>\n                                            <label className='add-file-title'>Upload images</label>\n                                        </>\n                                    )}\n                                </div>\n\n                            </div>\n\n                            <div className='section-right image-details-right'>\n                                <div className='description-head'>Add Your Recipe</div>\n                                <div className='description-bottom'>\n                                    <div className='black-title'>Recipe Name & Description</div>\n\n                                    <div className='description-fields'>\n                                        <div className='desc-field'>\n                                            <label className='input-title'>Recipe Name</label>\n                                            <input\n                                                className='input-field'\n                                                type=\"text\"\n                                                value={recipeName || ''}\n                                                onChange={(e) => setRecipeName(e.target.value)}\n                                                required\n                                            />\n                                        </div>\n\n                                        <div className='times-yields'>\n\n                                            <div className='desc-field'>\n                                                <label className='input-title'>Prep Time</label>\n                                                <input\n                                                    className='input-field time-field'\n                                                    type=\"time\"\n                                                    value={prepTime}\n                                                    onChange={(e) => setPrepTime(e.target.value)}\n                                                    required\n                                                />\n                                            </div>\n\n                                            <div className='desc-field'>\n                                                <label className='input-title'>Cook Time</label>\n                                                <input\n                                                    className='input-field time-field'\n                                                    type=\"time\"\n                                                    value={cookTime}\n                                                    onChange={(e) => setCookTime(e.target.value)}\n                                                />\n                                            </div>\n\n                                            <div className='desc-field yields-field'>\n                                                <label className='input-title'>Yields /Servings</label>\n                                                <input\n                                                    className='input-field'\n                                                    type=\"text\"\n                                                    value={recipeYield}\n                                                    onChange={(e) => setRecipeYield(e.target.value)}\n                                                />\n                                            </div>\n                                        </div>\n\n                                        <div className='desc-field'>\n                                            <label className='input-title'>Description</label>\n                                            <textarea\n                                                className='input-field desc-textbox'\n                                                value={description}\n                                                onChange={(e) => setDescription(e.target.value)}\n                                            />\n                                        </div>\n\n                                        <div className='desc-field'>\n                                            <label className='input-title'>Category</label>\n                                            <select\n                                                className='input-field category-desc'\n                                                value={selectedCategory}\n                                                onChange={(e) => setSelectedCategory(e.target.value)}\n                                                required\n                                            >\n                                                <option value=\"\" disabled>\n                                                    Select Category\n                                                </option>\n                                                {Object.entries(categories).map(([category, entries]) => (\n                                                    entries.map(([id, tagName]) => (\n                                                        <option key={id} value={tagName}>\n                                                            {tagName}\n                                                        </option>\n                                                    ))\n                                                ))}\n                                            </select>\n                                        </div>\n\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className='ingredients-steps two-sections-wrapper'>\n\n                            <div className='section-left ingredients-steps-section'>\n                                <label className='black-title'>Ingredients</label>\n\n\n                                <div className='steps-container'>\n\n\n                                    {recipeIngredients.map((ingredient, index) => (\n                                        <div key={index} className='instruction-row'>\n\n                                            <div className=\"input-container\">\n                                                <input\n                                                    className='input-field ingredient-input'\n                                                    placeholder={`Ingredient ${index + 1}`}\n                                                    value={ingredient.ingredient}\n                                                    onChange={(e) => handleIngredientChange(index, 'ingredient', e.target.value)}\n                                                    required\n                                                />\n\n                                                {Array.isArray(suggestions[index]) && suggestions[index].length > 0 && (\n                                                    <div className='ingredient-suggestions'>\n                                                        <div className='toggle-bar'>\n                                                            <ul>\n                                                                {suggestions[index].map((suggestion, suggestionIndex) => (\n                                                                    <li key={suggestionIndex} onClick={() => handleSuggestionClick(index, suggestion)}>\n                                                                        {suggestion}\n                                                                    </li>\n                                                                ))}\n                                                            </ul>\n                                                        </div>\n                                                    </div>\n                                                )}\n\n                                            </div>\n\n                                            <input\n                                                type=\"number\"\n                                                className='input-field step-input amount-input'\n                                                placeholder={`Amount ${index + 1}`}\n                                                value={ingredient.amount}\n                                                onChange={(e) => handleIngredientChange(index, 'amount', e.target.value)}\n                                                required\n                                            />\n\n                                            <select\n                                                className='input-field step-input measure-input'\n                                                value={ingredient.measurementId || ''}\n                                                onChange={(e) => handleMeasurementChange(index, e.target.value)}\n                                                required\n                                            >\n                                                <option value='' disabled>{`Measurement ${index + 1}`}</option>\n                                                {measurements.map((measurement, measurementIndex) => (\n                                                    <option key={measurementIndex} value={measurement.id}>\n                                                        {measurement.measurement}\n                                                    </option>\n                                                ))}\n                                            </select>\n\n                                            <i\n                                                onClick={() => removeIngredient(index)}\n                                                className='bi bi-x-circle remove-icon'\n                                                title='Remove Ingredient'\n                                            ></i>\n                                        </div>\n                                    ))}\n\n                                    <button onClick={addIngredient} className='add-btn'>\n                                        <i className=\"bi bi-plus-circle add-icon\"></i>\n                                        <span>Add another ingredient</span>\n                                    </button>\n\n                                </div>\n\n                            </div>\n\n                            <div className='section-right ingredients-steps-section'>\n                                <label className='black-title'>Instructions</label>\n\n                                <div className='steps-container'>\n\n                                    {instructions.map((instruction, index) => (\n                                        <div key={index} className='instruction-row'>\n                                            <input\n                                                className='input-field step-input'\n                                                placeholder={`Instruction ${index + 1}`}\n                                                value={instruction}\n                                                onChange={(e) => handleInstructionChange(index, e.target.value)}\n                                                required\n                                            />\n                                            <i\n                                                onClick={() => removeInstruction(index)}\n                                                className='bi bi-x-circle remove-icon'\n                                                title='Remove Instruction'\n                                            ></i>\n                                        </div>\n                                    ))}\n\n                                    <button onClick={addInstruction} className='add-btn'>\n                                        <i className=\"bi bi-plus-circle add-icon\"></i>\n                                        <span>Add another instruction</span>\n                                    </button>\n\n                                </div>\n\n                            </div>\n\n                        </div>\n\n                        <div className='tags-section'>\n                            <label className='black-title'>Tags</label>\n\n                            <div className='tags-container'>\n                                {categories && Object.entries(categories).map(([category, entries]) => (\n                                    category !== 'time_categories' && (\n                                        <div key={category} className=\"select-container\">\n                                            <label className='category-name'>{formatCategoryName(category)}</label>\n                                            <select\n                                                className='input-field select-category'\n                                                value={recipeCategories[category]}\n                                                onChange={(e) => handleSelectChange(category, e.target.value)}\n                                            >\n                                                <option value=\"\">Select {formatCategoryName(category)}</option>\n                                                {entries && entries.map(([id, tagName]) => (\n                                                    <option key={id} value={id}>\n                                                        {tagName}\n                                                    </option>\n                                                ))}\n                                            </select>\n                                        </div>\n                                    )\n                                ))}\n                            </div>\n\n                            <hr className=\"separator\" />\n\n                            <div className='selected-tags-container'>\n                                <label className='black-title'>Selected Tags</label>\n                                <div className='selected-tags'>\n                                    {Object.entries(recipeCategories).map(([category, tags]) => (\n                                        category !== 'time_categories' && (\n                                            Object.entries(tags).map(([id, checked]) => (\n                                                checked && (\n                                                    <span key={id} className='tag-container'>\n                                                        <label className='tag-rec'>\n                                                            {categories[category].find(([tagId]) => tagId === parseInt(id, 10))[1]}\n                                                        </label>\n                                                        <i\n                                                            className='bi bi-x-circle remove-icon remove-tag'\n                                                            onClick={() => handleRemoveTag(category, id)}\n                                                        ></i>\n                                                    </span>\n                                                )\n                                            ))\n                                        )\n                                    ))}\n                                </div>\n                            </div>\n\n                        </div>\n\n\n\n                        <div className='submit-section'>\n                            <button className='publish-btn' type=\"submit\" onClick={handleSubmit}>Publish</button>\n                        </div>\n                    </form>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default AddRecipe\n\n\n\n// const [searchTerm, setSearchTerm] = useState('');\n// const [filteredIngredients, setFilteredIngredients] = useState([]);\n// const [selectedIngredient, setSelectedIngredient] = useState('');\n// const [selectedMeasurement, setSelectedMeasurement] = useState('');\n// const [amount, setAmount] = useState('');\n// const [ingredientsList, setIngredientsList] = useState([]);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}