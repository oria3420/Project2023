{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oria3\\\\Desktop\\\\\\u05DB\\u05DC\\u05DC\\u05D9\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8 \\u05D2\\u05DE\\u05E8\\\\code\\\\client\\\\src\\\\pages\\\\AddRecipe.js\",\n  _s = $RefreshSig$();\nimport Navbar from '../components/Navbar';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddRecipe = () => {\n  _s();\n  const navigate = useNavigate();\n  const [name, setName] = useState(null);\n  const [user, setUser] = useState(null);\n  const [recipeName, setRecipeName] = useState('');\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [cookTime, setCookTime] = useState('00:00');\n  const [prepTime, setPrepTime] = useState('00:00');\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [description, setDescription] = useState('');\n  const [recipeServings, setRecipeServings] = useState(1);\n  const [recipeYield, setRecipeYield] = useState('');\n  const [recipeInstructions, setRecipeInstructions] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [categories, setCategories] = useState([]);\n  const [checkedItems, setCheckedItems] = useState({});\n  const [ingredients, setIngredients] = useState([]);\n  const [measurements, setMeasurements] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredIngredients, setFilteredIngredients] = useState([]);\n  const [selectedIngredient, setSelectedIngredient] = useState('');\n  const [selectedMeasurement, setSelectedMeasurement] = useState('');\n  const [amount, setAmount] = useState('');\n  const [groceryList, setGroceryList] = useState([]);\n  const [userId, setUserId] = useState('');\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const _user = jwt_decode(token);\n      setName(_user.name);\n      setUser(_user);\n      setUserId(_user.email);\n      if (!_user) {\n        localStorage.removeItem('token');\n        navigate.replace('/login');\n      }\n    }\n  }, [navigate]);\n  useEffect(() => {\n    fetch('http://localhost:1337/api/search_recipe').then(response => response.json()).then(data => {\n      const expandedCategories = {};\n      const checkedItems = {};\n      Object.keys(data).forEach(category => {\n        //expandedCategories[category] = false;\n        checkedItems[category] = {};\n      });\n      setCategories(data);\n      // for (const categoryKey in data) {\n      //     if (Object.hasOwnProperty.call(data, categoryKey)) {\n      //       const categoryEntries = data[categoryKey];\n      //       console.log(`Category: ${categoryKey}`);\n\n      //       for (const entry of categoryEntries) {\n      //         const [id, name] = entry;\n      //         console.log(`  Entry ID: ${id}, Name: ${name}`);\n      //       }\n      //     }\n      //   }\n      //setExpandedCategories(expandedCategories);\n      setCheckedItems(checkedItems);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  useEffect(() => {\n    if (user) {\n      fetch(`http://localhost:1337/api/groceries`).then(res => res.json()).then(data => {\n        setIngredients(data);\n      }).catch(error => console.error(error));\n    }\n  }, [user]);\n  useEffect(() => {\n    if (user) {\n      fetch(`http://localhost:1337/api/measurements`).then(res => res.json()).then(data => {\n        setMeasurements(data);\n      }).catch(error => console.error(error));\n    }\n  }, [user]);\n  useEffect(() => {\n    if (searchTerm.length >= 3) {\n      const filtered = ingredients.filter(ingred => ingred && ingred.ingredient ? ingred.ingredient.toLowerCase().includes(searchTerm.toLowerCase()) : false);\n      setFilteredIngredients(filtered);\n    } else {\n      setFilteredIngredients([]);\n    }\n  }, [searchTerm, ingredients]);\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    setSelectedImage(file);\n  };\n  const handleAddToGroceryList = () => {\n    if (selectedIngredient && selectedMeasurement && amount) {\n      const newItem = {\n        ingredient: selectedIngredient,\n        measurement: selectedMeasurement,\n        amount: amount\n      };\n      setGroceryList([...groceryList, newItem]);\n      // Clear the input fields after adding to the list\n      setSelectedIngredient('');\n      setSelectedMeasurement('');\n      setAmount('');\n      setSearchTerm('');\n    }\n  };\n  const handleCheckboxChange = (category, id, checked) => {\n    setCheckedItems(prevCheckedItems => {\n      const newCheckedItems = {\n        ...prevCheckedItems,\n        [category]: {\n          ...(prevCheckedItems[category] || {}),\n          [id]: checked\n        }\n      };\n\n      // If the category is kosher_categories, enforce exactly one checkbox\n      if (category === 'kosher_categories') {\n        const kosherCategoryIds = Object.keys(newCheckedItems[category]);\n        const numChecked = kosherCategoryIds.reduce((count, checkboxId) => newCheckedItems[category][checkboxId] ? count + 1 : count, 0);\n\n        // If more than one checkbox is checked, uncheck the current one\n        if (numChecked > 1) {\n          newCheckedItems[category][id] = false;\n        }\n      }\n      return newCheckedItems;\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const kosherCategoryIds = Object.keys(checkedItems['kosher_categories'] || {});\n    const isKosherCategoryValid = kosherCategoryIds.some(checkboxId => checkedItems['kosher_categories'][checkboxId]);\n    if (!isKosherCategoryValid) {\n      setErrorMessage('Please select at least one checkbox in kosher_categories');\n      return;\n    }\n    setErrorMessage('');\n    console.log('Form Data:', {\n      recipeName,\n      selectedImage,\n      cookTime,\n      prepTime,\n      selectedCategory,\n      groceryList,\n      description,\n      recipeServings,\n      recipeYield,\n      recipeInstructions,\n      checkedItems\n    });\n    setRecipeName('');\n    setSelectedImage(null);\n    setCookTime('00:00');\n    setPrepTime('00:00');\n    setSelectedCategory('');\n    setSearchTerm('');\n    setSelectedMeasurement('');\n    setAmount('');\n    setDescription('');\n    setRecipeServings(1);\n    setRecipeYield('');\n    setRecipeInstructions('');\n    setCheckedItems({});\n    setGroceryList([]);\n    const formData = new FormData();\n    formData.append('selectedImage', selectedImage);\n    try {\n      const response = await fetch('http://localhost:1337/api/addRecipe', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          recipeName,\n          formData,\n          cookTime,\n          prepTime,\n          selectedCategory,\n          groceryList,\n          description,\n          recipeServings,\n          recipeYield,\n          recipeInstructions,\n          checkedItems,\n          name,\n          userId\n        })\n      });\n      if (response.ok) {\n        const result = await response.json();\n        console.log(result); // Recipe successfully added\n      } else {\n        console.error(`HTTP Error: ${response.status}`);\n        // Handle error response\n      }\n    } catch (error) {\n      console.error(error);\n      // Handle fetch error (e.g., network error)\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [name && /*#__PURE__*/_jsxDEV(Navbar, {\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: user && /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-container\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"add-recipe-lable\",\n          children: [\"Recipe Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: recipeName || '',\n            onChange: e => setRecipeName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"add-recipe-lable\",\n          children: [\"Recipe Image:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: handleImageChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"add-recipe-lable\",\n          children: [\"Cook Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: cookTime,\n            onChange: e => setCookTime(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"add-recipe-lable\",\n          children: [\"Prep Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: prepTime,\n            onChange: e => setPrepTime(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"add-recipe-lable\",\n          children: [\"Category:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedCategory,\n            onChange: e => setSelectedCategory(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this), Object.entries(categories).map(_ref => {\n              let [category, entries] = _ref;\n              return entries.map(_ref2 => {\n                let [id, tagName] = _ref2;\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: tagName,\n                  children: tagName\n                }, id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 21\n                }, this);\n              });\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"add-recipe-lable\",\n          children: [\"Ingredients:\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-dropdown\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Search ingredients...\",\n              value: searchTerm,\n              onChange: e => setSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 21\n            }, this), searchTerm.length >= 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown-ingredient\",\n              children: filteredIngredients.map(ingredient => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropdown-item\",\n                onClick: () => {\n                  setSearchTerm(ingredient.ingredient);\n                  setSelectedIngredient(ingredient.ingredient);\n                },\n                children: ingredient.ingredient\n              }, ingredient.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-dropdown\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"select-measurements\",\n              value: selectedMeasurement,\n              onChange: e => setSelectedMeasurement(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Select Measurement\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 23\n              }, this), measurements.map(measurement => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: measurement.measurement,\n                children: measurement.measurement\n              }, measurement.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 25\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Amount\",\n              value: amount,\n              onChange: e => setAmount(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddToGroceryList,\n            children: \"Add to List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"groceries-list\",\n            children: [groceryList.length > 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Ingredients List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 48\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: groceryList.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [item.amount, \" \", item.measurement, \" of \", item.ingredient]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"add-recipe-lable\",\n          children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"add-recipe-lable\",\n          children: [\"Recipe Servings:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: recipeServings,\n            onChange: e => setRecipeServings(e.target.value),\n            min: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"add-recipe-lable\",\n          children: [\"Recipe Yield:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: recipeYield,\n            onChange: e => setRecipeYield(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"add-recipe-lable\",\n          children: [\"Recipe Instructions:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: recipeInstructions,\n            onChange: e => setRecipeInstructions(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 17\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 34\n        }, this), Object.entries(categories).map(_ref3 => {\n          let [category, entries] = _ref3;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkbox-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"add-recipe-lable\",\n              children: category + \":\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 23\n            }, this), entries.map(_ref4 => {\n              var _checkedItems$categor;\n              let [id, tagName] = _ref4;\n              return /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"checkbox-label\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: ((_checkedItems$categor = checkedItems[category]) === null || _checkedItems$categor === void 0 ? void 0 : _checkedItems$categor[id]) || false,\n                  onChange: e => handleCheckboxChange(category, id, e.target.checked)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 27\n                }, this), tagName]\n              }, id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 25\n              }, this);\n            })]\n          }, category, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 21\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 9\n  }, this);\n};\n_s(AddRecipe, \"+4rHI6uh6m279dLbikPp/8IMwZ0=\", false, function () {\n  return [useNavigate];\n});\n_c = AddRecipe;\nexport default AddRecipe;\nvar _c;\n$RefreshReg$(_c, \"AddRecipe\");","map":{"version":3,"names":["Navbar","React","useState","useEffect","jwt_decode","useNavigate","jsxDEV","_jsxDEV","AddRecipe","_s","navigate","name","setName","user","setUser","recipeName","setRecipeName","selectedImage","setSelectedImage","cookTime","setCookTime","prepTime","setPrepTime","selectedCategory","setSelectedCategory","description","setDescription","recipeServings","setRecipeServings","recipeYield","setRecipeYield","recipeInstructions","setRecipeInstructions","errorMessage","setErrorMessage","categories","setCategories","checkedItems","setCheckedItems","ingredients","setIngredients","measurements","setMeasurements","searchTerm","setSearchTerm","filteredIngredients","setFilteredIngredients","selectedIngredient","setSelectedIngredient","selectedMeasurement","setSelectedMeasurement","amount","setAmount","groceryList","setGroceryList","userId","setUserId","token","localStorage","getItem","_user","email","removeItem","replace","fetch","then","response","json","data","expandedCategories","Object","keys","forEach","category","catch","error","console","res","length","filtered","filter","ingred","ingredient","toLowerCase","includes","handleImageChange","e","file","target","files","handleAddToGroceryList","newItem","measurement","handleCheckboxChange","id","checked","prevCheckedItems","newCheckedItems","kosherCategoryIds","numChecked","reduce","count","checkboxId","handleSubmit","preventDefault","isKosherCategoryValid","some","log","formData","FormData","append","method","headers","body","JSON","stringify","ok","result","status","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","value","onChange","required","accept","disabled","entries","map","_ref","_ref2","tagName","placeholder","onClick","item","index","min","_ref3","_ref4","_checkedItems$categor","_c","$RefreshReg$"],"sources":["C:/Users/oria3/Desktop/כללי/שנה ג/פרוייקט גמר/code/client/src/pages/AddRecipe.js"],"sourcesContent":["import Navbar from '../components/Navbar';\nimport './App.css';\nimport React, { useState, useEffect} from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from 'react-router-dom'\n\nconst AddRecipe = () => {\n    const navigate = useNavigate()\n    const [name, setName] = useState(null)\n    const [user, setUser] = useState(null)\n    const [recipeName, setRecipeName] = useState('');\n    const [selectedImage, setSelectedImage] = useState(null);\n    const [cookTime, setCookTime] = useState('00:00');\n    const [prepTime, setPrepTime] = useState('00:00');\n    const [selectedCategory, setSelectedCategory] = useState('');\n    const [description, setDescription] = useState('');\n    const [recipeServings, setRecipeServings] = useState(1);\n    const [recipeYield, setRecipeYield] = useState('');\n    const [recipeInstructions, setRecipeInstructions] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const [categories, setCategories] = useState([]);\n    const [checkedItems, setCheckedItems] = useState({});\n    const [ingredients,setIngredients] = useState([])\n    const [measurements,setMeasurements] = useState([])\n    const [searchTerm, setSearchTerm] = useState('');\n    const [filteredIngredients, setFilteredIngredients] = useState([]);\n    const [selectedIngredient, setSelectedIngredient] = useState('');\n    const [selectedMeasurement, setSelectedMeasurement] = useState('');\n    const [amount, setAmount] = useState('');\n    const [groceryList, setGroceryList] = useState([]);\n    const [userId,setUserId] = useState('')\n    \n    useEffect(() => {\n        const token = localStorage.getItem('token')\n        if (token) {\n            const _user = jwt_decode(token)\n            setName(_user.name)\n            setUser(_user)\n            setUserId(_user.email)\n            if (!_user) {\n                localStorage.removeItem('token')\n                navigate.replace('/login')\n            }\n        }\n    }, [navigate])\n\n\n    useEffect(() => {\n        fetch('http://localhost:1337/api/search_recipe')\n            .then(response => response.json())\n            .then(data => {\n                const expandedCategories = {};\n                const checkedItems = {};\n                Object.keys(data).forEach(category => {\n                    //expandedCategories[category] = false;\n                    checkedItems[category] = {};\n                });\n                setCategories(data);\n                // for (const categoryKey in data) {\n                //     if (Object.hasOwnProperty.call(data, categoryKey)) {\n                //       const categoryEntries = data[categoryKey];\n                //       console.log(`Category: ${categoryKey}`);\n                      \n                //       for (const entry of categoryEntries) {\n                //         const [id, name] = entry;\n                //         console.log(`  Entry ID: ${id}, Name: ${name}`);\n                //       }\n                //     }\n                //   }\n                //setExpandedCategories(expandedCategories);\n                setCheckedItems(checkedItems);\n            })\n            .catch(error => {\n                console.error(error);\n            });\n    }, []);\n\n    useEffect(() => {\n        if(user){\n            fetch(`http://localhost:1337/api/groceries`)\n                .then(res => res.json())\n                .then(data => {\n                    setIngredients(data)\n                })\n                .catch(error => console.error(error))\n        }\n    }, [user]);\n    \n    useEffect(() => {\n        if(user){\n            fetch(`http://localhost:1337/api/measurements`)\n                .then(res => res.json())\n                .then(data => {\n                  setMeasurements(data)\n                })\n                .catch(error => console.error(error))\n        }\n    }, [user]);\n\n    useEffect(() => {\n        if (searchTerm.length >= 3) {\n          const filtered = ingredients.filter((ingred) =>\n            ingred && ingred.ingredient\n              ? ingred.ingredient.toLowerCase().includes(searchTerm.toLowerCase())\n              : false\n          );\n          setFilteredIngredients(filtered);\n        } else {\n          setFilteredIngredients([]);\n        }\n    }, [searchTerm, ingredients]);\n    \n    const handleImageChange = (e) => {\n        const file = e.target.files[0];\n        setSelectedImage(file);\n    };\n\n    const handleAddToGroceryList = () => {\n    if (selectedIngredient && selectedMeasurement && amount) {\n        const newItem = {\n        ingredient: selectedIngredient,\n        measurement: selectedMeasurement,\n        amount: amount,\n        };\n        setGroceryList([...groceryList, newItem]);\n        // Clear the input fields after adding to the list\n        setSelectedIngredient('');\n        setSelectedMeasurement('');\n        setAmount('');\n        setSearchTerm('');\n    }\n    };\n\nconst handleCheckboxChange = (category, id, checked) => {\n    setCheckedItems((prevCheckedItems) => {\n        const newCheckedItems = {\n        ...prevCheckedItems,\n        [category]: {\n            ...(prevCheckedItems[category] || {}),\n            [id]: checked,\n        },\n        };\n    \n        // If the category is kosher_categories, enforce exactly one checkbox\n        if (category === 'kosher_categories') {\n        const kosherCategoryIds = Object.keys(newCheckedItems[category]);\n        const numChecked = kosherCategoryIds.reduce(\n            (count, checkboxId) => (newCheckedItems[category][checkboxId] ? count + 1 : count),\n            0\n        );\n    \n        // If more than one checkbox is checked, uncheck the current one\n        if (numChecked > 1) {\n            newCheckedItems[category][id] = false;\n        }\n        }\n    \n        return newCheckedItems;\n    });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const kosherCategoryIds = Object.keys(checkedItems['kosher_categories'] || {});\n        const isKosherCategoryValid = kosherCategoryIds.some(\n            (checkboxId) => checkedItems['kosher_categories'][checkboxId]\n        );\n\n        if (!isKosherCategoryValid) {\n            setErrorMessage('Please select at least one checkbox in kosher_categories');\n            return;\n        }\n        setErrorMessage('');\n        console.log('Form Data:', {\n            recipeName,\n            selectedImage,\n            cookTime,\n            prepTime,\n            selectedCategory,\n            groceryList,\n            description,\n            recipeServings,\n            recipeYield,\n            recipeInstructions,\n            checkedItems,\n        });\n        setRecipeName('');\n        setSelectedImage(null);\n        setCookTime('00:00');\n        setPrepTime('00:00');\n        setSelectedCategory('');\n        setSearchTerm('');\n        setSelectedMeasurement('');\n        setAmount('');\n        setDescription('');\n        setRecipeServings(1);\n        setRecipeYield('');\n        setRecipeInstructions('');\n        setCheckedItems({});\n        setGroceryList([]);\n        const formData = new FormData();\n        formData.append('selectedImage', selectedImage);\n        try {\n            const response = await fetch('http://localhost:1337/api/addRecipe', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify({\n                recipeName,\n                formData,\n                cookTime,\n                prepTime,\n                selectedCategory,\n                groceryList,\n                description,\n                recipeServings,\n                recipeYield,\n                recipeInstructions,\n                checkedItems,\n                name,\n                userId,\n              }),\n            });\n        \n            if (response.ok) {\n              const result = await response.json();\n              console.log(result); // Recipe successfully added\n            } else {\n              console.error(`HTTP Error: ${response.status}`);\n              // Handle error response\n            }\n          } catch (error) {\n            console.error(error);\n            // Handle fetch error (e.g., network error)\n          }\n        };\n\n    return (\n        <div>\n            {name && <Navbar name={name} />}\n            <div>\n            {user && (\n            <form className=\"form-container\" onSubmit={handleSubmit}>\n                <label className='add-recipe-lable'>\n                Recipe Name:\n                <input\n                    type=\"text\"\n                    value={recipeName || ''}\n                    onChange={(e) => setRecipeName(e.target.value)}\n                    required\n                />\n                </label>\n\n                <label className='add-recipe-lable'>\n                    Recipe Image:\n                    <input\n                        type=\"file\"\n                        accept=\"image/*\"\n                        onChange={handleImageChange}\n                    />\n                </label>\n\n                <label className='add-recipe-lable'>\n                Cook Time:\n                <input\n                    type=\"time\"\n                    value={cookTime}\n                    onChange={(e) => setCookTime(e.target.value)}\n                />\n                </label>\n\n                <label className='add-recipe-lable'>\n                Prep Time:\n                <input\n                    type=\"time\"\n                    value={prepTime}\n                    onChange={(e) => setPrepTime(e.target.value)}\n                    required\n                />\n                </label>\n\n                <label className='add-recipe-lable'>\n                Category:\n                <select\n                value={selectedCategory}\n                onChange={(e) => setSelectedCategory(e.target.value)}\n                required\n                >\n                <option value=\"\" disabled>\n                    Select Category\n                </option>\n                {Object.entries(categories).map(([category, entries]) => (\n                    entries.map(([id, tagName]) => (\n                    <option key={id} value={tagName}>\n                        {tagName}\n                    </option>\n                    ))\n                  ))}\n                </select>\n                </label>\n\n                <label className='add-recipe-lable'>\n                    Ingredients:\n                    <div className=\"custom-dropdown\">\n                    <input\n                    type=\"text\"\n                    placeholder=\"Search ingredients...\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    />\n                    {searchTerm.length >= 3 && (\n                    <div className=\"dropdown-ingredient\">\n                    {filteredIngredients.map((ingredient) => (\n                        <div\n                        key={ingredient.id}\n                        className=\"dropdown-item\"\n                        onClick={() => {\n                        setSearchTerm(ingredient.ingredient);\n                        setSelectedIngredient(ingredient.ingredient);\n                        }}\n                    >\n                    {ingredient.ingredient}\n                    </div>\n                    ))}\n                </div>\n                )}\n                    </div>\n                    <div className=\"custom-dropdown\">\n                    <select\n                    className='select-measurements'\n                    value={selectedMeasurement}\n                    onChange={(e) => setSelectedMeasurement(e.target.value)}\n                    >\n                      <option value=\"\" disabled>\n                        Select Measurement\n                      </option>\n                      {measurements.map((measurement) => (\n                        <option key={measurement.id} value={measurement.measurement}>\n                          {measurement.measurement}\n                        </option>\n                      ))}\n                    </select>\n                    </div>\n                    <div>\n                    <input\n                    type=\"number\"\n                    placeholder=\"Amount\"\n                    value={amount}\n                    onChange={(e) => setAmount(e.target.value)}\n                    />\n                    </div>\n                    <button onClick={handleAddToGroceryList}>Add to List</button>\n                    <div className='groceries-list'>\n                    {groceryList.length > 0 && <h2>Ingredients List</h2>}\n                    <ul>\n                      {groceryList.map((item, index) => (\n                        <li key={index}>\n                          {item.amount} {item.measurement} of {item.ingredient}\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                  \n                </label>\n\n                <label className='add-recipe-lable'>\n                Description:\n                <textarea\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                />\n                </label>\n\n                <label className='add-recipe-lable'>\n                Recipe Servings:\n                <input\n                    type=\"number\"\n                    value={recipeServings}\n                    onChange={(e) => setRecipeServings(e.target.value)}\n                    min=\"0\"\n                />\n                </label>\n\n                <label className='add-recipe-lable'>\n                Recipe Yield:\n                <input\n                    type=\"text\"\n                    value={recipeYield}\n                    onChange={(e) => setRecipeYield(e.target.value)}\n                />\n                </label>\n\n                <label className='add-recipe-lable'>\n                Recipe Instructions:\n                <textarea\n                    value={recipeInstructions}\n                    onChange={(e) => setRecipeInstructions(e.target.value)}\n                    required\n                />\n                </label>\n                {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n\n                {Object.entries(categories).map(([category, entries]) => (\n                    <div key={category} className=\"checkbox-container\">\n                      <label className=\"add-recipe-lable\">{category+\":\"}</label>\n                      {entries.map(([id, tagName]) => (\n                        <label key={id} className=\"checkbox-label\">\n                          <input\n                            type=\"checkbox\"\n                            checked={checkedItems[category]?.[id] || false}\n                            onChange={(e) => handleCheckboxChange(category, id, e.target.checked)}\n                        />\n                        {tagName}\n                        </label>\n                      ))}\n                    </div>\n                  ))}\n\n                <button type=\"submit\">Submit</button>\n            </form>\n            )}\n          </div>\n        </div>\n    )\n}\n\nexport default AddRecipe\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}