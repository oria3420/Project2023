{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oria3\\\\Desktop\\\\\\u05DB\\u05DC\\u05DC\\u05D9\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8 \\u05D2\\u05DE\\u05E8\\\\code\\\\client\\\\src\\\\pages\\\\Groceries.js\",\n  _s = $RefreshSig$();\nimport Navbar from '../components/Navbar';\nimport RecipeCard from '../components/RecipeCard';\nimport './App.css';\nimport './Groceries.css';\nimport './AddRecipe.css';\nimport React, { useState, useEffect, useRef } from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from 'react-router-dom';\nimport './Connect.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Groceries = () => {\n  _s();\n  const navigate = useNavigate();\n  const [name, setName] = useState(null);\n  const [user, setUser] = useState(null);\n  const [ingredients, setIngredients] = useState([]);\n  const [groceryList, setGroceryList] = useState([]);\n  const [ingredient, setIngredient] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [inputAlertMessage, setInputAlertMessage] = useState('');\n  const [saerchAlertMessage, setSaerchAlertMessage] = useState('');\n  const [recipes, setRecipes] = useState([]);\n  const [filteredRecipes, setFilteredRecipes] = useState([]);\n  const [searchClicked, setSearchClicked] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const suggestionsRef = useRef(null);\n  useEffect(() => {\n    fetch(`http://localhost:1337/api/table/recipes`).then(res => res.json()).then(data => {\n      setRecipes(data);\n    }).catch(error => console.error(error));\n  }, []);\n  const filterRecipesByGroceryList = async () => {\n    console.log(\"in filterRecipesByGroceryList\");\n    if (groceryList.length === 0) {\n      console.log('Grocery list is empty');\n      setFilteredRecipes([]); // Clear any previous results\n      setIsLoading(false); // Stop loading\n      return;\n    }\n    setSearchClicked(true); // Set the state to true when the button is clicked\n    setIsLoading(true); // Start loading\n    setSe;\n\n    // Array to store filtered recipe IDs\n    const filteredRecipeIds = [];\n\n    // Use Promise.all with map to make the loops asynchronous\n    await Promise.all(recipes.map(async recipe => {\n      console.log(`Checking recipe: ${recipe.RecipeId}`);\n      const ingredientMatches = await Promise.all(groceryList.map(async ingredient => {\n        const ingredientId = ingredient.id;\n        try {\n          // Make a request to the server to check if the ingredient is in the recipe\n          const response = await fetch(`http://localhost:1337/api/search_recipes/${recipe.RecipeId}/${ingredientId}`);\n          console.log(`Response for ${ingredient.ingredient} in ${recipe.RecipeId}:`, response.status);\n\n          // Check if the status is 200 (ingredient is in the recipe)\n          return response.status === 200;\n        } catch (error) {\n          console.error('Error checking ingredient in recipe:', error);\n          return false;\n        }\n      }));\n\n      // If all ingredients are matched, add the recipe ID to the filteredRecipeIds\n      if (ingredientMatches.every(match => match)) {\n        filteredRecipeIds.push(recipe.RecipeId);\n      }\n    }));\n\n    // Log filteredRecipeIds for debugging\n    console.log('Filtered Recipe IDs:', filteredRecipeIds);\n\n    // Filter the recipes based on the IDs\n    const filteredRecipes = recipes.filter(recipe => filteredRecipeIds.includes(recipe.RecipeId));\n    setFilteredRecipes(filteredRecipes);\n\n    // Log filteredRecipes for debugging\n    console.log('Filtered Recipes:', filteredRecipes);\n    setIsLoading(false); // Stop loading\n  };\n\n  const handleIngredientChange = value => {\n    setIngredient(value);\n    setInputAlertMessage('');\n    updateIngredientSuggestions(value);\n  };\n  const updateIngredientSuggestions = inputValue => {\n    if (inputValue.length >= 3) {\n      const filteredIngredients = ingredients.filter(ingred => typeof ingred.ingredient === 'string' && ingred.ingredient.toLowerCase().startsWith(inputValue.toLowerCase())).map(ingred => ingred.ingredient);\n      setSuggestions(filteredIngredients);\n    } else {\n      setSuggestions([]);\n    }\n  };\n  const handleSuggestionClick = suggestion => {\n    setIngredient(suggestion);\n    setSuggestions([]);\n  };\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const _user = jwt_decode(token);\n      setName(_user.name);\n      setUser(_user);\n      if (!_user) {\n        localStorage.removeItem('token');\n        navigate.replace('/login');\n      }\n    }\n  }, [navigate]);\n  useEffect(() => {\n    if (user) {\n      fetch(`http://localhost:1337/api/groceries`).then(res => res.json()).then(data => {\n        setIngredients(data);\n      }).catch(error => console.error(error));\n    }\n  }, [user]);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (suggestionsRef.current && !suggestionsRef.current.contains(event.target)) {\n        setSuggestions([]);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  const handleAddToGroceryList = () => {\n    if (ingredient) {\n      const normalizedIngredient = ingredient.toLowerCase();\n      const itemExists = groceryList.some(item => item.ingredient.toLowerCase() === normalizedIngredient);\n      const ingredientExistsInDB = ingredients.find(ingred => ingred.ingredient.toLowerCase() === normalizedIngredient);\n      if (itemExists) {\n        setInputAlertMessage(`The ingredient \"${ingredient}\" is already in your grocery list.`);\n      } else if (!ingredientExistsInDB) {\n        setInputAlertMessage(`The ingredient \"${ingredient}\" does not exist.`);\n      } else {\n        const newItem = {\n          id: ingredientExistsInDB.id,\n          // Use the ID from the matched ingredient in the database\n          ingredient: ingredientExistsInDB.ingredient // Use the normalized name from the database\n        };\n\n        setGroceryList([...groceryList, newItem]);\n        // Clear the input fields after adding to the list\n        setIngredient('');\n        setSuggestions([]);\n        setInputAlertMessage(''); // Clear any previous alert messages\n      }\n    }\n  };\n\n  useEffect(() => {\n    // Load grocery list from local storage when the component mounts\n    const storedGroceryList = JSON.parse(localStorage.getItem('groceryList')) || [];\n    setGroceryList(storedGroceryList);\n  }, []);\n  useEffect(() => {\n    // Save grocery list to local storage whenever it changes\n    localStorage.setItem('groceryList', JSON.stringify(groceryList));\n  }, [groceryList]);\n  const handleDeleteFromGroceryList = id => {\n    const updatedList = groceryList.filter(item => item.id !== id);\n    setGroceryList(updatedList);\n  };\n  const handleClearAll = () => {\n    setGroceryList([]);\n  };\n  const handleInputFocus = inputValue => {\n    if (inputValue.length >= 3) {\n      const filteredIngredients = ingredients.filter(ingred => typeof ingred.ingredient === 'string' && ingred.ingredient.toLowerCase().startsWith(inputValue.toLowerCase())).map(ingred => ingred.ingredient);\n      setSuggestions(filteredIngredients);\n    } else {\n      setSuggestions([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [name && /*#__PURE__*/_jsxDEV(Navbar, {\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ing-page-main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ing-page-head\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ing-page-main-title\",\n          children: [\"Discover Recipes with What\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), \"You Have\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ing-page-sub-title\",\n          children: \"Cook delicious meals using ingredients you already have at home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ing-page-search-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-ing-input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input-field grocery-input\",\n              type: \"text\",\n              placeholder: \"Add ingredient\",\n              value: ingredient,\n              onChange: e => handleIngredientChange(e.target.value),\n              onFocus: e => handleInputFocus(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ingredient-suggestions\",\n              ref: suggestionsRef,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"toggle-bar\",\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    onClick: () => handleSuggestionClick(suggestion),\n                    children: suggestion\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddToGroceryList,\n            className: \"add-btn-grocery\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-plus-circle add-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), inputAlertMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ing-alrady-exists-msg\",\n          children: inputAlertMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ing-page-bottom\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"groceries-list-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"black-title\",\n            children: \"Grocery List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), groceryList.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-grocery-list-message\",\n            children: \"Your grocery list is empty.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grocery-list\",\n            children: groceryList.map((item, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ing-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"ing-rec\",\n                children: item.ingredient\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-x-circle remove-icon remove-ing\",\n                onClick: () => handleDeleteFromGroceryList(item.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grocery-list-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"clear-all-groceies-btn\",\n            onClick: handleClearAll,\n            children: \"Clear All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"find-recipes-groceies-btn\",\n            onClick: filterRecipesByGroceryList,\n            children: \"Find Recipes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), searchClicked && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipes-by-grocery-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"black-title\",\n            children: \"Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-message\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 17\n          }, this) : filteredRecipes.length === 0 && searchClicked ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"grocery-page-no-results-message\",\n            children: \"No results found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recipes-by-grocery\",\n            children: filteredRecipes.map((recipe, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recipe-card-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(RecipeCard, {\n                recipe: recipe,\n                user: user\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 23\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n};\n_s(Groceries, \"XZzec13w2JtQpEeeEx7IrEu/eAo=\", false, function () {\n  return [useNavigate];\n});\n_c = Groceries;\nexport default Groceries;\nvar _c;\n$RefreshReg$(_c, \"Groceries\");","map":{"version":3,"names":["Navbar","RecipeCard","React","useState","useEffect","useRef","jwt_decode","useNavigate","jsxDEV","_jsxDEV","Groceries","_s","navigate","name","setName","user","setUser","ingredients","setIngredients","groceryList","setGroceryList","ingredient","setIngredient","suggestions","setSuggestions","inputAlertMessage","setInputAlertMessage","saerchAlertMessage","setSaerchAlertMessage","recipes","setRecipes","filteredRecipes","setFilteredRecipes","searchClicked","setSearchClicked","isLoading","setIsLoading","suggestionsRef","fetch","then","res","json","data","catch","error","console","filterRecipesByGroceryList","log","length","setSe","filteredRecipeIds","Promise","all","map","recipe","RecipeId","ingredientMatches","ingredientId","id","response","status","every","match","push","filter","includes","handleIngredientChange","value","updateIngredientSuggestions","inputValue","filteredIngredients","ingred","toLowerCase","startsWith","handleSuggestionClick","suggestion","token","localStorage","getItem","_user","removeItem","replace","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleAddToGroceryList","normalizedIngredient","itemExists","some","item","ingredientExistsInDB","find","newItem","storedGroceryList","JSON","parse","setItem","stringify","handleDeleteFromGroceryList","updatedList","handleClearAll","handleInputFocus","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","onChange","e","onFocus","ref","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/oria3/Desktop/כללי/לימודים/שנה ג/פרוייקט גמר/code/client/src/pages/Groceries.js"],"sourcesContent":["import Navbar from '../components/Navbar';\nimport RecipeCard from '../components/RecipeCard';\nimport './App.css';\nimport './Groceries.css'\nimport './AddRecipe.css'\nimport React, { useState, useEffect, useRef } from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from 'react-router-dom'\nimport './Connect.css';\n\nconst Groceries = () => {\n  const navigate = useNavigate()\n  const [name, setName] = useState(null)\n  const [user, setUser] = useState(null)\n  const [ingredients, setIngredients] = useState([])\n  const [groceryList, setGroceryList] = useState([]);\n  const [ingredient, setIngredient] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [inputAlertMessage, setInputAlertMessage] = useState('');\n  const [saerchAlertMessage, setSaerchAlertMessage] = useState('');\n  const [recipes, setRecipes] = useState([]);\n  const [filteredRecipes, setFilteredRecipes] = useState([]);\n  const [searchClicked, setSearchClicked] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const suggestionsRef = useRef(null);\n\n\n  useEffect(() => {\n    fetch(`http://localhost:1337/api/table/recipes`)\n      .then((res) => res.json())\n      .then((data) => {\n        setRecipes(data);\n      })\n      .catch((error) => console.error(error));\n  }, []);\n\n  const filterRecipesByGroceryList = async () => {\n    console.log(\"in filterRecipesByGroceryList\");\n\n    if (groceryList.length === 0) {\n      console.log('Grocery list is empty');\n      setFilteredRecipes([]); // Clear any previous results\n      setIsLoading(false); // Stop loading\n      return;\n    }\n\n    setSearchClicked(true); // Set the state to true when the button is clicked\n    setIsLoading(true); // Start loading\n    setSe\n\n\n    // Array to store filtered recipe IDs\n    const filteredRecipeIds = [];\n\n    // Use Promise.all with map to make the loops asynchronous\n    await Promise.all(\n      recipes.map(async (recipe) => {\n        console.log(`Checking recipe: ${recipe.RecipeId}`);\n        const ingredientMatches = await Promise.all(\n          groceryList.map(async (ingredient) => {\n            const ingredientId = ingredient.id;\n            try {\n              // Make a request to the server to check if the ingredient is in the recipe\n              const response = await fetch(`http://localhost:1337/api/search_recipes/${recipe.RecipeId}/${ingredientId}`);\n              console.log(`Response for ${ingredient.ingredient} in ${recipe.RecipeId}:`, response.status);\n\n              // Check if the status is 200 (ingredient is in the recipe)\n              return response.status === 200;\n            } catch (error) {\n              console.error('Error checking ingredient in recipe:', error);\n              return false;\n            }\n          })\n        );\n\n        // If all ingredients are matched, add the recipe ID to the filteredRecipeIds\n        if (ingredientMatches.every(match => match)) {\n          filteredRecipeIds.push(recipe.RecipeId);\n        }\n      })\n    );\n\n    // Log filteredRecipeIds for debugging\n    console.log('Filtered Recipe IDs:', filteredRecipeIds);\n\n    // Filter the recipes based on the IDs\n    const filteredRecipes = recipes.filter((recipe) => filteredRecipeIds.includes(recipe.RecipeId));\n    setFilteredRecipes(filteredRecipes);\n\n    // Log filteredRecipes for debugging\n    console.log('Filtered Recipes:', filteredRecipes);\n\n    setIsLoading(false); // Stop loading\n  };\n\n\n  const handleIngredientChange = (value) => {\n    setIngredient(value);\n    setInputAlertMessage('');\n    updateIngredientSuggestions(value);\n  };\n\n  const updateIngredientSuggestions = (inputValue) => {\n    if (inputValue.length >= 3) {\n      const filteredIngredients = ingredients\n        .filter((ingred) =>\n          typeof ingred.ingredient === 'string' &&\n          ingred.ingredient.toLowerCase().startsWith(inputValue.toLowerCase())\n        )\n        .map((ingred) => ingred.ingredient);\n\n      setSuggestions(filteredIngredients);\n    } else {\n      setSuggestions([]);\n    }\n  };\n\n  const handleSuggestionClick = (suggestion) => {\n    setIngredient(suggestion);\n    setSuggestions([]);\n  };\n\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      const _user = jwt_decode(token)\n      setName(_user.name)\n      setUser(_user)\n      if (!_user) {\n        localStorage.removeItem('token')\n        navigate.replace('/login')\n      }\n    }\n  }, [navigate])\n\n  useEffect(() => {\n    if (user) {\n      fetch(`http://localhost:1337/api/groceries`)\n        .then(res => res.json())\n        .then(data => {\n          setIngredients(data)\n        })\n        .catch(error => console.error(error))\n    }\n  }, [user]);\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (suggestionsRef.current && !suggestionsRef.current.contains(event.target)) {\n        setSuggestions([]);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n\n  const handleAddToGroceryList = () => {\n    if (ingredient) {\n      const normalizedIngredient = ingredient.toLowerCase();\n      const itemExists = groceryList.some(item => item.ingredient.toLowerCase() === normalizedIngredient);\n      const ingredientExistsInDB = ingredients.find(ingred => ingred.ingredient.toLowerCase() === normalizedIngredient);\n\n      if (itemExists) {\n        setInputAlertMessage(`The ingredient \"${ingredient}\" is already in your grocery list.`);\n      } else if (!ingredientExistsInDB) {\n        setInputAlertMessage(`The ingredient \"${ingredient}\" does not exist.`);\n      } else {\n        const newItem = {\n          id: ingredientExistsInDB.id, // Use the ID from the matched ingredient in the database\n          ingredient: ingredientExistsInDB.ingredient, // Use the normalized name from the database\n        };\n        setGroceryList([...groceryList, newItem]);\n        // Clear the input fields after adding to the list\n        setIngredient('');\n        setSuggestions([]);\n        setInputAlertMessage(''); // Clear any previous alert messages\n      }\n    }\n  };\n\n\n\n  useEffect(() => {\n    // Load grocery list from local storage when the component mounts\n    const storedGroceryList = JSON.parse(localStorage.getItem('groceryList')) || [];\n    setGroceryList(storedGroceryList);\n  }, []);\n\n  useEffect(() => {\n    // Save grocery list to local storage whenever it changes\n    localStorage.setItem('groceryList', JSON.stringify(groceryList));\n  }, [groceryList]);\n\n\n\n  const handleDeleteFromGroceryList = (id) => {\n    const updatedList = groceryList.filter((item) => item.id !== id);\n    setGroceryList(updatedList);\n  };\n\n  const handleClearAll = () => {\n    setGroceryList([]);\n  };\n\n  const handleInputFocus = (inputValue) => {\n    if (inputValue.length >= 3) {\n      const filteredIngredients = ingredients\n        .filter((ingred) =>\n          typeof ingred.ingredient === 'string' &&\n          ingred.ingredient.toLowerCase().startsWith(inputValue.toLowerCase())\n        )\n        .map((ingred) => ingred.ingredient);\n\n      setSuggestions(filteredIngredients);\n    } else {\n      setSuggestions([]);\n    }\n  };\n\n\n  return (\n    <div>\n      {name && <Navbar name={name} />}\n      <div className='ing-page-main-container'>\n\n        <div className='ing-page-head'>\n          <div className='ing-page-main-title'>\n            Discover Recipes with What\n            <br />\n            You Have\n          </div>\n          <div className='ing-page-sub-title'>\n            Cook delicious meals using ingredients you already have at home\n          </div>\n\n\n          <div className='ing-page-search-container'>\n\n            <div className=\"search-ing-input-container\">\n\n              <input\n                className='input-field grocery-input'\n                type=\"text\"\n                placeholder=\"Add ingredient\"\n                value={ingredient}\n                onChange={(e) => handleIngredientChange(e.target.value)}\n                onFocus={(e) => handleInputFocus(e.target.value)}\n              />\n              {suggestions.length > 0 && (\n                <div className='ingredient-suggestions' ref={suggestionsRef}>\n                  <div className='toggle-bar'>\n                    <ul>\n                      {suggestions.map((suggestion, index) => (\n                        <li key={index} onClick={() => handleSuggestionClick(suggestion)}>\n                          {suggestion}\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n              )}\n\n            </div>\n\n            <button onClick={handleAddToGroceryList} className='add-btn-grocery'>\n              <i className=\"bi bi-plus-circle add-icon\"></i>\n            </button>\n          </div>\n\n          {inputAlertMessage && <div className=\"ing-alrady-exists-msg\">{inputAlertMessage}</div>}\n\n        </div>\n\n        <div className='ing-page-bottom'>\n\n          <div className='groceries-list-container'>\n            <div className='black-title'>Grocery List</div>\n\n\n            {groceryList.length === 0 ? (\n              <div className='empty-grocery-list-message'>\n                Your grocery list is empty.\n              </div>\n            ) : (\n              <div className='grocery-list'>{\n                groceryList.map((item, index) => (\n                  <span key={index} className='ing-container'>\n                    <label className='ing-rec'>\n                      {item.ingredient}\n                    </label>\n                    <i\n                      className='bi bi-x-circle remove-icon remove-ing'\n                      onClick={() => handleDeleteFromGroceryList(item.id)}\n                    ></i>\n                  </span>\n                ))}\n              </div>\n            )}\n          </div>\n\n          <div className='grocery-list-buttons'>\n            <button className='clear-all-groceies-btn' onClick={handleClearAll}>\n              Clear All\n            </button>\n            <button className='find-recipes-groceies-btn' onClick={filterRecipesByGroceryList}>\n              Find Recipes\n            </button>\n\n          </div>\n\n          {searchClicked && (\n            <div className='recipes-by-grocery-container'>\n              <div className='black-title'>Results</div>\n\n              {isLoading ? (\n                <div className=\"loading-message\">\n                  <div className=\"loading-spinner\"></div>\n                </div>\n              ) : filteredRecipes.length === 0 && searchClicked ? (\n                <p className=\"grocery-page-no-results-message\">No results found.</p>\n              ) : (\n                <div className='recipes-by-grocery'>\n                  {filteredRecipes.map((recipe, index) => (\n                    <div className='recipe-card-wrapper' key={index}>\n                      <RecipeCard recipe={recipe} user={user} />\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n\n          )}\n\n        </div>\n      </div>\n\n\n    </div>\n  );\n};\n\nexport default Groceries\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}