{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oria3\\\\Desktop\\\\\\u05DB\\u05DC\\u05DC\\u05D9\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8 \\u05D2\\u05DE\\u05E8\\\\code\\\\client\\\\src\\\\pages\\\\AddRecipe.js\",\n  _s = $RefreshSig$();\nimport Navbar from '../components/Navbar';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddRecipe = () => {\n  _s();\n  const navigate = useNavigate();\n  const [name, setName] = useState(null);\n  const [user, setUser] = useState(null);\n  const [recipeName, setRecipeName] = useState('');\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [cookTime, setCookTime] = useState('00:00');\n  const [prepTime, setPrepTime] = useState('00:00');\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [description, setDescription] = useState('');\n  const [recipeServings, setRecipeServings] = useState(1);\n  const [recipeYield, setRecipeYield] = useState('');\n  const [recipeInstructions, setRecipeInstructions] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [categories, setCategories] = useState([]);\n  const [checkedItems, setCheckedItems] = useState({});\n  const [ingredients, setIngredients] = useState([]);\n  const [measurements, setMeasurements] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredIngredients, setFilteredIngredients] = useState([]);\n  const [selectedIngredient, setSelectedIngredient] = useState('');\n  const [selectedMeasurement, setSelectedMeasurement] = useState('');\n  const [amount, setAmount] = useState('');\n  const [groceryList, setGroceryList] = useState([]);\n  const [userId, setUserId] = useState('');\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const _user = jwt_decode(token);\n      setName(_user.name);\n      setUser(_user);\n      setUserId(_user.email);\n      if (!_user) {\n        localStorage.removeItem('token');\n        navigate.replace('/login');\n      }\n    }\n  }, [navigate]);\n  useEffect(() => {\n    fetch('http://localhost:1337/api/search_recipe').then(response => response.json()).then(data => {\n      const expandedCategories = {};\n      const checkedItems = {};\n      Object.keys(data).forEach(category => {\n        //expandedCategories[category] = false;\n        checkedItems[category] = {};\n      });\n      setCategories(data);\n      // for (const categoryKey in data) {\n      //     if (Object.hasOwnProperty.call(data, categoryKey)) {\n      //       const categoryEntries = data[categoryKey];\n      //       console.log(`Category: ${categoryKey}`);\n\n      //       for (const entry of categoryEntries) {\n      //         const [id, name] = entry;\n      //         console.log(`  Entry ID: ${id}, Name: ${name}`);\n      //       }\n      //     }\n      //   }\n      //setExpandedCategories(expandedCategories);\n      setCheckedItems(checkedItems);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  useEffect(() => {\n    if (user) {\n      fetch(`http://localhost:1337/api/groceries`).then(res => res.json()).then(data => {\n        setIngredients(data);\n      }).catch(error => console.error(error));\n    }\n  }, [user]);\n  useEffect(() => {\n    if (user) {\n      fetch(`http://localhost:1337/api/measurements`).then(res => res.json()).then(data => {\n        setMeasurements(data);\n      }).catch(error => console.error(error));\n    }\n  }, [user]);\n  useEffect(() => {\n    if (searchTerm.length >= 3) {\n      const filtered = ingredients.filter(ingred => ingred && ingred.ingredient ? ingred.ingredient.toLowerCase().includes(searchTerm.toLowerCase()) : false);\n      setFilteredIngredients(filtered);\n    } else {\n      setFilteredIngredients([]);\n    }\n  }, [searchTerm, ingredients]);\n  const handleImageChange = event => {\n    const file = event.target.files[0];\n    setSelectedImage(file);\n  };\n  const handleAddToGroceryList = () => {\n    if (selectedIngredient && selectedMeasurement && amount) {\n      const selectedIngredientObject = filteredIngredients.find(item => item.ingredient === selectedIngredient);\n      const selectedMeasurementObject = measurements.find(item => item.measurement === selectedMeasurement);\n      const newItem = {\n        ingredientId: selectedIngredientObject === null || selectedIngredientObject === void 0 ? void 0 : selectedIngredientObject.id,\n        measurementId: selectedMeasurementObject === null || selectedMeasurementObject === void 0 ? void 0 : selectedMeasurementObject.id,\n        amount: amount,\n        ingredientName: selectedIngredient,\n        measurementName: selectedMeasurement\n      };\n      setGroceryList([...groceryList, newItem]);\n      // Clear the input fields after adding to the list\n      setSelectedIngredient('');\n      setSelectedMeasurement('');\n      setAmount('');\n      setSearchTerm('');\n    }\n  };\n  const handleCheckboxChange = (category, id, checked) => {\n    setCheckedItems(prevCheckedItems => {\n      const newCheckedItems = {\n        ...prevCheckedItems,\n        [category]: {\n          ...(prevCheckedItems[category] || {}),\n          [id]: checked\n        }\n      };\n\n      // If the category is kosher_categories, enforce exactly one checkbox\n      if (category === 'kosher_categories') {\n        const kosherCategoryIds = Object.keys(newCheckedItems[category]);\n        const numChecked = kosherCategoryIds.reduce((count, checkboxId) => newCheckedItems[category][checkboxId] ? count + 1 : count, 0);\n\n        // If more than one checkbox is checked, uncheck the current one\n        if (numChecked > 1) {\n          newCheckedItems[category][id] = false;\n        }\n      }\n      return newCheckedItems;\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const kosherCategoryIds = Object.keys(checkedItems['kosher_categories'] || {});\n    const isKosherCategoryValid = kosherCategoryIds.some(checkboxId => checkedItems['kosher_categories'][checkboxId]);\n    if (!isKosherCategoryValid) {\n      setErrorMessage('Please select at least one checkbox in kosher_categories');\n      return;\n    }\n    setErrorMessage('');\n    console.log('Form Data:', {\n      recipeName,\n      selectedImage,\n      cookTime,\n      prepTime,\n      selectedCategory,\n      groceryList,\n      description,\n      recipeServings,\n      recipeYield,\n      recipeInstructions,\n      checkedItems\n    });\n    // setRecipeName('');\n    // setSelectedImage(null);\n    // setCookTime('00:00');\n    // setPrepTime('00:00');\n    // setSelectedCategory('');\n    // setSearchTerm('');\n    // setSelectedMeasurement('');\n    // setAmount('');\n    // setDescription('');\n    // setRecipeServings(1);\n    // setRecipeYield('');\n    // setRecipeInstructions('');\n    // setCheckedItems({});\n    // setGroceryList([]);\n    const formData = new FormData();\n    formData.append('selectedImage', selectedImage);\n    formData.append('recipeName', recipeName);\n    formData.append('cookTime', cookTime);\n    formData.append('prepTime', prepTime);\n    formData.append('selectedCategory', selectedCategory);\n    formData.append('groceryList', JSON.stringify(groceryList)); // Assuming groceryList is an array\n    formData.append('description', description);\n    formData.append('recipeServings', recipeServings);\n    formData.append('recipeYield', recipeYield);\n    formData.append('recipeInstructions', recipeInstructions);\n    formData.append('checkedItems', JSON.stringify(checkedItems));\n    formData.append('name', name);\n    formData.append('userId', userId);\n    try {\n      const response = await fetch('http://localhost:1337/api/addRecipe', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const result = await response.json();\n        console.log(result); // Recipe successfully added\n      } else {\n        console.error(`HTTP Error: ${response.status}`);\n        // Handle error response\n      }\n    } catch (error) {\n      console.error(error);\n      // Handle fetch error (e.g., network error)\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [name && /*#__PURE__*/_jsxDEV(Navbar, {\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: user && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"add-recipe-lable\",\n          children: [\"Recipe Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: recipeName || '',\n            onChange: e => setRecipeName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"add-recipe-lable\",\n          children: [\"Recipe Image:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: handleImageChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"add-recipe-lable\",\n          children: [\"Cook Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: cookTime,\n            onChange: e => setCookTime(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"add-recipe-lable\",\n          children: [\"Prep Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: prepTime,\n            onChange: e => setPrepTime(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"add-recipe-lable\",\n          children: [\"Category:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedCategory,\n            onChange: e => setSelectedCategory(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this), Object.entries(categories).map(_ref => {\n              let [category, entries] = _ref;\n              return entries.map(_ref2 => {\n                let [id, tagName] = _ref2;\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: tagName,\n                  children: tagName\n                }, id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 21\n                }, this);\n              });\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"add-recipe-lable\",\n          children: [\"Ingredients:\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-dropdown\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Search ingredients...\",\n              value: searchTerm,\n              onChange: e => setSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 21\n            }, this), searchTerm.length >= 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown-ingredient\",\n              children: filteredIngredients.map(ingredient => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropdown-item\",\n                onClick: () => {\n                  setSearchTerm(ingredient.ingredient);\n                  setSelectedIngredient(ingredient.ingredient);\n                },\n                children: ingredient.ingredient\n              }, ingredient.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-dropdown\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"select-measurements\",\n              value: selectedMeasurement,\n              onChange: e => setSelectedMeasurement(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Select Measurement\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 23\n              }, this), measurements.map(measurement => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: measurement.measurement,\n                children: measurement.measurement\n              }, measurement.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 25\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Amount\",\n              value: amount,\n              onChange: e => setAmount(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddToGroceryList,\n            children: \"Add to List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"groceries-list\",\n            children: [groceryList.length > 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Ingredients List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 48\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: groceryList.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [item.amount, \" \", item.measurementName, \" of \", item.ingredientName]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"add-recipe-lable\",\n          children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"add-recipe-lable\",\n          children: [\"Recipe Servings:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: recipeServings,\n            onChange: e => setRecipeServings(e.target.value),\n            min: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"add-recipe-lable\",\n          children: [\"Recipe Yield:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: recipeYield,\n            onChange: e => setRecipeYield(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"add-recipe-lable\",\n          children: [\"Recipe Instructions:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: recipeInstructions,\n            onChange: e => setRecipeInstructions(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 17\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 34\n        }, this), Object.entries(categories).map(_ref3 => {\n          let [category, entries] = _ref3;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkbox-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"add-recipe-lable\",\n              children: category + \":\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 23\n            }, this), entries.map(_ref4 => {\n              var _checkedItems$categor;\n              let [id, tagName] = _ref4;\n              return /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"checkbox-label\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: ((_checkedItems$categor = checkedItems[category]) === null || _checkedItems$categor === void 0 ? void 0 : _checkedItems$categor[id]) || false,\n                  onChange: e => handleCheckboxChange(category, id, e.target.checked)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 27\n                }, this), tagName]\n              }, id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 25\n              }, this);\n            })]\n          }, category, true, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 21\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 9\n  }, this);\n};\n_s(AddRecipe, \"+4rHI6uh6m279dLbikPp/8IMwZ0=\", false, function () {\n  return [useNavigate];\n});\n_c = AddRecipe;\nexport default AddRecipe;\nvar _c;\n$RefreshReg$(_c, \"AddRecipe\");","map":{"version":3,"names":["Navbar","React","useState","useEffect","jwt_decode","useNavigate","jsxDEV","_jsxDEV","AddRecipe","_s","navigate","name","setName","user","setUser","recipeName","setRecipeName","selectedImage","setSelectedImage","cookTime","setCookTime","prepTime","setPrepTime","selectedCategory","setSelectedCategory","description","setDescription","recipeServings","setRecipeServings","recipeYield","setRecipeYield","recipeInstructions","setRecipeInstructions","errorMessage","setErrorMessage","categories","setCategories","checkedItems","setCheckedItems","ingredients","setIngredients","measurements","setMeasurements","searchTerm","setSearchTerm","filteredIngredients","setFilteredIngredients","selectedIngredient","setSelectedIngredient","selectedMeasurement","setSelectedMeasurement","amount","setAmount","groceryList","setGroceryList","userId","setUserId","token","localStorage","getItem","_user","email","removeItem","replace","fetch","then","response","json","data","expandedCategories","Object","keys","forEach","category","catch","error","console","res","length","filtered","filter","ingred","ingredient","toLowerCase","includes","handleImageChange","event","file","target","files","handleAddToGroceryList","selectedIngredientObject","find","item","selectedMeasurementObject","measurement","newItem","ingredientId","id","measurementId","ingredientName","measurementName","handleCheckboxChange","checked","prevCheckedItems","newCheckedItems","kosherCategoryIds","numChecked","reduce","count","checkboxId","handleSubmit","e","preventDefault","isKosherCategoryValid","some","log","formData","FormData","append","JSON","stringify","method","body","ok","result","status","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","type","value","onChange","required","accept","disabled","entries","map","_ref","_ref2","tagName","placeholder","onClick","index","min","_ref3","_ref4","_checkedItems$categor","_c","$RefreshReg$"],"sources":["C:/Users/oria3/Desktop/כללי/לימודים/שנה ג/פרוייקט גמר/code/client/src/pages/AddRecipe.js"],"sourcesContent":["import Navbar from '../components/Navbar';\nimport './App.css';\nimport React, { useState, useEffect} from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from 'react-router-dom'\n\nconst AddRecipe = () => {\n    const navigate = useNavigate()\n    const [name, setName] = useState(null)\n    const [user, setUser] = useState(null)\n    const [recipeName, setRecipeName] = useState('');\n    const [selectedImage, setSelectedImage] = useState(null);\n    const [cookTime, setCookTime] = useState('00:00');\n    const [prepTime, setPrepTime] = useState('00:00');\n    const [selectedCategory, setSelectedCategory] = useState('');\n    const [description, setDescription] = useState('');\n    const [recipeServings, setRecipeServings] = useState(1);\n    const [recipeYield, setRecipeYield] = useState('');\n    const [recipeInstructions, setRecipeInstructions] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const [categories, setCategories] = useState([]);\n    const [checkedItems, setCheckedItems] = useState({});\n    const [ingredients,setIngredients] = useState([])\n    const [measurements,setMeasurements] = useState([])\n    const [searchTerm, setSearchTerm] = useState('');\n    const [filteredIngredients, setFilteredIngredients] = useState([]);\n    const [selectedIngredient, setSelectedIngredient] = useState('');\n    const [selectedMeasurement, setSelectedMeasurement] = useState('');\n    const [amount, setAmount] = useState('');\n    const [groceryList, setGroceryList] = useState([]);\n    const [userId,setUserId] = useState('')\n    \n    useEffect(() => {\n        const token = localStorage.getItem('token')\n        if (token) {\n            const _user = jwt_decode(token)\n            setName(_user.name)\n            setUser(_user)\n            setUserId(_user.email)\n            if (!_user) {\n                localStorage.removeItem('token')\n                navigate.replace('/login')\n            }\n        }\n    }, [navigate])\n\n\n    useEffect(() => {\n        fetch('http://localhost:1337/api/search_recipe')\n            .then(response => response.json())\n            .then(data => {\n                const expandedCategories = {};\n                const checkedItems = {};\n                Object.keys(data).forEach(category => {\n                    //expandedCategories[category] = false;\n                    checkedItems[category] = {};\n                });\n                setCategories(data);\n                // for (const categoryKey in data) {\n                //     if (Object.hasOwnProperty.call(data, categoryKey)) {\n                //       const categoryEntries = data[categoryKey];\n                //       console.log(`Category: ${categoryKey}`);\n                      \n                //       for (const entry of categoryEntries) {\n                //         const [id, name] = entry;\n                //         console.log(`  Entry ID: ${id}, Name: ${name}`);\n                //       }\n                //     }\n                //   }\n                //setExpandedCategories(expandedCategories);\n                setCheckedItems(checkedItems);\n            })\n            .catch(error => {\n                console.error(error);\n            });\n    }, []);\n\n    useEffect(() => {\n        if(user){\n            fetch(`http://localhost:1337/api/groceries`)\n                .then(res => res.json())\n                .then(data => {\n                    setIngredients(data)\n                })\n                .catch(error => console.error(error))\n        }\n    }, [user]);\n    \n    useEffect(() => {\n        if(user){\n            fetch(`http://localhost:1337/api/measurements`)\n                .then(res => res.json())\n                .then(data => {\n                  setMeasurements(data)\n                })\n                .catch(error => console.error(error))\n        }\n    }, [user]);\n\n    useEffect(() => {\n        if (searchTerm.length >= 3) {\n          const filtered = ingredients.filter((ingred) =>\n            ingred && ingred.ingredient\n              ? ingred.ingredient.toLowerCase().includes(searchTerm.toLowerCase())\n              : false\n          );\n          setFilteredIngredients(filtered);\n        } else {\n          setFilteredIngredients([]);\n        }\n    }, [searchTerm, ingredients]);\n    \n    const handleImageChange = (event) => {\n      const file = event.target.files[0];\n      setSelectedImage(file);\n    };\n\n    const handleAddToGroceryList = () => {\n    if (selectedIngredient && selectedMeasurement && amount) {\n        const selectedIngredientObject = filteredIngredients.find(item => item.ingredient === selectedIngredient);\n        const selectedMeasurementObject = measurements.find(item => item.measurement === selectedMeasurement);\n        const newItem = {\n          ingredientId: selectedIngredientObject?.id,\n          measurementId: selectedMeasurementObject?.id,\n          amount: amount,\n          ingredientName: selectedIngredient,\n          measurementName: selectedMeasurement\n        };\n        setGroceryList([...groceryList, newItem]);\n        // Clear the input fields after adding to the list\n        setSelectedIngredient('');\n        setSelectedMeasurement('');\n        setAmount('');\n        setSearchTerm('');\n    }\n    };\n\nconst handleCheckboxChange = (category, id, checked) => {\n    setCheckedItems((prevCheckedItems) => {\n        const newCheckedItems = {\n        ...prevCheckedItems,\n        [category]: {\n            ...(prevCheckedItems[category] || {}),\n            [id]: checked,\n        },\n        };\n    \n        // If the category is kosher_categories, enforce exactly one checkbox\n        if (category === 'kosher_categories') {\n        const kosherCategoryIds = Object.keys(newCheckedItems[category]);\n        const numChecked = kosherCategoryIds.reduce(\n            (count, checkboxId) => (newCheckedItems[category][checkboxId] ? count + 1 : count),\n            0\n        );\n    \n        // If more than one checkbox is checked, uncheck the current one\n        if (numChecked > 1) {\n            newCheckedItems[category][id] = false;\n        }\n        }\n    \n        return newCheckedItems;\n    });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const kosherCategoryIds = Object.keys(checkedItems['kosher_categories'] || {});\n        const isKosherCategoryValid = kosherCategoryIds.some(\n            (checkboxId) => checkedItems['kosher_categories'][checkboxId]\n        );\n\n        if (!isKosherCategoryValid) {\n            setErrorMessage('Please select at least one checkbox in kosher_categories');\n            return;\n        }\n        setErrorMessage('');\n        console.log('Form Data:', {\n            recipeName,\n            selectedImage,\n            cookTime,\n            prepTime,\n            selectedCategory,\n            groceryList,\n            description,\n            recipeServings,\n            recipeYield,\n            recipeInstructions,\n            checkedItems,\n        });\n        // setRecipeName('');\n        // setSelectedImage(null);\n        // setCookTime('00:00');\n        // setPrepTime('00:00');\n        // setSelectedCategory('');\n        // setSearchTerm('');\n        // setSelectedMeasurement('');\n        // setAmount('');\n        // setDescription('');\n        // setRecipeServings(1);\n        // setRecipeYield('');\n        // setRecipeInstructions('');\n        // setCheckedItems({});\n        // setGroceryList([]);\n        const formData = new FormData();\n        formData.append('selectedImage', selectedImage);\n        formData.append('recipeName', recipeName);\n        formData.append('cookTime', cookTime);\n        formData.append('prepTime', prepTime);\n        formData.append('selectedCategory', selectedCategory);\n        formData.append('groceryList', JSON.stringify(groceryList)); // Assuming groceryList is an array\n        formData.append('description', description);\n        formData.append('recipeServings', recipeServings);\n        formData.append('recipeYield', recipeYield);\n        formData.append('recipeInstructions', recipeInstructions);\n        formData.append('checkedItems', JSON.stringify(checkedItems));\n        formData.append('name', name);\n        formData.append('userId', userId);\n\n            try {\n              const response = await fetch('http://localhost:1337/api/addRecipe', {\n                method: 'POST',\n                body: formData,\n              });\n            if (response.ok) {\n              const result = await response.json();\n              console.log(result); // Recipe successfully added\n            } else {\n              console.error(`HTTP Error: ${response.status}`);\n              // Handle error response\n            }\n          } catch (error) {\n            console.error(error);\n            // Handle fetch error (e.g., network error)\n          }\n        };\n\n    return (\n        <div>\n            {name && <Navbar name={name} />}\n            <div>\n            {user && (\n            <form onSubmit={handleSubmit}>\n                <label className='add-recipe-lable'>\n                Recipe Name:\n                <input\n                    type=\"text\"\n                    value={recipeName || ''}\n                    onChange={(e) => setRecipeName(e.target.value)}\n                    required\n                />\n                </label>\n\n                <label className='add-recipe-lable'>\n                    Recipe Image:\n                    <input type='file' accept='image/*' onChange={handleImageChange} />\n                </label>\n\n                <label className='add-recipe-lable'>\n                Cook Time:\n                <input\n                    type=\"time\"\n                    value={cookTime}\n                    onChange={(e) => setCookTime(e.target.value)}\n                />\n                </label>\n\n                <label className='add-recipe-lable'>\n                Prep Time:\n                <input\n                    type=\"time\"\n                    value={prepTime}\n                    onChange={(e) => setPrepTime(e.target.value)}\n                    required\n                />\n                </label>\n\n                <label className='add-recipe-lable'>\n                Category:\n                <select\n                value={selectedCategory}\n                onChange={(e) => setSelectedCategory(e.target.value)}\n                required\n                >\n                <option value=\"\" disabled>\n                    Select Category\n                </option>\n                {Object.entries(categories).map(([category, entries]) => (\n                    entries.map(([id, tagName]) => (\n                    <option key={id} value={tagName}>\n                        {tagName}\n                    </option>\n                    ))\n                  ))}\n                </select>\n                </label>\n\n                <label className='add-recipe-lable'>\n                    Ingredients:\n                    <div className=\"custom-dropdown\">\n                    <input\n                    type=\"text\"\n                    placeholder=\"Search ingredients...\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    />\n                    {searchTerm.length >= 3 && (\n                    <div className=\"dropdown-ingredient\">\n                    {filteredIngredients.map((ingredient) => (\n                        <div\n                        key={ingredient.id}\n                        className=\"dropdown-item\"\n                        onClick={() => {\n                        setSearchTerm(ingredient.ingredient);\n                        setSelectedIngredient(ingredient.ingredient);\n                        }}\n                    >\n                    {ingredient.ingredient}\n                    </div>\n                    ))}\n                </div>\n                )}\n                    </div>\n                    <div className=\"custom-dropdown\">\n                    <select\n                    className='select-measurements'\n                    value={selectedMeasurement}\n                    onChange={(e) => setSelectedMeasurement(e.target.value)}\n                    >\n                      <option value=\"\" disabled>\n                        Select Measurement\n                      </option>\n                      {measurements.map((measurement) => (\n                        <option key={measurement.id} value={measurement.measurement}>\n                          {measurement.measurement}\n                        </option>\n                      ))}\n                    </select>\n                    </div>\n                    <div>\n                    <input\n                    type=\"number\"\n                    placeholder=\"Amount\"\n                    value={amount}\n                    onChange={(e) => setAmount(e.target.value)}\n                    />\n                    </div>\n                    <button onClick={handleAddToGroceryList}>Add to List</button>\n                    <div className='groceries-list'>\n                    {groceryList.length > 0 && <h2>Ingredients List</h2>}\n                    <ul>\n                      {groceryList.map((item, index) => (\n                        <li key={index}>\n                          {item.amount} {item.measurementName} of {item.ingredientName}\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                  \n                </label>\n\n                <label className='add-recipe-lable'>\n                Description:\n                <textarea\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                />\n                </label>\n\n                <label className='add-recipe-lable'>\n                Recipe Servings:\n                <input\n                    type=\"number\"\n                    value={recipeServings}\n                    onChange={(e) => setRecipeServings(e.target.value)}\n                    min=\"0\"\n                />\n                </label>\n\n                <label className='add-recipe-lable'>\n                Recipe Yield:\n                <input\n                    type=\"text\"\n                    value={recipeYield}\n                    onChange={(e) => setRecipeYield(e.target.value)}\n                />\n                </label>\n\n                <label className='add-recipe-lable'>\n                Recipe Instructions:\n                <textarea\n                    value={recipeInstructions}\n                    onChange={(e) => setRecipeInstructions(e.target.value)}\n                    required\n                />\n                </label>\n                {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n\n                {Object.entries(categories).map(([category, entries]) => (\n                    <div key={category} className=\"checkbox-container\">\n                      <label className=\"add-recipe-lable\">{category+\":\"}</label>\n                      {entries.map(([id, tagName]) => (\n                        <label key={id} className=\"checkbox-label\">\n                          <input\n                            type=\"checkbox\"\n                            checked={checkedItems[category]?.[id] || false}\n                            onChange={(e) => handleCheckboxChange(category, id, e.target.checked)}\n                        />\n                        {tagName}\n                        </label>\n                      ))}\n                    </div>\n                  ))}\n\n                <button type=\"submit\">Submit</button>\n            </form>\n            )}\n          </div>\n        </div>\n    )\n}\n\nexport default AddRecipe\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}