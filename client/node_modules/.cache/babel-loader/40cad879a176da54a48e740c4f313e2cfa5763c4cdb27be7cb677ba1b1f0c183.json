{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oria3\\\\Desktop\\\\\\u05DB\\u05DC\\u05DC\\u05D9\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8 \\u05D2\\u05DE\\u05E8\\\\code\\\\client\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport { Link } from 'react-router-dom';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const ADMIN_EMAIL = \"admin@gmail.com\";\n  function redirectToRegister() {\n    window.location.href = \"/register\";\n  }\n  async function loginUser(event) {\n    event.preventDefault();\n    const response = await fetch('http://localhost:1337/api/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const data = await response.json();\n    if (data.user) {\n      localStorage.setItem('token', data.user);\n      alert('Login successful ');\n      const user = jwt_decode(data.user);\n      if (user.email === ADMIN_EMAIL) {\n        window.location.href = '/admin';\n      } else {\n        window.location.href = '/home';\n      }\n    } else {\n      alert('Please check your username and password');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"body\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"form-login\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/logo.png\",\n        alt: \"Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: loginUser,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control input\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          type: \"email\",\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control input\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          type: \"password\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"btn-login\",\n          class: \"btn btn-primary\",\n          type: \"submit\",\n          value: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"btn-register\",\n          class: \"btn btn-primary\",\n          type: \"button\",\n          value: \"New Account\",\n          onClick: redirectToRegister\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"TSZhDBNy8CmbxXgprY/vvMmTG1Q=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["useState","jwt_decode","Link","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","ADMIN_EMAIL","redirectToRegister","window","location","href","loginUser","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","user","localStorage","setItem","alert","class","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","value","onChange","e","target","type","placeholder","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/oria3/Desktop/כללי/שנה ג/פרוייקט גמר/code/client/src/pages/Login.js"],"sourcesContent":["import { useState } from 'react'\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { Link } from 'react-router-dom';\r\nimport './Login.css';\r\n\r\nfunction LoginPage() {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const ADMIN_EMAIL = \"admin@gmail.com\";\r\n\r\n  function redirectToRegister() {\r\n    window.location.href = \"/register\";\r\n  }\r\n\r\n  async function loginUser(event) {\r\n    event.preventDefault()\r\n\r\n    const response = await fetch('http://localhost:1337/api/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        email,\r\n        password,\r\n      }),\r\n    })\r\n\r\n    const data = await response.json()\r\n\r\n    if (data.user) {\r\n      localStorage.setItem('token', data.user)\r\n      alert('Login successful ')\r\n      const user = jwt_decode(data.user)\r\n      if (user.email === ADMIN_EMAIL) {\r\n        window.location.href = '/admin'\r\n      }\r\n      else {\r\n        window.location.href = '/home'\r\n\r\n      }\r\n\r\n    }\r\n    else {\r\n      alert('Please check your username and password')\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div class=\"body\">\r\n      <div class=\"form-login\">\r\n      <img src=\"/images/logo.png\" alt=\"Logo\" />\r\n        <form onSubmit={loginUser}>\r\n          <input\r\n            className=\"form-control input\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            type=\"email\"\r\n            placeholder='Email'\r\n          />\r\n          <br />\r\n          <input\r\n            className=\"form-control input\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            type=\"password\"\r\n            placeholder='Password'\r\n          />        \r\n          <input id=\"btn-login\" class=\"btn btn-primary\" type=\"submit\" value=\"Login\" />\r\n          <input id=\"btn-register\" class=\"btn btn-primary\" type=\"button\" value=\"New Account\" onClick={redirectToRegister} />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}