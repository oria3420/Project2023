{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oria3\\\\Desktop\\\\\\u05DB\\u05DC\\u05DC\\u05D9\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8 \\u05D2\\u05DE\\u05E8\\\\code\\\\client\\\\src\\\\pages\\\\AddRecipe.js\",\n  _s = $RefreshSig$();\nimport Navbar from '../components/Navbar';\nimport './App.css';\nimport './AddRecipe.css';\nimport React, { useState, useEffect } from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddRecipe = () => {\n  _s();\n  const navigate = useNavigate();\n  const [name, setName] = useState(null);\n  const [user, setUser] = useState(null);\n  const [recipeName, setRecipeName] = useState('');\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [cookTime, setCookTime] = useState('00:00');\n  const [prepTime, setPrepTime] = useState('00:00');\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [description, setDescription] = useState('');\n  const [recipeServings, setRecipeServings] = useState(1);\n  const [recipeYield, setRecipeYield] = useState('');\n  const [instructions, setInstructions] = useState(['']);\n  ;\n  const [recipeIngredients, setRecipeIngredients] = useState(['']);\n  ;\n  const [errorMessage, setErrorMessage] = useState('');\n  const [categories, setCategories] = useState([]);\n  const [checkedItems, setCheckedItems] = useState({});\n  const [ingredients, setIngredients] = useState([]);\n  const [measurements, setMeasurements] = useState([]);\n  const [searchTerms, setSearchTerms] = useState(['']);\n  const [filteredIngredients, setFilteredIngredients] = useState([]);\n  const [selectedIngredient, setSelectedIngredient] = useState('');\n  const [selectedMeasurement, setSelectedMeasurement] = useState('');\n  const [amount, setAmount] = useState('');\n  const [ingredientsList, setIngredientsList] = useState([]);\n  const [userId, setUserId] = useState('');\n  const addIngredient = () => {\n    setRecipeIngredients([...recipeIngredients, '']);\n    setSearchTerms([...searchTerms, '']);\n  };\n  const removeIngredient = index => {\n    const updatedIngredients = [...recipeIngredients];\n    updatedIngredients.splice(index, 1);\n    setRecipeIngredients(updatedIngredients);\n    const updatedSearchTerms = [...searchTerms];\n    updatedSearchTerms.splice(index, 1);\n    setSearchTerms(updatedSearchTerms);\n  };\n  const handleIngredientChange = (index, value) => {\n    const updatedSearchTerms = [...searchTerms];\n    updatedSearchTerms[index] = value;\n    setSearchTerms(updatedSearchTerms);\n    const updatedIngredients = [...recipeIngredients];\n    updatedIngredients[index] = value;\n    setRecipeIngredients(updatedIngredients);\n  };\n  useEffect(() => {\n    if (searchTerms[searchTerms.length - 1].length >= 3) {\n      const filtered = ingredients.filter(ingred => ingred && ingred.ingredient ? ingred.ingredient.toLowerCase().includes(searchTerms[searchTerms.length - 1].toLowerCase()) : false);\n      setFilteredIngredients(filtered);\n    } else {\n      setFilteredIngredients([]);\n    }\n  }, [searchTerms, ingredients]);\n  const addInstruction = () => {\n    setInstructions([...instructions, '']);\n  };\n  const removeInstruction = index => {\n    const updatedInstructions = [...instructions];\n    updatedInstructions.splice(index, 1);\n    setInstructions(updatedInstructions);\n  };\n  const handleInstructionChange = (index, value) => {\n    const updatedInstructions = [...instructions];\n    updatedInstructions[index] = value;\n    setInstructions(updatedInstructions);\n  };\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const _user = jwt_decode(token);\n      setName(_user.name);\n      setUser(_user);\n      setUserId(_user.email);\n      if (!_user) {\n        localStorage.removeItem('token');\n        navigate.replace('/login');\n      }\n    }\n  }, [navigate]);\n  useEffect(() => {\n    fetch('http://localhost:1337/api/search_recipe').then(response => response.json()).then(data => {\n      const expandedCategories = {};\n      const checkedItems = {};\n      Object.keys(data).forEach(category => {\n        //expandedCategories[category] = false;\n        checkedItems[category] = {};\n      });\n      setCategories(data);\n      // for (const categoryKey in data) {\n      //     if (Object.hasOwnProperty.call(data, categoryKey)) {\n      //       const categoryEntries = data[categoryKey];\n      //       console.log(`Category: ${categoryKey}`);\n\n      //       for (const entry of categoryEntries) {\n      //         const [id, name] = entry;\n      //         console.log(`  Entry ID: ${id}, Name: ${name}`);\n      //       }\n      //     }\n      //   }\n      //setExpandedCategories(expandedCategories);\n      setCheckedItems(checkedItems);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  useEffect(() => {\n    if (user) {\n      fetch(`http://localhost:1337/api/groceries`).then(res => res.json()).then(data => {\n        setIngredients(data);\n      }).catch(error => console.error(error));\n    }\n  }, [user]);\n  useEffect(() => {\n    if (user) {\n      fetch(`http://localhost:1337/api/measurements`).then(res => res.json()).then(data => {\n        setMeasurements(data);\n      }).catch(error => console.error(error));\n    }\n  }, [user]);\n\n  // useEffect(() => {\n  //     if (searchTerm.length >= 3) {\n  //         const filtered = ingredients.filter((ingred) =>\n  //             ingred && ingred.ingredient\n  //                 ? ingred.ingredient.toLowerCase().includes(searchTerm.toLowerCase())\n  //                 : false\n  //         );\n  //         setFilteredIngredients(filtered);\n  //     } else {\n  //         setFilteredIngredients([]);\n  //     }\n  // }, [searchTerm, ingredients]);\n\n  const handleAddToGroceryList = () => {\n    if (selectedIngredient && selectedMeasurement && amount) {\n      const selectedIngredientObject = filteredIngredients.find(item => item.ingredient === selectedIngredient);\n      const selectedMeasurementObject = measurements.find(item => item.measurement === selectedMeasurement);\n      const newItem = {\n        ingredientId: selectedIngredientObject === null || selectedIngredientObject === void 0 ? void 0 : selectedIngredientObject.id,\n        measurementId: selectedMeasurementObject === null || selectedMeasurementObject === void 0 ? void 0 : selectedMeasurementObject.id,\n        amount: amount,\n        ingredientName: selectedIngredient,\n        measurementName: selectedMeasurement\n      };\n      setIngredientsList([...ingredientsList, newItem]);\n      // Clear the input fields after adding to the list\n      setSelectedIngredient('');\n      setSelectedMeasurement('');\n      setAmount('');\n      setSearchTerm(['']);\n    }\n  };\n  const handleImageChange = event => {\n    const file = event.target.files[0];\n    setSelectedImage(file);\n  };\n  const handleCheckboxChange = (category, id, checked) => {\n    setCheckedItems(prevCheckedItems => {\n      const newCheckedItems = {\n        ...prevCheckedItems,\n        [category]: {\n          ...(prevCheckedItems[category] || {}),\n          [id]: checked\n        }\n      };\n\n      // If the category is kosher_categories, enforce exactly one checkbox\n      if (category === 'kosher_categories') {\n        const kosherCategoryIds = Object.keys(newCheckedItems[category]);\n        const numChecked = kosherCategoryIds.reduce((count, checkboxId) => newCheckedItems[category][checkboxId] ? count + 1 : count, 0);\n\n        // If more than one checkbox is checked, uncheck the current one\n        if (numChecked > 1) {\n          newCheckedItems[category][id] = false;\n        }\n      }\n      return newCheckedItems;\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const kosherCategoryIds = Object.keys(checkedItems['kosher_categories'] || {});\n    const isKosherCategoryValid = kosherCategoryIds.some(checkboxId => checkedItems['kosher_categories'][checkboxId]);\n    if (!isKosherCategoryValid) {\n      setErrorMessage('Please select at least one checkbox in kosher_categories');\n      return;\n    }\n    setErrorMessage('');\n    console.log('Form Data:', {\n      recipeName,\n      selectedImage,\n      cookTime,\n      prepTime,\n      selectedCategory,\n      groceryList: ingredientsList,\n      description,\n      recipeServings,\n      recipeYield,\n      recipeInstructions: instructions,\n      checkedItems\n    });\n    // setRecipeName('');\n    // setSelectedImage(null);\n    // setCookTime('00:00');\n    // setPrepTime('00:00');\n    // setSelectedCategory('');\n    // setSearchTerm('');\n    // setSelectedMeasurement('');\n    // setAmount('');\n    // setDescription('');\n    // setRecipeServings(1);\n    // setRecipeYield('');\n    // setRecipeInstructions('');\n    // setCheckedItems({});\n    // setGroceryList([]);\n    const formData = new FormData();\n    formData.append('selectedImage', selectedImage);\n    formData.append('recipeName', recipeName);\n    formData.append('cookTime', cookTime);\n    formData.append('prepTime', prepTime);\n    formData.append('selectedCategory', selectedCategory);\n    formData.append('groceryList', JSON.stringify(ingredientsList)); // Assuming groceryList is an array\n    formData.append('description', description);\n    formData.append('recipeServings', recipeServings);\n    formData.append('recipeYield', recipeYield);\n    formData.append('recipeInstructions', instructions);\n    formData.append('checkedItems', JSON.stringify(checkedItems));\n    formData.append('name', name);\n    formData.append('userId', userId);\n    try {\n      const response = await fetch('http://localhost:1337/api/addRecipe', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const result = await response.json();\n        console.log(result); // Recipe successfully added\n      } else {\n        console.error(`HTTP Error: ${response.status}`);\n        // Handle error response\n      }\n    } catch (error) {\n      console.error(error);\n      // Handle fetch error (e.g., network error)\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [name && /*#__PURE__*/_jsxDEV(Navbar, {\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: user && /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"add-recipe-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-details two-sections-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-left image-details-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"add-image-head\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"black-title\",\n                children: \"Add Images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-container\",\n              children: selectedImage ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"recipe-image\",\n                  src: URL.createObjectURL(selectedImage),\n                  alt: \"Selected\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"custom-file-upload\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-images\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"input-file\",\n                    type: \"file\",\n                    accept: \"image/*\",\n                    onChange: handleImageChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"add-file-title\",\n                  children: \"Upload images\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-right image-details-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"description-head\",\n              children: \"Add Your Recipe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"description-bottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"black-title\",\n                children: \"Recipe Name & Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"description-fields\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"desc-field\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"input-title\",\n                    children: \"Recipe Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"input-field\",\n                    type: \"text\",\n                    value: recipeName || '',\n                    onChange: e => setRecipeName(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"times-yields\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"desc-field\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"input-title\",\n                      children: \"Prep Time\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 350,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"input-field time-field\",\n                      type: \"time\",\n                      value: prepTime,\n                      onChange: e => setPrepTime(e.target.value),\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 351,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 349,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"desc-field\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"input-title\",\n                      children: \"Cook Time\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 361,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"input-field time-field\",\n                      type: \"time\",\n                      value: cookTime,\n                      onChange: e => setCookTime(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 362,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 360,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"desc-field yields-field\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"input-title\",\n                      children: \"Yields /Servings\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 371,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"input-field\",\n                      type: \"text\",\n                      value: recipeYield,\n                      onChange: e => setRecipeYield(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 372,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 370,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"desc-field\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"input-title\",\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    className: \"input-field desc-textbox\",\n                    value: description,\n                    onChange: e => setDescription(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 383,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"desc-field\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"input-title\",\n                    children: \"Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 391,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    className: \"input-field category-desc\",\n                    value: selectedCategory,\n                    onChange: e => setSelectedCategory(e.target.value),\n                    required: true,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      disabled: true,\n                      children: \"Select Category\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 398,\n                      columnNumber: 49\n                    }, this), Object.entries(categories).map(_ref => {\n                      let [category, entries] = _ref;\n                      return entries.map(_ref2 => {\n                        let [id, tagName] = _ref2;\n                        return /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: tagName,\n                          children: tagName\n                        }, id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 403,\n                          columnNumber: 57\n                        }, this);\n                      });\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 392,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ingredients-steps two-sections-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-left ingredients-steps-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"black-title\",\n              children: \"Ingredients\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"steps-container\",\n              children: [recipeIngredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"instruction-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"custom-dropdown\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    placeholder: \"Search ingredients...\",\n                    value: searchTerms[index],\n                    onChange: e => handleIngredientChange(index, e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 428,\n                    columnNumber: 49\n                  }, this), searchTerms[index].length >= 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dropdown-ingredient\",\n                    children: filteredIngredients.map(filteredIngredient => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"dropdown-item\",\n                      onClick: () => {\n                        handleIngredientChange(index, filteredIngredient.ingredient);\n                      },\n                      children: filteredIngredient.ingredient\n                    }, filteredIngredient.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 437,\n                      columnNumber: 61\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 435,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  onClick: () => removeIngredient(index),\n                  className: \"bi bi-x-circle remove-icon\",\n                  title: \"Remove Ingredient\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 41\n              }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: addIngredient,\n                className: \"add-btn\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-plus-circle add-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 459,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Add another ingredient\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-right ingredients-steps-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"black-title\",\n              children: \"Instructions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"steps-container\",\n              children: [instructions.map((instruction, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"instruction-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"input-field step-input\",\n                  placeholder: `Instruction ${index + 1}`,\n                  value: instruction,\n                  onChange: e => handleInstructionChange(index, e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  onClick: () => removeInstruction(index),\n                  className: \"bi bi-x-circle remove-icon\",\n                  title: \"Remove Instruction\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 41\n              }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: addInstruction,\n                className: \"add-btn\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-plus-circle add-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Add another instruction\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tags-section\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"black-title\",\n            children: \"Tags\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submit-section\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"publish-btn\",\n            type: \"submit\",\n            children: \"Publish\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 299,\n    columnNumber: 9\n  }, this);\n};\n_s(AddRecipe, \"LO6JxqtWrZ5LDrNxFMenuoXSRR4=\", false, function () {\n  return [useNavigate];\n});\n_c = AddRecipe;\nexport default AddRecipe;\n\n// <input\n// className='input-field step-input'\n// placeholder={`Ingredient ${index + 1}`}\n// value={ingredient}\n// onChange={(e) => handleIngredientChange(index, e.target.value)}\n// required\n// />\nvar _c;\n$RefreshReg$(_c, \"AddRecipe\");","map":{"version":3,"names":["Navbar","React","useState","useEffect","jwt_decode","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","AddRecipe","_s","navigate","name","setName","user","setUser","recipeName","setRecipeName","selectedImage","setSelectedImage","cookTime","setCookTime","prepTime","setPrepTime","selectedCategory","setSelectedCategory","description","setDescription","recipeServings","setRecipeServings","recipeYield","setRecipeYield","instructions","setInstructions","recipeIngredients","setRecipeIngredients","errorMessage","setErrorMessage","categories","setCategories","checkedItems","setCheckedItems","ingredients","setIngredients","measurements","setMeasurements","searchTerms","setSearchTerms","filteredIngredients","setFilteredIngredients","selectedIngredient","setSelectedIngredient","selectedMeasurement","setSelectedMeasurement","amount","setAmount","ingredientsList","setIngredientsList","userId","setUserId","addIngredient","removeIngredient","index","updatedIngredients","splice","updatedSearchTerms","handleIngredientChange","value","length","filtered","filter","ingred","ingredient","toLowerCase","includes","addInstruction","removeInstruction","updatedInstructions","handleInstructionChange","token","localStorage","getItem","_user","email","removeItem","replace","fetch","then","response","json","data","expandedCategories","Object","keys","forEach","category","catch","error","console","res","handleAddToGroceryList","selectedIngredientObject","find","item","selectedMeasurementObject","measurement","newItem","ingredientId","id","measurementId","ingredientName","measurementName","setSearchTerm","handleImageChange","event","file","target","files","handleCheckboxChange","checked","prevCheckedItems","newCheckedItems","kosherCategoryIds","numChecked","reduce","count","checkboxId","handleSubmit","e","preventDefault","isKosherCategoryValid","some","log","groceryList","recipeInstructions","formData","FormData","append","JSON","stringify","method","body","ok","result","status","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","src","URL","createObjectURL","alt","type","accept","onChange","required","disabled","entries","map","_ref","_ref2","tagName","placeholder","filteredIngredient","onClick","title","instruction","_c","$RefreshReg$"],"sources":["C:/Users/oria3/Desktop/כללי/לימודים/שנה ג/פרוייקט גמר/code/client/src/pages/AddRecipe.js"],"sourcesContent":["import Navbar from '../components/Navbar';\nimport './App.css';\nimport './AddRecipe.css'\nimport React, { useState, useEffect } from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from 'react-router-dom'\n\nconst AddRecipe = () => {\n    const navigate = useNavigate()\n    const [name, setName] = useState(null)\n    const [user, setUser] = useState(null)\n    const [recipeName, setRecipeName] = useState('');\n    const [selectedImage, setSelectedImage] = useState(null);\n    const [cookTime, setCookTime] = useState('00:00');\n    const [prepTime, setPrepTime] = useState('00:00');\n    const [selectedCategory, setSelectedCategory] = useState('');\n    const [description, setDescription] = useState('');\n    const [recipeServings, setRecipeServings] = useState(1);\n    const [recipeYield, setRecipeYield] = useState('');\n\n    const [instructions, setInstructions] = useState(['']);;\n    const [recipeIngredients, setRecipeIngredients] = useState(['']);;\n    const [errorMessage, setErrorMessage] = useState('');\n    const [categories, setCategories] = useState([]);\n    const [checkedItems, setCheckedItems] = useState({});\n    const [ingredients, setIngredients] = useState([])\n    const [measurements, setMeasurements] = useState([])\n    const [searchTerms, setSearchTerms] = useState(['']);\n    const [filteredIngredients, setFilteredIngredients] = useState([]);\n    const [selectedIngredient, setSelectedIngredient] = useState('');\n    const [selectedMeasurement, setSelectedMeasurement] = useState('');\n    const [amount, setAmount] = useState('');\n    const [ingredientsList, setIngredientsList] = useState([]);\n    const [userId, setUserId] = useState('');\n\n\n    const addIngredient = () => {\n        setRecipeIngredients([...recipeIngredients, '']);\n        setSearchTerms([...searchTerms, '']);\n    };\n\n    const removeIngredient = (index) => {\n        const updatedIngredients = [...recipeIngredients];\n        updatedIngredients.splice(index, 1);\n        setRecipeIngredients(updatedIngredients);\n\n        const updatedSearchTerms = [...searchTerms];\n        updatedSearchTerms.splice(index, 1);\n        setSearchTerms(updatedSearchTerms);\n    };\n\n    const handleIngredientChange = (index, value) => {\n        const updatedSearchTerms = [...searchTerms];\n        updatedSearchTerms[index] = value;\n        setSearchTerms(updatedSearchTerms);\n\n        const updatedIngredients = [...recipeIngredients];\n        updatedIngredients[index] = value;\n        setRecipeIngredients(updatedIngredients);\n    };\n\n    useEffect(() => {\n        if (searchTerms[searchTerms.length - 1].length >= 3) {\n            const filtered = ingredients.filter(\n                (ingred) =>\n                    ingred && ingred.ingredient\n                        ? ingred.ingredient.toLowerCase().includes(searchTerms[searchTerms.length - 1].toLowerCase())\n                        : false\n            );\n            setFilteredIngredients(filtered);\n        } else {\n            setFilteredIngredients([]);\n        }\n    }, [searchTerms, ingredients]);\n\n    const addInstruction = () => {\n        setInstructions([...instructions, '']);\n    };\n\n    const removeInstruction = (index) => {\n        const updatedInstructions = [...instructions];\n        updatedInstructions.splice(index, 1);\n        setInstructions(updatedInstructions);\n    };\n\n    const handleInstructionChange = (index, value) => {\n        const updatedInstructions = [...instructions];\n        updatedInstructions[index] = value;\n        setInstructions(updatedInstructions);\n    };\n\n    useEffect(() => {\n        const token = localStorage.getItem('token')\n        if (token) {\n            const _user = jwt_decode(token)\n            setName(_user.name)\n            setUser(_user)\n            setUserId(_user.email)\n            if (!_user) {\n                localStorage.removeItem('token')\n                navigate.replace('/login')\n            }\n        }\n    }, [navigate])\n\n\n    useEffect(() => {\n        fetch('http://localhost:1337/api/search_recipe')\n            .then(response => response.json())\n            .then(data => {\n                const expandedCategories = {};\n                const checkedItems = {};\n                Object.keys(data).forEach(category => {\n                    //expandedCategories[category] = false;\n                    checkedItems[category] = {};\n                });\n                setCategories(data);\n                // for (const categoryKey in data) {\n                //     if (Object.hasOwnProperty.call(data, categoryKey)) {\n                //       const categoryEntries = data[categoryKey];\n                //       console.log(`Category: ${categoryKey}`);\n\n                //       for (const entry of categoryEntries) {\n                //         const [id, name] = entry;\n                //         console.log(`  Entry ID: ${id}, Name: ${name}`);\n                //       }\n                //     }\n                //   }\n                //setExpandedCategories(expandedCategories);\n                setCheckedItems(checkedItems);\n            })\n            .catch(error => {\n                console.error(error);\n            });\n    }, []);\n\n    useEffect(() => {\n        if (user) {\n            fetch(`http://localhost:1337/api/groceries`)\n                .then(res => res.json())\n                .then(data => {\n                    setIngredients(data)\n                })\n                .catch(error => console.error(error))\n        }\n    }, [user]);\n\n    useEffect(() => {\n        if (user) {\n            fetch(`http://localhost:1337/api/measurements`)\n                .then(res => res.json())\n                .then(data => {\n                    setMeasurements(data)\n                })\n                .catch(error => console.error(error))\n        }\n    }, [user]);\n\n    // useEffect(() => {\n    //     if (searchTerm.length >= 3) {\n    //         const filtered = ingredients.filter((ingred) =>\n    //             ingred && ingred.ingredient\n    //                 ? ingred.ingredient.toLowerCase().includes(searchTerm.toLowerCase())\n    //                 : false\n    //         );\n    //         setFilteredIngredients(filtered);\n    //     } else {\n    //         setFilteredIngredients([]);\n    //     }\n    // }, [searchTerm, ingredients]);\n\n\n    const handleAddToGroceryList = () => {\n        if (selectedIngredient && selectedMeasurement && amount) {\n            const selectedIngredientObject = filteredIngredients.find(item => item.ingredient === selectedIngredient);\n            const selectedMeasurementObject = measurements.find(item => item.measurement === selectedMeasurement);\n            const newItem = {\n                ingredientId: selectedIngredientObject?.id,\n                measurementId: selectedMeasurementObject?.id,\n                amount: amount,\n                ingredientName: selectedIngredient,\n                measurementName: selectedMeasurement\n            };\n            setIngredientsList([...ingredientsList, newItem]);\n            // Clear the input fields after adding to the list\n            setSelectedIngredient('');\n            setSelectedMeasurement('');\n            setAmount('');\n            setSearchTerm(['']);\n        }\n    };\n\n    const handleImageChange = (event) => {\n        const file = event.target.files[0];\n        setSelectedImage(file);\n    };\n\n    const handleCheckboxChange = (category, id, checked) => {\n        setCheckedItems((prevCheckedItems) => {\n            const newCheckedItems = {\n                ...prevCheckedItems,\n                [category]: {\n                    ...(prevCheckedItems[category] || {}),\n                    [id]: checked,\n                },\n            };\n\n            // If the category is kosher_categories, enforce exactly one checkbox\n            if (category === 'kosher_categories') {\n                const kosherCategoryIds = Object.keys(newCheckedItems[category]);\n                const numChecked = kosherCategoryIds.reduce(\n                    (count, checkboxId) => (newCheckedItems[category][checkboxId] ? count + 1 : count),\n                    0\n                );\n\n                // If more than one checkbox is checked, uncheck the current one\n                if (numChecked > 1) {\n                    newCheckedItems[category][id] = false;\n                }\n            }\n\n            return newCheckedItems;\n        });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const kosherCategoryIds = Object.keys(checkedItems['kosher_categories'] || {});\n        const isKosherCategoryValid = kosherCategoryIds.some(\n            (checkboxId) => checkedItems['kosher_categories'][checkboxId]\n        );\n\n        if (!isKosherCategoryValid) {\n            setErrorMessage('Please select at least one checkbox in kosher_categories');\n            return;\n        }\n        setErrorMessage('');\n        console.log('Form Data:', {\n            recipeName,\n            selectedImage,\n            cookTime,\n            prepTime,\n            selectedCategory,\n            groceryList: ingredientsList,\n            description,\n            recipeServings,\n            recipeYield,\n            recipeInstructions: instructions,\n            checkedItems,\n        });\n        // setRecipeName('');\n        // setSelectedImage(null);\n        // setCookTime('00:00');\n        // setPrepTime('00:00');\n        // setSelectedCategory('');\n        // setSearchTerm('');\n        // setSelectedMeasurement('');\n        // setAmount('');\n        // setDescription('');\n        // setRecipeServings(1);\n        // setRecipeYield('');\n        // setRecipeInstructions('');\n        // setCheckedItems({});\n        // setGroceryList([]);\n        const formData = new FormData();\n        formData.append('selectedImage', selectedImage);\n        formData.append('recipeName', recipeName);\n        formData.append('cookTime', cookTime);\n        formData.append('prepTime', prepTime);\n        formData.append('selectedCategory', selectedCategory);\n        formData.append('groceryList', JSON.stringify(ingredientsList)); // Assuming groceryList is an array\n        formData.append('description', description);\n        formData.append('recipeServings', recipeServings);\n        formData.append('recipeYield', recipeYield);\n        formData.append('recipeInstructions', instructions);\n        formData.append('checkedItems', JSON.stringify(checkedItems));\n        formData.append('name', name);\n        formData.append('userId', userId);\n\n        try {\n            const response = await fetch('http://localhost:1337/api/addRecipe', {\n                method: 'POST',\n                body: formData,\n            });\n            if (response.ok) {\n                const result = await response.json();\n                console.log(result); // Recipe successfully added\n            } else {\n                console.error(`HTTP Error: ${response.status}`);\n                // Handle error response\n            }\n        } catch (error) {\n            console.error(error);\n            // Handle fetch error (e.g., network error)\n        }\n    };\n\n    return (\n        <div>\n            {name && <Navbar name={name} />}\n            <div>\n                {user && (\n                    <form className='add-recipe-form' onSubmit={handleSubmit}>\n\n                        <div className='image-details two-sections-wrapper'>\n\n                            <div className='section-left image-details-left'>\n                                <div className='add-image-head'>\n                                    <label className='black-title'>Add Images</label>\n                                </div>\n\n                                <div className='image-container'>\n                                    {selectedImage ? (\n                                        <>\n                                            <img className='recipe-image' src={URL.createObjectURL(selectedImage)} alt=\"Selected\" />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <label className=\"custom-file-upload\">\n                                                <i className=\"bi bi-images\"></i>\n                                                <input className=\"input-file\" type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\n                                            </label>\n                                            <label className='add-file-title'>Upload images</label>\n                                        </>\n                                    )}\n                                </div>\n\n                            </div>\n\n                            <div className='section-right image-details-right'>\n                                <div className='description-head'>Add Your Recipe</div>\n                                <div className='description-bottom'>\n                                    <div className='black-title'>Recipe Name & Description</div>\n\n                                    <div className='description-fields'>\n                                        <div className='desc-field'>\n                                            <label className='input-title'>Recipe Name</label>\n                                            <input\n                                                className='input-field'\n                                                type=\"text\"\n                                                value={recipeName || ''}\n                                                onChange={(e) => setRecipeName(e.target.value)}\n                                                required\n                                            />\n                                        </div>\n\n                                        <div className='times-yields'>\n\n                                            <div className='desc-field'>\n                                                <label className='input-title'>Prep Time</label>\n                                                <input\n                                                    className='input-field time-field'\n                                                    type=\"time\"\n                                                    value={prepTime}\n                                                    onChange={(e) => setPrepTime(e.target.value)}\n                                                    required\n                                                />\n                                            </div>\n\n                                            <div className='desc-field'>\n                                                <label className='input-title'>Cook Time</label>\n                                                <input\n                                                    className='input-field time-field'\n                                                    type=\"time\"\n                                                    value={cookTime}\n                                                    onChange={(e) => setCookTime(e.target.value)}\n                                                />\n                                            </div>\n\n                                            <div className='desc-field yields-field'>\n                                                <label className='input-title'>Yields /Servings</label>\n                                                <input\n                                                    className='input-field'\n                                                    type=\"text\"\n                                                    value={recipeYield}\n                                                    onChange={(e) => setRecipeYield(e.target.value)}\n                                                />\n                                            </div>\n                                        </div>\n\n                                        <div className='desc-field'>\n                                            <label className='input-title'>Description</label>\n                                            <textarea\n                                                className='input-field desc-textbox'\n                                                value={description}\n                                                onChange={(e) => setDescription(e.target.value)}\n                                            />\n                                        </div>\n\n                                        <div className='desc-field'>\n                                            <label className='input-title'>Category</label>\n                                            <select\n                                                className='input-field category-desc'\n                                                value={selectedCategory}\n                                                onChange={(e) => setSelectedCategory(e.target.value)}\n                                                required\n                                            >\n                                                <option value=\"\" disabled>\n                                                    Select Category\n                                                </option>\n                                                {Object.entries(categories).map(([category, entries]) => (\n                                                    entries.map(([id, tagName]) => (\n                                                        <option key={id} value={tagName}>\n                                                            {tagName}\n                                                        </option>\n                                                    ))\n                                                ))}\n                                            </select>\n                                        </div>\n\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className='ingredients-steps two-sections-wrapper'>\n\n                            <div className='section-left ingredients-steps-section'>\n                                <label className='black-title'>Ingredients</label>\n\n\n\n\n                                <div className='steps-container'>\n                                    {recipeIngredients.map((ingredient, index) => (\n                                        <div key={index} className='instruction-row'>\n                                            <div className=\"custom-dropdown\">\n                                                <input\n                                                    type=\"text\"\n                                                    placeholder=\"Search ingredients...\"\n                                                    value={searchTerms[index]}\n                                                    onChange={(e) => handleIngredientChange(index, e.target.value)}\n                                                />\n                                                {searchTerms[index].length >= 3 && (\n                                                    <div className=\"dropdown-ingredient\">\n                                                        {filteredIngredients.map((filteredIngredient) => (\n                                                            <div\n                                                                key={filteredIngredient.id}\n                                                                className=\"dropdown-item\"\n                                                                onClick={() => {\n                                                                    handleIngredientChange(index, filteredIngredient.ingredient);\n                                                                }}\n                                                            >\n                                                                {filteredIngredient.ingredient}\n                                                            </div>\n                                                        ))}\n                                                    </div>\n                                                )}\n                                            </div>\n                                            <i\n                                                onClick={() => removeIngredient(index)}\n                                                className='bi bi-x-circle remove-icon'\n                                                title='Remove Ingredient'\n                                            ></i>\n                                        </div>\n                                    ))}\n\n                                    <button onClick={addIngredient} className='add-btn'>\n                                        <i className=\"bi bi-plus-circle add-icon\"></i>\n                                        <span>Add another ingredient</span>\n                                    </button>\n                                </div>\n\n                            </div>\n\n                            <div className='section-right ingredients-steps-section'>\n                                <label className='black-title'>Instructions</label>\n\n                                <div className='steps-container'>\n\n                                    {instructions.map((instruction, index) => (\n                                        <div key={index} className='instruction-row'>\n                                            <input\n                                                className='input-field step-input'\n                                                placeholder={`Instruction ${index + 1}`}\n                                                value={instruction}\n                                                onChange={(e) => handleInstructionChange(index, e.target.value)}\n                                                required\n                                            />\n                                            <i\n                                                onClick={() => removeInstruction(index)}\n                                                className='bi bi-x-circle remove-icon'\n                                                title='Remove Instruction'\n                                            ></i>\n                                        </div>\n                                    ))}\n\n                                    <button onClick={addInstruction} className='add-btn'>\n                                        <i className=\"bi bi-plus-circle add-icon\"></i>\n                                        <span>Add another instruction</span>\n                                    </button>\n\n                                </div>\n\n                            </div>\n\n                        </div>\n\n                        <div className='tags-section'>\n                            <label className='black-title'>Tags</label>\n\n                        </div>\n\n                        <div className='submit-section'>\n                            <button className='publish-btn' type=\"submit\">Publish</button>\n                        </div>\n                    </form>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default AddRecipe\n\n// <input\n// className='input-field step-input'\n// placeholder={`Ingredient ${index + 1}`}\n// value={ingredient}\n// onChange={(e) => handleIngredientChange(index, e.target.value)}\n// required\n// />\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}