{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oria3\\\\Desktop\\\\\\u05DB\\u05DC\\u05DC\\u05D9\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8 \\u05D2\\u05DE\\u05E8\\\\code\\\\client\\\\src\\\\pages\\\\Recipe.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport Navbar from '../components/Navbar';\nimport StarRating from '../components/StarRating';\nimport Loading from '../components/Loading';\nimport NutritionTable from '../components/NutritionTable';\nimport { useLocation } from 'react-router-dom';\nimport './Recipe.css';\nimport LikeButton from '../components/LikeBtn';\nimport CommentsContainer from '../components/CommentsContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultImageUrl = '/images/logo-image.png';\nconst RecipePage = () => {\n  _s();\n  let user_name;\n  let user_id;\n  const location = useLocation();\n  //console.log(location)\n  if (location.state !== null) {\n    user_name = location.state.name;\n    user_id = location.state.user_id;\n    // console.log(user_name)\n    // console.log(user_id)\n  } else {\n    user_name = \"Guest\";\n    user_id = \"Guest\";\n  }\n  const {\n    id\n  } = useParams();\n  const [recipe, setRecipe] = useState(null);\n  const [imageUrl, setImageUrl] = useState(null);\n  const [ingredients, setIngredients] = useState([]);\n  const [recipeTags, setRecipeTags] = useState([]);\n  useEffect(() => {\n    async function fetchTags() {\n      try {\n        const response = await fetch(`http://localhost:1337/api/recipes/${id}/tags`);\n        const tags = await response.json();\n        setRecipeTags(tags);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    fetchTags();\n    console.log('finish1');\n  }, [id]);\n  useEffect(() => {\n    async function fetchRecipe() {\n      const response = await fetch(`http://localhost:1337/api/recipes/${id}`);\n      const data = await response.json();\n      setRecipe(data);\n    }\n    fetchRecipe();\n    console.log('finish1');\n  }, [id]);\n  useEffect(() => {\n    async function fetchIngredients() {\n      try {\n        const response = await fetch(`http://localhost:1337/api/recipes/${id}/ingredients`);\n        const data = await response.json();\n        setIngredients(data);\n      } catch (error) {\n        console.error(error);\n      }\n      console.log('finish1');\n    }\n    fetchIngredients();\n  }, [id]);\n  useEffect(() => {\n    async function getImageUrl() {\n      try {\n        const response = await fetch(`http://localhost:1337/api/recipes/images/${id}`);\n        if (response.ok) {\n          const data = await response.text(); // Read response as text\n          if (data.startsWith('http')) {\n            const imageUrlResponse = await fetch(data);\n            if (imageUrlResponse.ok) {\n              // URL is valid, use it\n              setImageUrl(data);\n            } else {\n              // URL is not valid, set default image\n              setImageUrl(defaultImageUrl);\n            }\n          } else {\n            // If data is not a URL, try parsing it as JSON\n            try {\n              const jsonData = JSON.parse(data);\n              if (jsonData && jsonData.filename && jsonData.fileId) {\n                // If it's a valid JSON with filename and fileId\n                const {\n                  filename,\n                  fileId\n                } = jsonData;\n                const imageResponse = await fetch(`http://localhost:1337/api/addRecipe/images/${fileId}`);\n                if (imageResponse.ok) {\n                  const imageUrl = URL.createObjectURL(await imageResponse.blob());\n                  setImageUrl(imageUrl);\n                } else {\n                  setImageUrl(defaultImageUrl);\n                }\n              } else {\n                setImageUrl(defaultImageUrl);\n              }\n            } catch (jsonError) {\n              console.error(jsonError);\n              setImageUrl(defaultImageUrl);\n            }\n          }\n        } else {\n          setImageUrl(defaultImageUrl);\n        }\n      } catch (error) {\n        console.error(error);\n        setImageUrl(defaultImageUrl);\n      }\n    }\n    getImageUrl();\n  }, [id]);\n  function formatDate(inputDate) {\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    return new Date(inputDate).toLocaleDateString('en-US', options);\n  }\n  function capitalizeFirstLetter(text) {\n    return text && text.charAt(0).toUpperCase() + text.slice(1);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      name: user_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), user_name && recipe ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recipe-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              id: \"recipe-name\",\n              children: capitalizeFirstLetter(recipe.Name)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"author-date\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Recipe by \" + recipe.AuthorName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"author-separator\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Published on \" + formatDate(recipe.DatePublished)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StarRating, {\n              rating: recipe.AggregatedRating,\n              reviewCount: recipe.ReviewCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"times-container\",\n              children: [\"PrepTime\", \"CookTime\", \"TotalTime\"].map((timeKey, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"time\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    id: \"time-number\",\n                    children: recipe[timeKey]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    id: \"time-text\",\n                    children: [index === 0 ? \"Prep\" : index === 1 ? \"Cook\" : \"Total\", \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 161,\n                      columnNumber: 102\n                    }, this), \" Time\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 23\n                }, this), index < 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"time-separator\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 37\n                }, this)]\n              }, timeKey, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(LikeButton, {\n              recipeId: id,\n              userEmail: user_id,\n              pageType: \"RecipePage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recipe-image-container\",\n            children: imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"recipe-image\",\n              src: imageUrl,\n              alt: \"Card cap\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description-text\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: capitalizeFirstLetter(recipe.Description)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bold-text\",\n                children: \"Servings: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\" \", recipe.RecipeServings]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bold-text\",\n                children: \"Kosher: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\" \", capitalizeFirstLetter(recipe.Kosher)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bold-text\",\n                children: \"Category: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\" \", capitalizeFirstLetter(recipe.RecipeCategory)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ingredients-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ingredients\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"title\",\n                children: \"Ingredients\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this), ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"step-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ingredient-text\",\n                  children: ingredient.name\n                }, ingredient.name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, `br-${index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"instructions\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: \"Instructions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this), recipe.RecipeInstructions.split('.').map((instruction, index) => {\n              const formattedInstruction = instruction.trim().charAt(0).toUpperCase() + instruction.trim().slice(1);\n              return instruction.trim() !== \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"step-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"step-index\",\n                  children: [index < 9 ? \"0\" : \"\", index + 1, \". \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"step-text\",\n                  children: [formattedInstruction, \".\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 21\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(NutritionTable, {\n          recipe: recipe\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tags-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"tags-icon bi bi-bookmarks-fill\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this), \"Recipe Tags\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), recipeTags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tag\",\n            children: tag\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CommentsContainer, {\n          id: id,\n          user_id: user_id,\n          user_name: user_name,\n          recipe: recipe\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipePage, \"bD+muiBeEXHbpalswEYcQdl18+U=\", false, function () {\n  return [useLocation, useParams];\n});\n_c = RecipePage;\nexport default RecipePage;\nvar _c;\n$RefreshReg$(_c, \"RecipePage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Navbar","StarRating","Loading","NutritionTable","useLocation","LikeButton","CommentsContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","defaultImageUrl","RecipePage","_s","user_name","user_id","location","state","name","id","recipe","setRecipe","imageUrl","setImageUrl","ingredients","setIngredients","recipeTags","setRecipeTags","fetchTags","response","fetch","tags","json","error","console","log","fetchRecipe","data","fetchIngredients","getImageUrl","ok","text","startsWith","imageUrlResponse","jsonData","JSON","parse","filename","fileId","imageResponse","URL","createObjectURL","blob","jsonError","formatDate","inputDate","options","year","month","day","Date","toLocaleDateString","capitalizeFirstLetter","charAt","toUpperCase","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Name","AuthorName","DatePublished","rating","AggregatedRating","reviewCount","ReviewCount","map","timeKey","index","recipeId","userEmail","pageType","src","alt","Description","RecipeServings","Kosher","RecipeCategory","ingredient","RecipeInstructions","split","instruction","formattedInstruction","trim","tag","_c","$RefreshReg$"],"sources":["C:/Users/oria3/Desktop/כללי/לימודים/שנה ג/פרוייקט גמר/code/client/src/pages/Recipe.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport Navbar from '../components/Navbar';\r\nimport StarRating from '../components/StarRating';\r\nimport Loading from '../components/Loading';\r\nimport NutritionTable from '../components/NutritionTable';\r\nimport { useLocation } from 'react-router-dom';\r\nimport './Recipe.css';\r\nimport LikeButton from '../components/LikeBtn';\r\nimport CommentsContainer from '../components/CommentsContainer';\r\n\r\nconst defaultImageUrl = '/images/logo-image.png'\r\n\r\nconst RecipePage = () => {\r\n  let user_name\r\n  let user_id\r\n  const location = useLocation();\r\n  //console.log(location)\r\n  if (location.state !== null) {\r\n    user_name = location.state.name;\r\n    user_id = location.state.user_id;\r\n    // console.log(user_name)\r\n    // console.log(user_id)\r\n  }\r\n  else {\r\n    user_name = \"Guest\"\r\n    user_id = \"Guest\"\r\n  }\r\n\r\n\r\n  const { id } = useParams();\r\n  const [recipe, setRecipe] = useState(null);\r\n  const [imageUrl, setImageUrl] = useState(null);\r\n  const [ingredients, setIngredients] = useState([]);\r\n  const [recipeTags, setRecipeTags] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchTags() {\r\n      try {\r\n        const response = await fetch(`http://localhost:1337/api/recipes/${id}/tags`);\r\n        const tags = await response.json();\r\n        setRecipeTags(tags);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n\r\n    fetchTags();\r\n    console.log('finish1');\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    async function fetchRecipe() {\r\n      const response = await fetch(`http://localhost:1337/api/recipes/${id}`);\r\n      const data = await response.json();\r\n      setRecipe(data);\r\n    }\r\n    fetchRecipe();\r\n    console.log('finish1');\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    async function fetchIngredients() {\r\n      try {\r\n        const response = await fetch(`http://localhost:1337/api/recipes/${id}/ingredients`);\r\n        const data = await response.json();\r\n        setIngredients(data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n      console.log('finish1');\r\n    }\r\n\r\n    fetchIngredients();\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    async function getImageUrl() {\r\n      try {\r\n        const response = await fetch(`http://localhost:1337/api/recipes/images/${id}`);\r\n        if (response.ok) {\r\n          const data = await response.text(); // Read response as text\r\n          if (data.startsWith('http')) {\r\n            const imageUrlResponse = await fetch(data);\r\n            if (imageUrlResponse.ok) {\r\n              // URL is valid, use it\r\n              setImageUrl(data);\r\n            } else {\r\n              // URL is not valid, set default image\r\n              setImageUrl(defaultImageUrl);\r\n            }\r\n          } else {\r\n            // If data is not a URL, try parsing it as JSON\r\n            try {\r\n              const jsonData = JSON.parse(data);\r\n              if (jsonData && jsonData.filename && jsonData.fileId) {\r\n                // If it's a valid JSON with filename and fileId\r\n                const { filename, fileId } = jsonData;\r\n                const imageResponse = await fetch(`http://localhost:1337/api/addRecipe/images/${fileId}`);\r\n                if (imageResponse.ok) {\r\n                  const imageUrl = URL.createObjectURL(await imageResponse.blob());\r\n                  setImageUrl(imageUrl);\r\n                } else {\r\n                  setImageUrl(defaultImageUrl);\r\n                }\r\n              } else {\r\n                setImageUrl(defaultImageUrl);\r\n              }\r\n            } catch (jsonError) {\r\n              console.error(jsonError);\r\n              setImageUrl(defaultImageUrl);\r\n            }\r\n          }\r\n        } else {\r\n          setImageUrl(defaultImageUrl);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n        setImageUrl(defaultImageUrl);\r\n      }\r\n    }\r\n\r\n    getImageUrl();\r\n  }, [id]);\r\n\r\n  function formatDate(inputDate) {\r\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n    return new Date(inputDate).toLocaleDateString('en-US', options);\r\n  }\r\n\r\n  function capitalizeFirstLetter(text) {\r\n    return text && text.charAt(0).toUpperCase() + text.slice(1);\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Navbar name={user_name} />\r\n      {user_name && recipe ? (\r\n        <>\r\n          <div className='recipe-container'>\r\n\r\n            <div className='recipe-header'>\r\n\r\n              <div className='recipe-details'>\r\n\r\n                <h2 id=\"recipe-name\">{capitalizeFirstLetter(recipe.Name)}</h2>\r\n                <div id=\"author-date\">\r\n                  <span>{\"Recipe by \" + recipe.AuthorName}</span>\r\n                  <span className=\"author-separator\"></span>\r\n                  <span>{\"Published on \" + formatDate(recipe.DatePublished)}</span>\r\n                </div>\r\n\r\n                <StarRating rating={recipe.AggregatedRating} reviewCount={recipe.ReviewCount} />\r\n\r\n                <div className='times-container'>\r\n                  {[\"PrepTime\", \"CookTime\", \"TotalTime\"].map((timeKey, index) => (\r\n                    <React.Fragment key={timeKey}>\r\n                      <div className='time'>\r\n                        <span id=\"time-number\">{recipe[timeKey]}</span>\r\n                        <span id=\"time-text\">{index === 0 ? \"Prep\" : index === 1 ? \"Cook\" : \"Total\"} <br /> Time</span>\r\n                      </div>\r\n                      {index < 2 && <div className='time-separator'></div>}\r\n                    </React.Fragment>\r\n                  ))}\r\n                </div>\r\n\r\n\r\n\r\n                <LikeButton recipeId={id} userEmail={user_id} pageType=\"RecipePage\" />\r\n\r\n\r\n              </div>\r\n\r\n              <div className='recipe-image-container'>\r\n                {imageUrl && <img className='recipe-image' src={imageUrl} alt=\"Card cap\"></img>}\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <div className='description'>\r\n              <div className='description-text'>\r\n                <p>{capitalizeFirstLetter(recipe.Description)}</p>\r\n\r\n              </div>\r\n              <div className='description-details'>\r\n                <p>\r\n                  <span className=\"bold-text\">Servings: </span>\r\n                  <span> {recipe.RecipeServings}</span>\r\n                </p>\r\n                <p>\r\n                  <span className=\"bold-text\">Kosher: </span>\r\n                  <span> {capitalizeFirstLetter(recipe.Kosher)}</span>\r\n                </p>\r\n                <p>\r\n                  <span className=\"bold-text\">Category: </span>\r\n                  <span> {capitalizeFirstLetter(recipe.RecipeCategory)}</span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='recipe-body'>\r\n\r\n              <div className='ingredients-container'>\r\n                <div className='ingredients'>\r\n                  <span className=\"title\">Ingredients</span>\r\n                  {ingredients.map((ingredient, index) => (\r\n                    <div className='step-container' key={index}>\r\n                      <span className='ingredient-text' key={ingredient.name}>{ingredient.name}</span>\r\n                      <br key={`br-${index}`} />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n\r\n              </div>\r\n\r\n              <div className='instructions'>\r\n                <span className='title'>Instructions</span>\r\n                {recipe.RecipeInstructions.split('.').map((instruction, index) => {\r\n                  const formattedInstruction = instruction.trim().charAt(0).toUpperCase() + instruction.trim().slice(1);\r\n                  return instruction.trim() !== \"\" && (\r\n                    <div className='step-container' key={index}>\r\n                      <span className='step-index'>{index < 9 ? \"0\" : \"\"}{index + 1}. </span>\r\n                      <span className='step-text'>{formattedInstruction}.</span>\r\n                      <br />\r\n                    </div>\r\n                  );\r\n                })}\r\n                <br />\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <NutritionTable recipe={recipe} />\r\n\r\n            <div className='tags-container'>\r\n              <div className='title'>\r\n                <i className=\"tags-icon bi bi-bookmarks-fill\"></i>\r\n                Recipe Tags\r\n              </div>\r\n\r\n              {recipeTags.map((tag, index) => (\r\n                <span key={index} className='tag'>\r\n                  {tag}\r\n                </span>\r\n              ))}\r\n\r\n            </div>\r\n\r\n            <CommentsContainer id={id} user_id={user_id} user_name={user_name} recipe={recipe} />\r\n\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n\r\n\r\n\r\n\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <Loading />\r\n      )}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default RecipePage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}