{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oria3\\\\Desktop\\\\\\u05DB\\u05DC\\u05DC\\u05D9\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8 \\u05D2\\u05DE\\u05E8\\\\code\\\\client\\\\src\\\\pages\\\\SearchRecipe.js\",\n  _s = $RefreshSig$();\nimport Navbar from '../components/Navbar';\nimport RecipeCard from '../components/RecipeCard';\nimport './App.css';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport Loading from '../components/Loading';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SearchRecipe = () => {\n  _s();\n  const navigate = useNavigate();\n  const [categories, setCategories] = useState([]);\n  const [expandedCategories, setExpandedCategories] = useState({});\n  const [recipes, setRecipes] = useState([]);\n  const [checkedItems, setCheckedItems] = useState({});\n  const [filteredRecipes, setFilteredRecipes] = useState([]);\n  const [filteredRecipesByName, setFilteredRecipeByNames] = useState([]);\n  const [recipesCategories, setRecipesCategories] = useState([]);\n  const [name, setName] = useState(null);\n  const [user, setUser] = useState(null);\n  const location = useLocation();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const _user = jwt_decode(token);\n        // Handle user or guest based on your logic\n        setName(_user.name);\n        setUser(_user);\n      } catch (error) {\n        // Handle token decoding error\n        setName('Guest');\n        setUser(null);\n        console.error('Error decoding token:', error);\n        // You might want to redirect to login or handle the error in some way\n      }\n    } else {\n      // Handle the case where there's no token (e.g., guest user)\n      setName('Guest');\n      setUser(null); // Set user to null or handle guest user data\n    }\n  }, [navigate]);\n  useEffect(() => {\n    fetch(`http://localhost:1337/api/table/recipes`).then(res => res.json()).then(data => {\n      setRecipes(data);\n      setFilteredRecipes(data);\n    }).catch(error => console.error(error));\n  }, []);\n  useEffect(() => {\n    fetch(`http://localhost:1337/api/recipes_categories`).then(res => res.json()).then(data => {\n      setRecipesCategories(data);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  useEffect(() => {\n    fetch('http://localhost:1337/api/search_recipe').then(response => response.json()).then(data => {\n      setCategories(data);\n      const expandedCategories = {};\n      const checkedItems = {};\n      Object.keys(data).forEach(category => {\n        expandedCategories[category] = false;\n        checkedItems[category] = {};\n      });\n      setExpandedCategories(expandedCategories);\n      setCheckedItems(checkedItems);\n      setLoading(false); // Set loading to false when search categories have loaded\n    }).catch(error => {\n      console.error(error);\n      setLoading(false); // Ensure loading is set to false even on error\n    });\n  }, []);\n  const toggleCategory = category => {\n    setExpandedCategories({\n      ...expandedCategories,\n      [category]: !expandedCategories[category]\n    });\n  };\n  const handleCheckboxChange = (category, value) => {\n    const checkedItemsCopy = {\n      ...checkedItems\n    };\n    checkedItemsCopy[category][value] = !checkedItemsCopy[category][value];\n    setCheckedItems(checkedItemsCopy);\n    filterRecipes(); // apply filters when checkbox changes\n  };\n\n  useEffect(() => {\n    const searchParams = new URLSearchParams(location.search);\n    const queryFromURL = searchParams.get('query');\n    setSearchTerm(queryFromURL || '');\n  }, [location.search]);\n  useEffect(() => {\n    if (searchTerm) {\n      const lowercaseQuery = searchTerm.toLowerCase();\n      const filteredByName = recipes.filter(recipe => recipe.Name.toLowerCase().includes(lowercaseQuery));\n      setFilteredRecipes(filteredByName);\n      setFilteredRecipeByNames(filteredByName);\n    } else {\n      setFilteredRecipeByNames(recipes);\n      setFilteredRecipes(recipes);\n    }\n  }, [searchTerm, recipes]);\n  const filterRecipes = useCallback(() => {\n    let filteredIds = {};\n    let anyChecked = false;\n    Object.keys(checkedItems).forEach(category => {\n      Object.keys(checkedItems[category]).forEach(value => {\n        if (checkedItems[category][value]) {\n          anyChecked = true;\n          const recipeCategory = \"recipe_\" + category;\n          let category_ID;\n          for (let i = 0; i < categories[category].length; i++) {\n            if (categories[category][i][1] === value.substring(2)) {\n              category_ID = categories[category][i][0];\n            }\n          }\n          const tempFilteredIds = {};\n          for (let i = 0; i < recipesCategories[recipeCategory].length; i++) {\n            const recipe = recipesCategories[recipeCategory][i];\n            if (recipe.category_ID === category_ID) {\n              tempFilteredIds[recipe.recipe_ID] = true;\n            }\n          }\n          if (Object.keys(filteredIds).length === 0) {\n            filteredIds = tempFilteredIds;\n          } else {\n            filteredIds = Object.keys(filteredIds).filter(id => tempFilteredIds[id]).reduce((obj, id) => {\n              obj[id] = true;\n              return obj;\n            }, {});\n          }\n        }\n      });\n    });\n    if (!anyChecked) {\n      setFilteredRecipes(filteredRecipesByName);\n    } else {\n      const filteredRecipes = filteredRecipesByName.filter(recipe => filteredIds[recipe.RecipeId]);\n      setFilteredRecipes(filteredRecipes);\n      console.log(\"anyChecked:\" + filteredRecipes.length);\n    }\n  }, [checkedItems, categories, recipesCategories, filteredRecipesByName]);\n  //[checkedItems, categories, recipes, recipesCategories]);\n\n  useEffect(() => {\n    filterRecipes();\n  }, [checkedItems, filterRecipes]);\n  console.log(name);\n  const filterRecipesByGroceryList = async () => {\n    // Check if there are ingredients in the groceryList\n    const groceryList = JSON.parse(localStorage.getItem('groceryList')) || [];\n    if (groceryList.length === 0) {\n      console.log('Grocery list is empty');\n      return;\n    }\n\n    // Array to store filtered recipe IDs\n    const filteredRecipeIds = [];\n\n    // Use Promise.all with map to make the loops asynchronous\n    await Promise.all(filteredRecipesByName.map(async recipe => {\n      await Promise.all(groceryList.map(async ingredient => {\n        const ingredientId = ingredient.id;\n        try {\n          // Make a request to the server to check if the ingredient is in the recipe\n          const response = await fetch(`http://localhost:1337/api/search_recipes/${recipe.RecipeId}/${ingredientId}`);\n\n          // Check if the status is 200 (ingredient is in the recipe)\n          if (response.status === 200) {\n            filteredRecipeIds.push(recipe.RecipeId);\n          }\n        } catch (error) {\n          console.error('Error checking ingredient in recipe:', error);\n        }\n      }));\n    }));\n\n    // Filter the recipes based on the IDs\n    const filteredRecipes = filteredRecipesByName.filter(recipe => filteredRecipeIds.includes(recipe.RecipeId));\n    setFilteredRecipes(filteredRecipes);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [name && /*#__PURE__*/_jsxDEV(Navbar, {\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-recipe-container\",\n      children: loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-menu\",\n          children: [Object.keys(categories).sort((a, b) => a.localeCompare(b)).map(category => {\n            const categoryName = category.slice(0, -11).replace(/_/g, ' ');\n            const words = categoryName.toLowerCase().split(\" \");\n            const capitalizedWords = words.map(word => word.charAt(0).toUpperCase() + word.slice(1));\n            const capitalizedCategoryName = capitalizedWords.join(\" \");\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"category\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"category-header\",\n                onClick: () => toggleCategory(category),\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"category-title\",\n                  children: capitalizedCategoryName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-light category-toggle-btn\",\n                  children: expandedCategories[category] ? /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-chevron-up\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 57\n                  }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-chevron-down\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 45\n              }, this), expandedCategories[category] && categories[category].sort((a, b) => a[1] && b[1] ? a[1].localeCompare(b[1]) : 0).map(value => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-check\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-check-input\",\n                  type: \"checkbox\",\n                  id: \"check-box\",\n                  defaultChecked: checkedItems[category][value],\n                  onChange: () => handleCheckboxChange(category, value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-check-label\",\n                  htmlFor: `checkbox_${value}`,\n                  children: value[1]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 53\n                }, this)]\n              }, value, true, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 49\n              }, this))]\n            }, category, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 41\n            }, this);\n          }), name === 'Guest' && user === null ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary grocery-btn\",\n            onClick: filterRecipesByGroceryList,\n            children: \"Filter by Grocery List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipes wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recipes-container\",\n            children: filteredRecipes.length === 0 ? searchTerm !== \"\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"no-results-message\",\n              children: [\"No results found for: \\\"\", searchTerm, \"\\\".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"no-results-message\",\n              children: \"No results found.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 41\n            }, this) : filteredRecipes.map((recipe, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recipe-card-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(RecipeCard, {\n                recipe: recipe,\n                user: user\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 45\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchRecipe, \"xS73BxbKGDM4ZGOI9/W89GrZ0XA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = SearchRecipe;\nexport default SearchRecipe;\nvar _c;\n$RefreshReg$(_c, \"SearchRecipe\");","map":{"version":3,"names":["Navbar","RecipeCard","React","useState","useEffect","useCallback","jwt_decode","useNavigate","useLocation","Loading","jsxDEV","_jsxDEV","Fragment","_Fragment","SearchRecipe","_s","navigate","categories","setCategories","expandedCategories","setExpandedCategories","recipes","setRecipes","checkedItems","setCheckedItems","filteredRecipes","setFilteredRecipes","filteredRecipesByName","setFilteredRecipeByNames","recipesCategories","setRecipesCategories","name","setName","user","setUser","location","searchTerm","setSearchTerm","loading","setLoading","token","localStorage","getItem","_user","error","console","fetch","then","res","json","data","catch","response","Object","keys","forEach","category","toggleCategory","handleCheckboxChange","value","checkedItemsCopy","filterRecipes","searchParams","URLSearchParams","search","queryFromURL","get","lowercaseQuery","toLowerCase","filteredByName","filter","recipe","Name","includes","filteredIds","anyChecked","recipeCategory","category_ID","i","length","substring","tempFilteredIds","recipe_ID","id","reduce","obj","RecipeId","log","filterRecipesByGroceryList","groceryList","JSON","parse","filteredRecipeIds","Promise","all","map","ingredient","ingredientId","status","push","children","fileName","_jsxFileName","lineNumber","columnNumber","className","sort","a","b","localeCompare","categoryName","slice","replace","words","split","capitalizedWords","word","charAt","toUpperCase","capitalizedCategoryName","join","onClick","type","defaultChecked","onChange","htmlFor","index","_c","$RefreshReg$"],"sources":["C:/Users/oria3/Desktop/כללי/לימודים/שנה ג/פרוייקט גמר/code/client/src/pages/SearchRecipe.js"],"sourcesContent":["import Navbar from '../components/Navbar';\r\nimport RecipeCard from '../components/RecipeCard';\r\nimport './App.css';\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useNavigate, useLocation } from 'react-router-dom'\r\nimport Loading from '../components/Loading';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\n\r\nconst SearchRecipe = () => {\r\n    const navigate = useNavigate()\r\n    const [categories, setCategories] = useState([]);\r\n    const [expandedCategories, setExpandedCategories] = useState({});\r\n    const [recipes, setRecipes] = useState([]);\r\n    const [checkedItems, setCheckedItems] = useState({});\r\n    const [filteredRecipes, setFilteredRecipes] = useState([]);\r\n    const [filteredRecipesByName, setFilteredRecipeByNames] = useState([]);\r\n    const [recipesCategories, setRecipesCategories] = useState([]);\r\n    const [name, setName] = useState(null)\r\n    const [user, setUser] = useState(null)\r\n    const location = useLocation();\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            try {\r\n                const _user = jwt_decode(token);\r\n                // Handle user or guest based on your logic\r\n                setName(_user.name);\r\n                setUser(_user);\r\n            } catch (error) {\r\n                // Handle token decoding error\r\n                setName('Guest');\r\n                setUser(null);\r\n                console.error('Error decoding token:', error);\r\n                // You might want to redirect to login or handle the error in some way\r\n            }\r\n        } else {\r\n            // Handle the case where there's no token (e.g., guest user)\r\n            setName('Guest');\r\n            setUser(null); // Set user to null or handle guest user data\r\n        }\r\n    }, [navigate])\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(`http://localhost:1337/api/table/recipes`)\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                setRecipes(data);\r\n                setFilteredRecipes(data);\r\n            })\r\n            .catch((error) => console.error(error));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetch(`http://localhost:1337/api/recipes_categories`)\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                setRecipesCategories(data);\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:1337/api/search_recipe')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setCategories(data);\r\n                const expandedCategories = {};\r\n                const checkedItems = {};\r\n                Object.keys(data).forEach(category => {\r\n                    expandedCategories[category] = false;\r\n                    checkedItems[category] = {};\r\n                });\r\n                setExpandedCategories(expandedCategories);\r\n                setCheckedItems(checkedItems);\r\n                setLoading(false); // Set loading to false when search categories have loaded\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n                setLoading(false); // Ensure loading is set to false even on error\r\n            });\r\n    }, []);\r\n\r\n    const toggleCategory = (category) => {\r\n        setExpandedCategories({\r\n            ...expandedCategories,\r\n            [category]: !expandedCategories[category]\r\n        });\r\n    };\r\n\r\n    const handleCheckboxChange = (category, value) => {\r\n        const checkedItemsCopy = { ...checkedItems };\r\n        checkedItemsCopy[category][value] = !checkedItemsCopy[category][value];\r\n        setCheckedItems(checkedItemsCopy);\r\n        filterRecipes(); // apply filters when checkbox changes\r\n    };\r\n\r\n    useEffect(() => {\r\n        const searchParams = new URLSearchParams(location.search);\r\n        const queryFromURL = searchParams.get('query');\r\n        setSearchTerm(queryFromURL || '');\r\n    }, [location.search]);\r\n\r\n    useEffect(() => {\r\n        if (searchTerm) {\r\n            const lowercaseQuery = searchTerm.toLowerCase();\r\n            const filteredByName = recipes.filter(\r\n                (recipe) => recipe.Name.toLowerCase().includes(lowercaseQuery)\r\n            );\r\n            setFilteredRecipes(filteredByName);\r\n            setFilteredRecipeByNames(filteredByName);\r\n        } else {\r\n            setFilteredRecipeByNames(recipes);\r\n            setFilteredRecipes(recipes);\r\n        }\r\n    }, [searchTerm, recipes]);\r\n\r\n    const filterRecipes = useCallback(() => {\r\n        let filteredIds = {};\r\n        let anyChecked = false;\r\n        Object.keys(checkedItems).forEach((category) => {\r\n            Object.keys(checkedItems[category]).forEach((value) => {\r\n                if (checkedItems[category][value]) {\r\n                    anyChecked = true;\r\n                    const recipeCategory = \"recipe_\" + category;\r\n                    let category_ID;\r\n                    for (let i = 0; i < categories[category].length; i++) {\r\n                        if (categories[category][i][1] === value.substring(2)) {\r\n                            category_ID = categories[category][i][0];\r\n                        }\r\n                    }\r\n                    const tempFilteredIds = {};\r\n                    for (let i = 0; i < recipesCategories[recipeCategory].length; i++) {\r\n                        const recipe = recipesCategories[recipeCategory][i];\r\n                        if (recipe.category_ID === category_ID) {\r\n                            tempFilteredIds[recipe.recipe_ID] = true;\r\n                        }\r\n                    }\r\n                    if (Object.keys(filteredIds).length === 0) {\r\n                        filteredIds = tempFilteredIds;\r\n                    } else {\r\n                        filteredIds = Object.keys(filteredIds)\r\n                            .filter((id) => tempFilteredIds[id])\r\n                            .reduce((obj, id) => {\r\n                                obj[id] = true;\r\n                                return obj;\r\n                            }, {});\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        if (!anyChecked) {\r\n            setFilteredRecipes(filteredRecipesByName);\r\n        } else {\r\n            const filteredRecipes = filteredRecipesByName.filter((recipe) => filteredIds[recipe.RecipeId]);\r\n            setFilteredRecipes(filteredRecipes);\r\n            console.log(\"anyChecked:\" + filteredRecipes.length)\r\n        }\r\n\r\n\r\n    }, [checkedItems, categories, recipesCategories, filteredRecipesByName]);\r\n    //[checkedItems, categories, recipes, recipesCategories]);\r\n\r\n    useEffect(() => {\r\n        filterRecipes();\r\n    }, [checkedItems, filterRecipes]);\r\n    console.log(name)\r\n\r\n    const filterRecipesByGroceryList = async () => {\r\n        // Check if there are ingredients in the groceryList\r\n        const groceryList = JSON.parse(localStorage.getItem('groceryList')) || [];\r\n        if (groceryList.length === 0) {\r\n            console.log('Grocery list is empty');\r\n            return;\r\n        }\r\n\r\n        // Array to store filtered recipe IDs\r\n        const filteredRecipeIds = [];\r\n\r\n        // Use Promise.all with map to make the loops asynchronous\r\n        await Promise.all(\r\n            filteredRecipesByName.map(async (recipe) => {\r\n                await Promise.all(\r\n                    groceryList.map(async (ingredient) => {\r\n                        const ingredientId = ingredient.id;\r\n                        try {\r\n                            // Make a request to the server to check if the ingredient is in the recipe\r\n                            const response = await fetch(`http://localhost:1337/api/search_recipes/${recipe.RecipeId}/${ingredientId}`);\r\n\r\n                            // Check if the status is 200 (ingredient is in the recipe)\r\n                            if (response.status === 200) {\r\n                                filteredRecipeIds.push(recipe.RecipeId);\r\n                            }\r\n                        } catch (error) {\r\n                            console.error('Error checking ingredient in recipe:', error);\r\n                        }\r\n                    })\r\n                );\r\n            })\r\n        );\r\n\r\n        // Filter the recipes based on the IDs\r\n        const filteredRecipes = filteredRecipesByName.filter((recipe) => filteredRecipeIds.includes(recipe.RecipeId));\r\n        setFilteredRecipes(filteredRecipes);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {name && <Navbar name={name} />}\r\n            <div className='search-recipe-container'>\r\n\r\n                {loading ? (\r\n                    <Loading />\r\n                ) : (\r\n                    <>\r\n                        <div className='filter-menu'>\r\n                            {Object.keys(categories)\r\n                                .sort((a, b) => a.localeCompare(b))\r\n                                .map((category) => {\r\n                                    const categoryName = category.slice(0, -11).replace(/_/g, ' ');\r\n                                    const words = categoryName.toLowerCase().split(\" \");\r\n                                    const capitalizedWords = words.map(word => word.charAt(0).toUpperCase() + word.slice(1));\r\n                                    const capitalizedCategoryName = capitalizedWords.join(\" \");\r\n                                    return (\r\n                                        <div className='category' key={category}>\r\n                                            <div className=\"category-header\" onClick={() => toggleCategory(category)}>\r\n                                                <span className='category-title'>{capitalizedCategoryName}</span>\r\n                                                <button className=\"btn btn-light category-toggle-btn\">\r\n                                                    {expandedCategories[category] ? (\r\n                                                        <i className=\"bi bi-chevron-up\"></i>\r\n                                                    ) : (\r\n                                                        <i className=\"bi bi-chevron-down\"></i>\r\n                                                    )}\r\n                                                </button>\r\n                                            </div>\r\n                                            {expandedCategories[category] && categories[category].sort((a, b) => (a[1] && b[1]) ? a[1].localeCompare(b[1]) : 0).map((value) => (\r\n                                                <div className=\"form-check\" key={value}>\r\n                                                    <input className=\"form-check-input\" type=\"checkbox\" id=\"check-box\" defaultChecked={checkedItems[category][value]} onChange={() => handleCheckboxChange(category, value)} />\r\n                                                    <label className=\"form-check-label\" htmlFor={`checkbox_${value}`}>{value[1]}</label>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            {name === 'Guest' && user === null ? (\r\n                                <div></div>\r\n                            ) : (\r\n                                <button className=\"btn btn-primary grocery-btn\" onClick={filterRecipesByGroceryList}>\r\n                                    Filter by Grocery List\r\n                                </button>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className='recipes wrapper'>\r\n                            <div className='recipes-container'>\r\n                                {filteredRecipes.length === 0 ? (\r\n                                    searchTerm !== \"\" ? (\r\n                                        <p className=\"no-results-message\">No results found for: \"{searchTerm}\".</p>\r\n                                    ) : (\r\n                                        <p className=\"no-results-message\">No results found.</p>\r\n                                    )\r\n                                ) : (\r\n                                    filteredRecipes.map((recipe, index) => (\r\n                                        <div className='recipe-card-wrapper' key={index}>\r\n                                            <RecipeCard recipe={recipe} user={user} />\r\n                                        </div>\r\n                                    ))\r\n                                )}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchRecipe"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}