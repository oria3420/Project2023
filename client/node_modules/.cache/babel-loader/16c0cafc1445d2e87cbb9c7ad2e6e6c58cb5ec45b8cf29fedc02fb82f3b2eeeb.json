{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oria3\\\\Desktop\\\\\\u05DB\\u05DC\\u05DC\\u05D9\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8 \\u05D2\\u05DE\\u05E8\\\\code\\\\client\\\\src\\\\pages\\\\Groceries.js\",\n  _s = $RefreshSig$();\nimport Navbar from '../components/Navbar';\nimport './App.css';\nimport './Groceries.css';\nimport './AddRecipe.css';\nimport React, { useState, useEffect } from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from 'react-router-dom';\nimport './Connect.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Groceries = () => {\n  _s();\n  const navigate = useNavigate();\n  const [name, setName] = useState(null);\n  const [user, setUser] = useState(null);\n  const [ingredients, setIngredients] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [suggestionsIngredients, setSuggestionsIngredients] = useState([]);\n  const [selectedIngredient, setSelectedIngredient] = useState({});\n  const [groceryList, setGroceryList] = useState([]);\n  const [isSuggestionClicked, setIsSuggestionClicked] = useState(false);\n\n  // try\n  const [recipeIngredients, setRecipeIngredients] = useState([{\n    ingredient: '',\n    amount: '',\n    measurementId: ''\n  }]);\n  const [suggestions, setSuggestions] = useState([]);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const _user = jwt_decode(token);\n      setName(_user.name);\n      setUser(_user);\n      if (!_user) {\n        localStorage.removeItem('token');\n        navigate.replace('/login');\n      }\n    }\n  }, [navigate]);\n  useEffect(() => {\n    if (user) {\n      fetch(`http://localhost:1337/api/groceries`).then(res => res.json()).then(data => {\n        setIngredients(data);\n      }).catch(error => console.error(error));\n    }\n  }, [user]);\n  useEffect(() => {\n    if (searchTerm.length >= 3 && !isSuggestionClicked) {\n      const filtered = ingredients.filter(ingred => ingred.ingredient.toLowerCase().includes(searchTerm.toLowerCase()));\n      setSuggestionsIngredients(filtered);\n    } else {\n      setSuggestionsIngredients([]);\n    }\n    setIsSuggestionClicked(false); // Reset the flag\n  }, [searchTerm, ingredients, isSuggestionClicked]);\n  const handleSuggestionClick = ingredient => {\n    setIsSuggestionClicked(true); // Set the flag to true\n    setSearchTerm(ingredient.ingredient);\n    setSelectedIngredient({\n      id: ingredient.id,\n      ingredient: ingredient.ingredient\n    });\n    setSuggestionsIngredients([]); // Clear suggestions\n  };\n\n  const handleAddToGroceryList = () => {\n    if (selectedIngredient) {\n      const newItem = {\n        id: selectedIngredient.id,\n        ingredient: selectedIngredient.ingredient\n      };\n      setGroceryList([...groceryList, newItem]);\n      // Clear the input fields after adding to the list\n      setSelectedIngredient({});\n      setSearchTerm('');\n    }\n  };\n  useEffect(() => {\n    // Load grocery list from local storage when the component mounts\n    const storedGroceryList = JSON.parse(localStorage.getItem('groceryList')) || [];\n    setGroceryList(storedGroceryList);\n  }, []);\n  useEffect(() => {\n    // Save grocery list to local storage whenever it changes\n    localStorage.setItem('groceryList', JSON.stringify(groceryList));\n  }, [groceryList]);\n  const handleDeleteFromGroceryList = id => {\n    const updatedList = groceryList.filter(item => item.id !== id);\n    setGroceryList(updatedList);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [name && /*#__PURE__*/_jsxDEV(Navbar, {\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ing-page-main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ing-page-head\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ing-page-main-title\",\n          children: [\"Discover Recipes with What\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), \"You Have\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ing-page-sub-title\",\n          children: \"Cook delicious meals using ingredients you already have at home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ing-page-search-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-ing-input-container\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddToGroceryList,\n            className: \"add-btn-grocery\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-plus-circle add-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ing-page-bottom\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"groceries-list-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"black-title\",\n            children: \"Grocery List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grocery-list\",\n            children: groceryList.map((item, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ing-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"ing-rec\",\n                children: item.ingredient\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-x-circle remove-icon remove-ing\",\n                onClick: () => handleDeleteFromGroceryList(item.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"steps-container\",\n        children: [recipeIngredients.length === 0 ?\n        /*#__PURE__*/\n        // Error message when instructions array is empty\n        _jsxDEV(\"div\", {\n          className: \"error-message-empty\",\n          children: \"Please add at least one ingredient.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this) :\n        /*#__PURE__*/\n        // Render instructions container with inputs\n        _jsxDEV(_Fragment, {\n          children: recipeIngredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"instruction-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                id: `ingredient_${index}_name`,\n                className: \"input-field ingredient-input\",\n                placeholder: `Ingredient ${index + 1}`,\n                value: ingredient.ingredient,\n                onChange: e => handleIngredientChange(index, 'ingredient', e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 21\n              }, this), Array.isArray(suggestions[index]) && suggestions[index].length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ingredient-suggestions\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"toggle-bar\",\n                  children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                    children: suggestions[index].map((suggestion, suggestionIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n                      onClick: () => handleSuggestionClick(index, suggestion),\n                      children: suggestion\n                    }, suggestionIndex, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 228,\n                      columnNumber: 31\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: `ingredient_${index}_amount`,\n              type: \"number\",\n              className: \"input-field step-input amount-input\",\n              placeholder: `Amount ${index + 1}`,\n              value: ingredient.amount,\n              onChange: e => handleIngredientChange(index, 'amount', e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: `ingredient_${index}_measurement`,\n              className: \"input-field step-input measure-input selectWithScrollbar\",\n              value: ingredient.measurementId || '',\n              onChange: e => handleMeasurementChange(index, e.target.value),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: `Measurement ${index + 1}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 21\n              }, this), measurements.map((measurement, measurementIndex) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: measurement.measurement_id,\n                children: measurement.measurement\n              }, measurementIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              onClick: () => removeIngredient(index),\n              className: \"bi bi-x-circle remove-icon\",\n              title: \"Remove Ingredient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this))\n        }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addIngredient,\n          className: \"add-btn-add-recipe\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-plus-circle add-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Add another ingredient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(Groceries, \"VkybWuY5n8mbozNll1MGqce/Nb0=\", false, function () {\n  return [useNavigate];\n});\n_c = Groceries;\nexport default Groceries;\nvar _c;\n$RefreshReg$(_c, \"Groceries\");","map":{"version":3,"names":["Navbar","React","useState","useEffect","jwt_decode","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Groceries","_s","navigate","name","setName","user","setUser","ingredients","setIngredients","searchTerm","setSearchTerm","suggestionsIngredients","setSuggestionsIngredients","selectedIngredient","setSelectedIngredient","groceryList","setGroceryList","isSuggestionClicked","setIsSuggestionClicked","recipeIngredients","setRecipeIngredients","ingredient","amount","measurementId","suggestions","setSuggestions","token","localStorage","getItem","_user","removeItem","replace","fetch","then","res","json","data","catch","error","console","length","filtered","filter","ingred","toLowerCase","includes","handleSuggestionClick","id","handleAddToGroceryList","newItem","storedGroceryList","JSON","parse","setItem","stringify","handleDeleteFromGroceryList","updatedList","item","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","map","index","placeholder","value","onChange","e","handleIngredientChange","target","required","Array","isArray","suggestion","suggestionIndex","type","handleMeasurementChange","disabled","measurements","measurement","measurementIndex","measurement_id","removeIngredient","title","addIngredient","_c","$RefreshReg$"],"sources":["C:/Users/oria3/Desktop/כללי/לימודים/שנה ג/פרוייקט גמר/code/client/src/pages/Groceries.js"],"sourcesContent":["import Navbar from '../components/Navbar';\nimport './App.css';\nimport './Groceries.css'\nimport './AddRecipe.css'\nimport React, { useState, useEffect } from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from 'react-router-dom'\nimport './Connect.css';\n\nconst Groceries = () => {\n  const navigate = useNavigate()\n  const [name, setName] = useState(null)\n  const [user, setUser] = useState(null)\n  const [ingredients, setIngredients] = useState([])\n  const [searchTerm, setSearchTerm] = useState('');\n  const [suggestionsIngredients, setSuggestionsIngredients] = useState([]);\n  const [selectedIngredient, setSelectedIngredient] = useState({});\n  const [groceryList, setGroceryList] = useState([]);\n  const [isSuggestionClicked, setIsSuggestionClicked] = useState(false);\n\n  // try\n  const [recipeIngredients, setRecipeIngredients] = useState([{ ingredient: '', amount: '', measurementId: '' }]);\n  const [suggestions, setSuggestions] = useState([]);\n\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      const _user = jwt_decode(token)\n      setName(_user.name)\n      setUser(_user)\n      if (!_user) {\n        localStorage.removeItem('token')\n        navigate.replace('/login')\n      }\n    }\n  }, [navigate])\n\n  useEffect(() => {\n    if (user) {\n      fetch(`http://localhost:1337/api/groceries`)\n        .then(res => res.json())\n        .then(data => {\n          setIngredients(data)\n        })\n        .catch(error => console.error(error))\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (searchTerm.length >= 3 && !isSuggestionClicked) {\n      const filtered = ingredients.filter((ingred) =>\n        ingred.ingredient.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n      setSuggestionsIngredients(filtered);\n    } else {\n      setSuggestionsIngredients([]);\n    }\n    setIsSuggestionClicked(false); // Reset the flag\n  }, [searchTerm, ingredients, isSuggestionClicked]);\n\n  const handleSuggestionClick = (ingredient) => {\n    setIsSuggestionClicked(true); // Set the flag to true\n    setSearchTerm(ingredient.ingredient);\n    setSelectedIngredient({\n      id: ingredient.id,\n      ingredient: ingredient.ingredient,\n    });\n    setSuggestionsIngredients([]); // Clear suggestions\n\n  };\n\n\n  const handleAddToGroceryList = () => {\n    if (selectedIngredient) {\n      const newItem = {\n        id: selectedIngredient.id,\n        ingredient: selectedIngredient.ingredient,\n      };\n      setGroceryList([...groceryList, newItem]);\n      // Clear the input fields after adding to the list\n      setSelectedIngredient({});\n      setSearchTerm('');\n    }\n  };\n\n  useEffect(() => {\n    // Load grocery list from local storage when the component mounts\n    const storedGroceryList = JSON.parse(localStorage.getItem('groceryList')) || [];\n    setGroceryList(storedGroceryList);\n  }, []);\n\n  useEffect(() => {\n    // Save grocery list to local storage whenever it changes\n    localStorage.setItem('groceryList', JSON.stringify(groceryList));\n  }, [groceryList]);\n\n\n\n  const handleDeleteFromGroceryList = (id) => {\n    const updatedList = groceryList.filter((item) => item.id !== id);\n    setGroceryList(updatedList);\n  };\n\n\n\n  return (\n    <div>\n      {name && <Navbar name={name} />}\n      <div className='ing-page-main-container'>\n\n        <div className='ing-page-head'>\n          <div className='ing-page-main-title'>\n            Discover Recipes with What\n            <br />\n            You Have\n          </div>\n          <div className='ing-page-sub-title'>\n            Cook delicious meals using ingredients you already have at home\n          </div>\n\n\n          <div className='ing-page-search-container'>\n\n            <div className=\"search-ing-input-container\">\n\n              {/* \n              <input\n                className='input-field grocery-input'\n                type=\"text\"\n                placeholder=\"Add ingredient\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n              />\n\n              {searchTerm.length >= 3 && (\n                <div className=\"ingredient-suggestions\">\n                  <div className='toggle-bar'>\n                    {suggestionsIngredients.map((ingredient) => (\n                      <div\n                        key={ingredient.id}\n                        onClick={() => handleSuggestionClick(ingredient)}\n                      >\n                        {ingredient.ingredient}\n                      </div>\n\n                    ))}\n                  </div>\n                </div>\n              )}\n              */}\n\n            </div>\n\n            <button onClick={handleAddToGroceryList} className='add-btn-grocery'>\n              <i className=\"bi bi-plus-circle add-icon\"></i>\n            </button>\n\n          </div>\n\n        </div>\n\n        <div className='ing-page-bottom'>\n\n          <div className='groceries-list-container'>\n            <div className='black-title'>Grocery List</div>\n\n            <div className='grocery-list'>\n              {groceryList.map((item, index) => (\n\n                <span key={index} className='ing-container'>\n                  <label className='ing-rec'>\n                    {item.ingredient}\n                  </label>\n                  <i\n                    className='bi bi-x-circle remove-icon remove-ing'\n                    onClick={() => handleDeleteFromGroceryList(item.id)}\n                  ></i>\n                </span>\n\n              )\n              )}\n\n            </div>\n\n            {/*\n            <ul>\n              {groceryList.map((item, index) => (\n                <li key={index}>\n                  {item.ingredient}\n                  <button onClick={() => handleDeleteFromGroceryList(item.id)}>Delete</button>\n                </li>\n              ))}\n            </ul>\n            */}\n\n          </div>\n\n        </div>\n\n\n        <div className='steps-container'>\n\n          {recipeIngredients.length === 0 ? (\n            // Error message when instructions array is empty\n            <div className='error-message-empty'>Please add at least one ingredient.</div>\n          ) : (\n            // Render instructions container with inputs\n            <>\n              {recipeIngredients.map((ingredient, index) => (\n                <div key={index} className='instruction-row'>\n\n                  <div className=\"input-container\">\n                    <input\n                      id={`ingredient_${index}_name`}\n                      className='input-field ingredient-input'\n                      placeholder={`Ingredient ${index + 1}`}\n                      value={ingredient.ingredient}\n                      onChange={(e) => handleIngredientChange(index, 'ingredient', e.target.value)}\n                      required\n                    />\n\n                    {Array.isArray(suggestions[index]) && suggestions[index].length > 0 && (\n                      <div className='ingredient-suggestions'>\n                        <div className='toggle-bar'>\n                          <ul>\n                            {suggestions[index].map((suggestion, suggestionIndex) => (\n                              <li key={suggestionIndex} onClick={() => handleSuggestionClick(index, suggestion)}>\n                                {suggestion}\n                              </li>\n                            ))}\n                          </ul>\n                        </div>\n                      </div>\n                    )}\n\n                  </div>\n\n                  <input\n                    id={`ingredient_${index}_amount`}\n                    type=\"number\"\n                    className='input-field step-input amount-input'\n                    placeholder={`Amount ${index + 1}`}\n                    value={ingredient.amount}\n                    onChange={(e) => handleIngredientChange(index, 'amount', e.target.value)}\n                    required\n                  />\n\n                  <select\n                    id={`ingredient_${index}_measurement`}\n                    className='input-field step-input measure-input selectWithScrollbar'\n                    value={ingredient.measurementId || ''}\n                    onChange={(e) => handleMeasurementChange(index, e.target.value)}\n                    required\n                  >\n                    <option value='' disabled>{`Measurement ${index + 1}`}</option>\n                    {measurements.map((measurement, measurementIndex) => (\n                      <option key={measurementIndex} value={measurement.measurement_id}>\n                        {measurement.measurement}\n                      </option>\n                    ))}\n                  </select>\n\n                  <i\n                    onClick={() => removeIngredient(index)}\n                    className='bi bi-x-circle remove-icon'\n                    title='Remove Ingredient'\n                  ></i>\n                </div>\n              ))}\n\n            </>\n          )}\n          <button onClick={addIngredient} className='add-btn-add-recipe'>\n            <i className=\"bi bi-plus-circle add-icon\"></i>\n            <span>Add another ingredient</span>\n          </button>\n\n        </div>\n      </div>\n\n\n    </div>\n  );\n};\n\nexport default Groceries\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}