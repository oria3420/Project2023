{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oria3\\\\Desktop\\\\\\u05DB\\u05DC\\u05DC\\u05D9\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8 \\u05D2\\u05DE\\u05E8\\\\code\\\\client\\\\src\\\\components\\\\NutritionTable.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport './Components.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NutritionTable = _ref => {\n  _s();\n  let {\n    recipe\n  } = _ref;\n  const nutritionFields = [{\n    key: 'Calories',\n    label: 'Calories'\n  }, {\n    key: 'FatContent',\n    label: 'Fat'\n  }, {\n    key: 'SaturatedFatContent',\n    label: 'Saturated Fat'\n  }, {\n    key: 'CholesterolContent',\n    label: 'Cholesterol'\n  }, {\n    key: 'SodiumContent',\n    label: 'Sodium'\n  }, {\n    key: 'CarbohydrateContent',\n    label: 'Carbohydrates'\n  }, {\n    key: 'FiberContent',\n    label: 'Fiber'\n  }, {\n    key: 'SugarContent',\n    label: 'Sugar'\n  }, {\n    key: 'ProteinContent',\n    label: 'Protein'\n  }];\n  useEffect(() => {\n    // Find the maximum width among all .nutrition-field elements\n    const nutritionFieldsElements = document.querySelectorAll('.nutrition-field');\n    let maxWidth = 0;\n    nutritionFieldsElements.forEach(field => {\n      maxWidth = Math.max(maxWidth, field.clientWidth);\n    });\n\n    // Set the width for all .nutrition-field elements\n    nutritionFieldsElements.forEach(field => {\n      field.style.width = maxWidth + 'px';\n    });\n  }, []); // The empty dependency array ensures that this effect runs only once after the initial render\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nutrition-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"nutrition-title\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"nutrition-icon bi bi-clipboard-data-fill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), \"Nutrition\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nutrition-table\",\n      children: nutritionFields.map((field, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nutrition-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"field-value\",\n            children: recipe[field.key]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"field-label\",\n            children: field.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), index < nutritionFields.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nutrition-divider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 64\n        }, this)]\n      }, field.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(NutritionTable, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = NutritionTable;\nexport default NutritionTable;\nvar _c;\n$RefreshReg$(_c, \"NutritionTable\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","NutritionTable","_ref","_s","recipe","nutritionFields","key","label","nutritionFieldsElements","document","querySelectorAll","maxWidth","forEach","field","Math","max","clientWidth","style","width","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","Fragment","length","_c","$RefreshReg$"],"sources":["C:/Users/oria3/Desktop/כללי/לימודים/שנה ג/פרוייקט גמר/code/client/src/components/NutritionTable.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport './Components.css';\n\nconst NutritionTable = ({ recipe }) => {\n    const nutritionFields = [\n        { key: 'Calories', label: 'Calories' },\n        { key: 'FatContent', label: 'Fat' },\n        { key: 'SaturatedFatContent', label: 'Saturated Fat' },\n        { key: 'CholesterolContent', label: 'Cholesterol' },\n        { key: 'SodiumContent', label: 'Sodium' },\n        { key: 'CarbohydrateContent', label: 'Carbohydrates' },\n        { key: 'FiberContent', label: 'Fiber' },\n        { key: 'SugarContent', label: 'Sugar' },\n        { key: 'ProteinContent', label: 'Protein' },\n    ];\n\n    useEffect(() => {\n        // Find the maximum width among all .nutrition-field elements\n        const nutritionFieldsElements = document.querySelectorAll('.nutrition-field');\n        let maxWidth = 0;\n\n        nutritionFieldsElements.forEach((field) => {\n            maxWidth = Math.max(maxWidth, field.clientWidth);\n        });\n\n        // Set the width for all .nutrition-field elements\n        nutritionFieldsElements.forEach((field) => {\n            field.style.width = maxWidth + 'px';\n        });\n    }, []); // The empty dependency array ensures that this effect runs only once after the initial render\n\n    return (\n        <div className='nutrition-container'>\n            <span className='nutrition-title'>\n                <i className=\"nutrition-icon bi bi-clipboard-data-fill\"></i>\n                Nutrition\n            </span>\n\n            <div className='nutrition-table'>\n                {nutritionFields.map((field, index) => (\n                    <React.Fragment key={field.key}>\n                        <div className='nutrition-field'>\n                            <span className='field-value'>{recipe[field.key]}</span>\n                            <br />\n                            <span className='field-label'>{field.label}</span>\n                        </div>\n                        {index < nutritionFields.length - 1 && <div className='nutrition-divider'></div>}\n                    </React.Fragment>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default NutritionTable;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGC,IAAA,IAAgB;EAAAC,EAAA;EAAA,IAAf;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAC9B,MAAMG,eAAe,GAAG,CACpB;IAAEC,GAAG,EAAE,UAAU;IAAEC,KAAK,EAAE;EAAW,CAAC,EACtC;IAAED,GAAG,EAAE,YAAY;IAAEC,KAAK,EAAE;EAAM,CAAC,EACnC;IAAED,GAAG,EAAE,qBAAqB;IAAEC,KAAK,EAAE;EAAgB,CAAC,EACtD;IAAED,GAAG,EAAE,oBAAoB;IAAEC,KAAK,EAAE;EAAc,CAAC,EACnD;IAAED,GAAG,EAAE,eAAe;IAAEC,KAAK,EAAE;EAAS,CAAC,EACzC;IAAED,GAAG,EAAE,qBAAqB;IAAEC,KAAK,EAAE;EAAgB,CAAC,EACtD;IAAED,GAAG,EAAE,cAAc;IAAEC,KAAK,EAAE;EAAQ,CAAC,EACvC;IAAED,GAAG,EAAE,cAAc;IAAEC,KAAK,EAAE;EAAQ,CAAC,EACvC;IAAED,GAAG,EAAE,gBAAgB;IAAEC,KAAK,EAAE;EAAU,CAAC,CAC9C;EAEDT,SAAS,CAAC,MAAM;IACZ;IACA,MAAMU,uBAAuB,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,CAAC;IAC7E,IAAIC,QAAQ,GAAG,CAAC;IAEhBH,uBAAuB,CAACI,OAAO,CAAEC,KAAK,IAAK;MACvCF,QAAQ,GAAGG,IAAI,CAACC,GAAG,CAACJ,QAAQ,EAAEE,KAAK,CAACG,WAAW,CAAC;IACpD,CAAC,CAAC;;IAEF;IACAR,uBAAuB,CAACI,OAAO,CAAEC,KAAK,IAAK;MACvCA,KAAK,CAACI,KAAK,CAACC,KAAK,GAAGP,QAAQ,GAAG,IAAI;IACvC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACIX,OAAA;IAAKmB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAChCpB,OAAA;MAAMmB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC7BpB,OAAA;QAAGmB,SAAS,EAAC;MAA0C;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,aAEhE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,eAEPxB,OAAA;MAAKmB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC3Bf,eAAe,CAACoB,GAAG,CAAC,CAACZ,KAAK,EAAEa,KAAK,kBAC9B1B,OAAA,CAACH,KAAK,CAAC8B,QAAQ;QAAAP,QAAA,gBACXpB,OAAA;UAAKmB,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC5BpB,OAAA;YAAMmB,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAEhB,MAAM,CAACS,KAAK,CAACP,GAAG;UAAC;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAQ,eACxDxB,OAAA;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM,eACNxB,OAAA;YAAMmB,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAEP,KAAK,CAACN;UAAK;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAQ;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAChD,EACLE,KAAK,GAAGrB,eAAe,CAACuB,MAAM,GAAG,CAAC,iBAAI5B,OAAA;UAAKmB,SAAS,EAAC;QAAmB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO;MAAA,GAN/DX,KAAK,CAACP,GAAG;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAQjC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACA;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEd,CAAC;AAACrB,EAAA,CAjDIF,cAAc;AAAA4B,EAAA,GAAd5B,cAAc;AAmDpB,eAAeA,cAAc;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}