{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oria3\\\\Desktop\\\\\\u05DB\\u05DC\\u05DC\\u05D9\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8 \\u05D2\\u05DE\\u05E8\\\\code\\\\client\\\\src\\\\components\\\\RecipeCard.js\",\n  _s = $RefreshSig$();\nimport './RecipeCard.css';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport LikeButton from './LikeBtn';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultImageUrl = '/images/logo-image.png';\nconst RecipeCard = props => {\n  _s();\n  const [imageUrl, setImageUrls] = useState([]);\n  const recipe = props.recipe;\n  const user = props.user;\n  let name;\n  let user_id;\n  if (user !== null) {\n    name = user.name;\n    user_id = user.email;\n  } else {\n    name = \"Guest\";\n    user_id = \"Guest\";\n  }\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function getImageUrls() {\n      try {\n        const response = await fetch(`http://localhost:1337/api/recipes/images/${recipe.RecipeId}`);\n        if (response.ok) {\n          const data = await response.json();\n          if (Array.isArray(data) && data.length > 0) {\n            const urls = await Promise.all(data.map(async imageData => {\n              if (typeof imageData === 'string' && imageData.startsWith('http')) {\n                // Check if the URL is valid\n                const urlResponse = await fetch(imageData, {\n                  method: 'HEAD'\n                });\n                if (urlResponse.ok) {\n                  return imageData;\n                } else {\n                  console.warn(`Invalid URL: ${imageData}`);\n                  return null;\n                }\n              } else {\n                console.warn(`Invalid URL format: ${imageData}`);\n                return null;\n              }\n            }));\n\n            // Remove null values (invalid URLs) from the array\n            const filteredUrls = urls.filter(url => url !== null);\n\n            // Set default image URL if the array becomes empty\n            setImageUrls(filteredUrls.length > 0 ? filteredUrls : [defaultImageUrl]);\n          } else {\n            // Handle the case when the server response is not an array or is empty\n            setImageUrls([defaultImageUrl]);\n          }\n        } else {\n          // Handle the case when the server response is not okay\n          setImageUrls([defaultImageUrl]);\n        }\n      } catch (error) {\n        console.error(error);\n        // Handle the error\n        setImageUrls([defaultImageUrl]);\n      }\n    }\n    getImageUrls();\n  }, [recipe.RecipeId, defaultImageUrl]);\n  const handleClick = recipeId => {\n    navigate(`/recipes/${recipeId}`, {\n      state: {\n        name: name,\n        user_id: user_id\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card recipe-card\",\n    children: [imageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"card-img-top\",\n        src: imageUrl[0],\n        alt: \"Card cap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleClick(recipe.RecipeId),\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"card-title\",\n            children: recipe.Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, recipe.RecipeId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body-bottom-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: recipe.Description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-like\",\n          children: /*#__PURE__*/_jsxDEV(LikeButton, {\n            recipeId: recipe.RecipeId,\n            userEmail: user_id,\n            pageType: \"RecipeCard\",\n            onLikeToggle: props.onLikeToggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipeCard, \"G7cj/N2KexEFPJdJO0zf7HEcJ7Q=\", false, function () {\n  return [useNavigate];\n});\n_c = RecipeCard;\nexport default RecipeCard;\nvar _c;\n$RefreshReg$(_c, \"RecipeCard\");","map":{"version":3,"names":["useState","useEffect","useNavigate","LikeButton","jsxDEV","_jsxDEV","defaultImageUrl","RecipeCard","props","_s","imageUrl","setImageUrls","recipe","user","name","user_id","email","navigate","getImageUrls","response","fetch","RecipeId","ok","data","json","Array","isArray","length","urls","Promise","all","map","imageData","startsWith","urlResponse","method","console","warn","filteredUrls","filter","url","error","handleClick","recipeId","state","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Name","Description","userEmail","pageType","onLikeToggle","_c","$RefreshReg$"],"sources":["C:/Users/oria3/Desktop/כללי/לימודים/שנה ג/פרוייקט גמר/code/client/src/components/RecipeCard.js"],"sourcesContent":["import './RecipeCard.css';\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport LikeButton from './LikeBtn';\r\n\r\n\r\nconst defaultImageUrl = '/images/logo-image.png'\r\n\r\nconst RecipeCard = (props) => {\r\n  const [imageUrl, setImageUrls] = useState([]);\r\n  const recipe = props.recipe;\r\n  const user = props.user;\r\n  let name;\r\n  let user_id\r\nif(user !== null){\r\n  name = user.name\r\n  user_id = user.email\r\n}\r\nelse{\r\n  name = \"Guest\"\r\n  user_id = \"Guest\"\r\n}\r\n\r\n  const navigate = useNavigate();\r\n\r\n\r\n  useEffect(() => {\r\n    async function getImageUrls() {\r\n      try {\r\n        const response = await fetch(`http://localhost:1337/api/recipes/images/${recipe.RecipeId}`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          if (Array.isArray(data) && data.length > 0) {\r\n            const urls = await Promise.all(\r\n              data.map(async (imageData) => {\r\n                if (typeof imageData === 'string' && imageData.startsWith('http')) {\r\n                  // Check if the URL is valid\r\n                  const urlResponse = await fetch(imageData, { method: 'HEAD' });\r\n                  if (urlResponse.ok) {\r\n                    return imageData;\r\n                  } else {\r\n                    console.warn(`Invalid URL: ${imageData}`);\r\n                    return null;\r\n                  }\r\n                } else {\r\n                  console.warn(`Invalid URL format: ${imageData}`);\r\n                  return null;\r\n                }\r\n              })\r\n            );\r\n\r\n            // Remove null values (invalid URLs) from the array\r\n            const filteredUrls = urls.filter((url) => url !== null);\r\n\r\n            // Set default image URL if the array becomes empty\r\n            setImageUrls(filteredUrls.length > 0 ? filteredUrls : [defaultImageUrl]);\r\n          } else {\r\n            // Handle the case when the server response is not an array or is empty\r\n            setImageUrls([defaultImageUrl]);\r\n          }\r\n        } else {\r\n          // Handle the case when the server response is not okay\r\n          setImageUrls([defaultImageUrl]);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n        // Handle the error\r\n        setImageUrls([defaultImageUrl]);\r\n      }\r\n    }\r\n\r\n    getImageUrls();\r\n  }, [recipe.RecipeId, defaultImageUrl]);\r\n\r\n  const handleClick = (recipeId) => {\r\n    navigate(`/recipes/${recipeId}`, { state: { name: name, user_id: user_id } });\r\n  };\r\n\r\n  return (\r\n    <div className=\"card recipe-card\">\r\n\r\n      {imageUrl && (\r\n        <div className=\"image-wrapper\">\r\n          <img className=\"card-img-top\" src={imageUrl[0]} alt=\"Card cap\" />\r\n        </div>\r\n      )}\r\n      <div className=\"card-body\">\r\n        <div className='title-container'>\r\n          <div key={recipe.RecipeId} onClick={() => handleClick(recipe.RecipeId)}>\r\n            <h6 className=\"card-title\">{recipe.Name}</h6>\r\n          </div>\r\n        </div>\r\n        <div className='body-bottom-container'>\r\n          <p className=\"card-text\">{recipe.Description}</p>\r\n          <div className=\"card-like\">\r\n            <LikeButton recipeId={recipe.RecipeId} userEmail={user_id} pageType=\"RecipeCard\" onLikeToggle={props.onLikeToggle} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeCard\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}