{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oria3\\\\Desktop\\\\\\u05DB\\u05DC\\u05DC\\u05D9\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8 \\u05D2\\u05DE\\u05E8\\\\code\\\\client\\\\src\\\\pages\\\\AddRecipe.js\",\n  _s = $RefreshSig$();\nimport Navbar from '../components/Navbar';\nimport './App.css';\nimport './AddRecipe.css';\nimport React, { useState, useEffect } from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from 'react-router-dom';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddRecipe = () => {\n  _s();\n  const navigate = useNavigate();\n  const [name, setName] = useState(null);\n  const [user, setUser] = useState(null);\n  const [recipeName, setRecipeName] = useState('');\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [cookTime, setCookTime] = useState('00:00');\n  const [prepTime, setPrepTime] = useState('00:00');\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [description, setDescription] = useState('');\n  const [recipeYield, setRecipeYield] = useState('');\n  const [categories, setCategories] = useState([]);\n  const [checkedItems, setCheckedItems] = useState({});\n  const [userId, setUserId] = useState('');\n  const [ingredients, setIngredients] = useState([]);\n  const [instructions, setInstructions] = useState(['']);\n  ;\n  const [measurements, setMeasurements] = useState([]);\n  const [recipeIngredients, setRecipeIngredients] = useState([{\n    ingredient: '',\n    amount: '',\n    measurementId: ''\n  }]);\n  const [suggestions, setSuggestions] = useState([]);\n  const [selectedOptions, setSelectedOptions] = useState({});\n  const handleMeasurementChange = (index, value) => {\n    const updatedIngredients = [...recipeIngredients];\n    updatedIngredients[index].measurementId = value;\n    setRecipeIngredients(updatedIngredients);\n  };\n  const handleIngredientChange = (index, field, value) => {\n    const updatedIngredients = [...recipeIngredients];\n    updatedIngredients[index][field] = value;\n    setRecipeIngredients(updatedIngredients);\n    // Call a function to filter and update the suggestions based on the current input value\n    updateIngredientSuggestions(value, index);\n  };\n  const updateIngredientSuggestions = (inputValue, index) => {\n    // Check if the length of inputValue is at least 3 before searching for suggestions\n    if (inputValue.length >= 3) {\n      const filteredIngredients = ingredients.filter(ingredient => typeof ingredient.ingredient === 'string' && ingredient.ingredient.toLowerCase().startsWith(inputValue.toLowerCase())).map(ingredient => ingredient.ingredient);\n\n      // Update the suggestions array at the specified index\n      setSuggestions(prevSuggestions => {\n        const updatedSuggestions = [...prevSuggestions];\n        updatedSuggestions[index] = filteredIngredients;\n        return updatedSuggestions;\n      });\n    } else {\n      // Clear suggestions if inputValue is less than 3 letters\n      setSuggestions(prevSuggestions => {\n        const updatedSuggestions = [...prevSuggestions];\n        updatedSuggestions[index] = [];\n        return updatedSuggestions;\n      });\n    }\n  };\n  const handleSuggestionClick = (index, suggestion) => {\n    const updatedIngredients = [...recipeIngredients];\n    updatedIngredients[index].ingredient = suggestion;\n    setRecipeIngredients(updatedIngredients);\n    // Clear suggestions for the clicked input field\n    setSuggestions([], index);\n  };\n  const addIngredient = () => {\n    setRecipeIngredients([...recipeIngredients, {\n      ingredient: '',\n      amount: ''\n    }]);\n  };\n  const removeIngredient = index => {\n    const updatedIngredients = [...recipeIngredients];\n    updatedIngredients.splice(index, 1);\n    setRecipeIngredients(updatedIngredients);\n  };\n  const addInstruction = () => {\n    setInstructions([...instructions, '']);\n  };\n  const removeInstruction = index => {\n    const updatedInstructions = [...instructions];\n    updatedInstructions.splice(index, 1);\n    setInstructions(updatedInstructions);\n  };\n  const handleInstructionChange = (index, value) => {\n    const updatedInstructions = [...instructions];\n    updatedInstructions[index] = value;\n    setInstructions(updatedInstructions);\n  };\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const _user = jwt_decode(token);\n      setName(_user.name);\n      setUser(_user);\n      setUserId(_user.email);\n      if (!_user) {\n        localStorage.removeItem('token');\n        navigate.replace('/login');\n      }\n    }\n  }, [navigate]);\n  useEffect(() => {\n    fetch('http://localhost:1337/api/search_recipe').then(response => response.json()).then(data => {\n      const checkedItems = {};\n      Object.keys(data).forEach(category => {\n        checkedItems[category] = {};\n      });\n      setCategories(data);\n      setCheckedItems(checkedItems);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  useEffect(() => {\n    if (user) {\n      fetch(`http://localhost:1337/api/groceries`).then(res => res.json()).then(data => {\n        setIngredients(data);\n      }).catch(error => console.error(error));\n    }\n  }, [user]);\n  useEffect(() => {\n    if (user) {\n      fetch(`http://localhost:1337/api/measurements`).then(res => res.json()).then(data => {\n        setMeasurements(data);\n      }).catch(error => console.error(error));\n    }\n  }, [user]);\n  const handleImageChange = event => {\n    const file = event.target.files[0];\n    setSelectedImage(file);\n  };\n  console.log(checkedItems);\n\n  // const handleSubmit = async (e) => {\n  //     e.preventDefault();\n  //     const kosherCategoryIds = Object.keys(checkedItems['kosher_categories'] || {});\n  //     const isKosherCategoryValid = kosherCategoryIds.some(\n  //         (checkboxId) => checkedItems['kosher_categories'][checkboxId]\n  //     );\n\n  //     if (!isKosherCategoryValid) {\n  //         setErrorMessage('Please select at least one checkbox in kosher_categories');\n  //         return;\n  //     }\n  //     setErrorMessage('');\n  //     console.log('Form Data:', {\n  //         recipeName,\n  //         selectedImage,\n  //         cookTime,\n  //         prepTime,\n  //         selectedCategory,\n  //         groceryList: ingredientsList,\n  //         description,\n  //         recipeServings,\n  //         recipeYield,\n  //         recipeInstructions: instructions,\n  //         checkedItems,\n  //     });\n  //     // setRecipeName('');\n  //     // setSelectedImage(null);\n  //     // setCookTime('00:00');\n  //     // setPrepTime('00:00');\n  //     // setSelectedCategory('');\n  //     // setSearchTerm('');\n  //     // setSelectedMeasurement('');\n  //     // setAmount('');\n  //     // setDescription('');\n  //     // setRecipeServings(1);\n  //     // setRecipeYield('');\n  //     // setRecipeInstructions('');\n  //     // setCheckedItems({});\n  //     // setGroceryList([]);\n  //     const formData = new FormData();\n  //     formData.append('selectedImage', selectedImage);\n  //     formData.append('recipeName', recipeName);\n  //     formData.append('cookTime', cookTime);\n  //     formData.append('prepTime', prepTime);\n  //     formData.append('selectedCategory', selectedCategory);\n  //     formData.append('groceryList', JSON.stringify(ingredientsList)); // Assuming groceryList is an array\n  //     formData.append('description', description);\n  //     formData.append('recipeServings', recipeServings);\n  //     formData.append('recipeYield', recipeYield);\n  //     formData.append('recipeInstructions', instructions);\n  //     formData.append('checkedItems', JSON.stringify(checkedItems));\n  //     formData.append('name', name);\n  //     formData.append('userId', userId);\n\n  //     try {\n  //         const response = await fetch('http://localhost:1337/api/addRecipe', {\n  //             method: 'POST',\n  //             body: formData,\n  //         });\n  //         if (response.ok) {\n  //             const result = await response.json();\n  //             console.log(result); // Recipe successfully added\n  //         } else {\n  //             console.error(`HTTP Error: ${response.status}`);\n  //             // Handle error response\n  //         }\n  //     } catch (error) {\n  //         console.error(error);\n  //         // Handle fetch error (e.g., network error)\n  //     }\n  // };\n\n  const formatCategoryName = category => {\n    // Replace underscores with spaces, remove the word \"categories,\" and capitalize the first letter of each word\n    return category.replace(/_/g, ' ').replace(/categories/g, '').trim().split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n  };\n  // console.log(categories)\n\n  const calculateTotalMinutes = time => {\n    const [hours, minutes] = time.split(':').map(Number);\n    return hours * 60 + minutes;\n  };\n  useEffect(() => {\n    const computeTimeCategoryTag = (prep, cook) => {\n      const totalMinutes = calculateTotalMinutes(prep) + calculateTotalMinutes(cook);\n      if (totalMinutes >= 60) {\n        return 'more than 1 hour';\n      } else if (totalMinutes >= 30) {\n        return '30-60 min';\n      } else if (totalMinutes >= 15) {\n        return '15-30 min';\n      } else {\n        return '0-15 min';\n      }\n    };\n    const timeTag = computeTimeCategoryTag(prepTime, cookTime);\n\n    // Update the time category in checkedItems\n    setCheckedItems(prevCheckedItems => ({\n      ...prevCheckedItems,\n      time_categories: {\n        [timeTag]: true\n      }\n    }));\n  }, [prepTime, cookTime]);\n  const handleSelectChange = (category, selectedValues) => {\n    console.log('category: ' + category);\n    console.log('selectedValues: ' + selectedValues);\n    setSelectedOptions(prevSelectedOptions => ({\n      ...prevSelectedOptions,\n      [category]: selectedValues\n    }));\n\n    // Update checkedItems based on the selected options\n    const categoryIds = selectedValues.map(value => parseInt(value, 10));\n    setCheckedItems(prevCheckedItems => ({\n      ...prevCheckedItems,\n      [category]: {\n        ...prevCheckedItems[category],\n        // Preserve existing selections\n        ...categoryIds.reduce((acc, categoryId) => {\n          acc[categoryId] = true;\n          return acc;\n        }, {})\n      }\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [name && /*#__PURE__*/_jsxDEV(Navbar, {\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: user && /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"add-recipe-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-details two-sections-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-left image-details-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"add-image-head\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"black-title\",\n                children: \"Add Images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-container\",\n              children: selectedImage ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"recipe-image\",\n                  src: URL.createObjectURL(selectedImage),\n                  alt: \"Selected\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"custom-file-upload\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-images\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"input-file\",\n                    type: \"file\",\n                    accept: \"image/*\",\n                    onChange: handleImageChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 331,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"add-file-title\",\n                  children: \"Upload images\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-right image-details-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"description-head\",\n              children: \"Add Your Recipe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"description-bottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"black-title\",\n                children: \"Recipe Name & Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"description-fields\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"desc-field\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"input-title\",\n                    children: \"Recipe Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 347,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"input-field\",\n                    type: \"text\",\n                    value: recipeName || '',\n                    onChange: e => setRecipeName(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"times-yields\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"desc-field\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"input-title\",\n                      children: \"Prep Time\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 360,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"input-field time-field\",\n                      type: \"time\",\n                      value: prepTime,\n                      onChange: e => setPrepTime(e.target.value),\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 361,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 359,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"desc-field\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"input-title\",\n                      children: \"Cook Time\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 371,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"input-field time-field\",\n                      type: \"time\",\n                      value: cookTime,\n                      onChange: e => setCookTime(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 372,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 370,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"desc-field yields-field\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"input-title\",\n                      children: \"Yields /Servings\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 381,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"input-field\",\n                      type: \"text\",\n                      value: recipeYield,\n                      onChange: e => setRecipeYield(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 382,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 380,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"desc-field\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"input-title\",\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 392,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    className: \"input-field desc-textbox\",\n                    value: description,\n                    onChange: e => setDescription(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 393,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"desc-field\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"input-title\",\n                    children: \"Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 401,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    className: \"input-field category-desc\",\n                    value: selectedCategory,\n                    onChange: e => setSelectedCategory(e.target.value),\n                    required: true,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      disabled: true,\n                      children: \"Select Category\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 408,\n                      columnNumber: 49\n                    }, this), Object.entries(categories).map(_ref => {\n                      let [category, entries] = _ref;\n                      return entries.map(_ref2 => {\n                        let [id, tagName] = _ref2;\n                        return /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: tagName,\n                          children: tagName\n                        }, id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 413,\n                          columnNumber: 57\n                        }, this);\n                      });\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 402,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ingredients-steps two-sections-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-left ingredients-steps-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"black-title\",\n              children: \"Ingredients\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"steps-container\",\n              children: [recipeIngredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"instruction-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"input-field step-input\",\n                    placeholder: `Ingredient ${index + 1}`,\n                    value: ingredient.ingredient,\n                    onChange: e => handleIngredientChange(index, 'ingredient', e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 439,\n                    columnNumber: 49\n                  }, this), Array.isArray(suggestions[index]) && suggestions[index].length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ingredient-suggestions\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"toggle-bar\",\n                      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                        children: suggestions[index].map((suggestion, suggestionIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n                          onClick: () => handleSuggestionClick(index, suggestion),\n                          children: suggestion\n                        }, suggestionIndex, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 452,\n                          columnNumber: 69\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 450,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 449,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 448,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  className: \"input-field step-input amount-input\",\n                  placeholder: `Amount ${index + 1}`,\n                  value: ingredient.amount,\n                  onChange: e => handleIngredientChange(index, 'amount', e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"input-field step-input amount-input\",\n                  value: ingredient.measurementId || '',\n                  onChange: e => handleMeasurementChange(index, e.target.value),\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    disabled: true,\n                    children: `Measurement ${index + 1}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 481,\n                    columnNumber: 49\n                  }, this), measurements.map((measurement, measurementIndex) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: measurement.measurement,\n                    children: measurement.measurement\n                  }, measurementIndex, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 483,\n                    columnNumber: 53\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  onClick: () => removeIngredient(index),\n                  className: \"bi bi-x-circle remove-icon\",\n                  title: \"Remove Ingredient\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 41\n              }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: addIngredient,\n                className: \"add-btn\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-plus-circle add-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Add another ingredient\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 504,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-right ingredients-steps-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"black-title\",\n              children: \"Instructions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"steps-container\",\n              children: [instructions.map((instruction, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"instruction-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"input-field step-input\",\n                  placeholder: `Instruction ${index + 1}`,\n                  value: instruction,\n                  onChange: e => handleInstructionChange(index, e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  onClick: () => removeInstruction(index),\n                  className: \"bi bi-x-circle remove-icon\",\n                  title: \"Remove Instruction\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 525,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 41\n              }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: addInstruction,\n                className: \"add-btn\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-plus-circle add-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 534,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Add another instruction\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 535,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tags-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"black-title\",\n            children: \"Tags\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tags-container\",\n            children: Object.entries(categories).map(_ref3 => {\n              let [category, entries] = _ref3;\n              return (\n                // Skip rendering select container for \"time_categories\"\n                category !== 'time_categories' && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"select-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: formatCategoryName(category) + \":\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 552,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    className: \"input-field\",\n                    value: selectedOptions[category] || [],\n                    onChange: e => {\n                      const selectedValues = Array.from(e.target.selectedOptions, option => option.value);\n                      handleSelectChange(category, selectedValues);\n                    },\n                    multiple: true // Add this attribute to enable multiple selections\n                    ,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      disabled: true,\n                      children: \"Select an option\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 562,\n                      columnNumber: 49\n                    }, this), entries.map(_ref4 => {\n                      let [id, tagName] = _ref4;\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: id,\n                        children: tagName\n                      }, id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 564,\n                        columnNumber: 53\n                      }, this);\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 553,\n                    columnNumber: 45\n                  }, this)]\n                }, category, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 551,\n                  columnNumber: 41\n                }, this)\n              );\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-tags\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"black-title\",\n              children: \"Selected Tags\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: Object.entries(checkedItems).map(_ref5 => {\n                let [category, tags] = _ref5;\n                return category !== 'time_categories' && Object.entries(tags).map(_ref6 => {\n                  let [id, checked] = _ref6;\n                  return checked && /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: [formatCategoryName(category), \":\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 582,\n                      columnNumber: 57\n                    }, this), \" \", categories[category].find(_ref7 => {\n                      let [tagId] = _ref7;\n                      return tagId === parseInt(id, 10);\n                    })[1]]\n                  }, id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 581,\n                    columnNumber: 53\n                  }, this);\n                });\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submit-section\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"publish-btn\",\n            type: \"submit\",\n            children: \"Publish\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 309,\n    columnNumber: 9\n  }, this);\n};\n_s(AddRecipe, \"z9t3sYEpNzUFkl4yjmOhQkNT/D4=\", false, function () {\n  return [useNavigate];\n});\n_c = AddRecipe;\nexport default AddRecipe;\n\n// const [searchTerm, setSearchTerm] = useState('');\n// const [filteredIngredients, setFilteredIngredients] = useState([]);\n// const [selectedIngredient, setSelectedIngredient] = useState('');\n// const [selectedMeasurement, setSelectedMeasurement] = useState('');\n// const [amount, setAmount] = useState('');\n// const [ingredientsList, setIngredientsList] = useState([]);\nvar _c;\n$RefreshReg$(_c, \"AddRecipe\");","map":{"version":3,"names":["Navbar","React","useState","useEffect","jwt_decode","useNavigate","Select","jsxDEV","_jsxDEV","Fragment","_Fragment","AddRecipe","_s","navigate","name","setName","user","setUser","recipeName","setRecipeName","selectedImage","setSelectedImage","cookTime","setCookTime","prepTime","setPrepTime","selectedCategory","setSelectedCategory","description","setDescription","recipeYield","setRecipeYield","categories","setCategories","checkedItems","setCheckedItems","userId","setUserId","ingredients","setIngredients","instructions","setInstructions","measurements","setMeasurements","recipeIngredients","setRecipeIngredients","ingredient","amount","measurementId","suggestions","setSuggestions","selectedOptions","setSelectedOptions","handleMeasurementChange","index","value","updatedIngredients","handleIngredientChange","field","updateIngredientSuggestions","inputValue","length","filteredIngredients","filter","toLowerCase","startsWith","map","prevSuggestions","updatedSuggestions","handleSuggestionClick","suggestion","addIngredient","removeIngredient","splice","addInstruction","removeInstruction","updatedInstructions","handleInstructionChange","token","localStorage","getItem","_user","email","removeItem","replace","fetch","then","response","json","data","Object","keys","forEach","category","catch","error","console","res","handleImageChange","event","file","target","files","log","formatCategoryName","trim","split","word","charAt","toUpperCase","slice","join","calculateTotalMinutes","time","hours","minutes","Number","computeTimeCategoryTag","prep","cook","totalMinutes","timeTag","prevCheckedItems","time_categories","handleSelectChange","selectedValues","prevSelectedOptions","categoryIds","parseInt","reduce","acc","categoryId","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","URL","createObjectURL","alt","type","accept","onChange","e","required","disabled","entries","_ref","_ref2","id","tagName","placeholder","Array","isArray","class","suggestionIndex","onClick","measurement","measurementIndex","title","instruction","_ref3","from","option","multiple","_ref4","_ref5","tags","_ref6","checked","find","_ref7","tagId","_c","$RefreshReg$"],"sources":["C:/Users/oria3/Desktop/כללי/לימודים/שנה ג/פרוייקט גמר/code/client/src/pages/AddRecipe.js"],"sourcesContent":["import Navbar from '../components/Navbar';\nimport './App.css';\nimport './AddRecipe.css'\nimport React, { useState, useEffect } from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from 'react-router-dom'\nimport Select from 'react-select';\n\nconst AddRecipe = () => {\n    const navigate = useNavigate()\n    const [name, setName] = useState(null)\n    const [user, setUser] = useState(null)\n    const [recipeName, setRecipeName] = useState('');\n    const [selectedImage, setSelectedImage] = useState(null);\n    const [cookTime, setCookTime] = useState('00:00');\n    const [prepTime, setPrepTime] = useState('00:00');\n    const [selectedCategory, setSelectedCategory] = useState('');\n    const [description, setDescription] = useState('');\n    const [recipeYield, setRecipeYield] = useState('');\n    const [categories, setCategories] = useState([]);\n    const [checkedItems, setCheckedItems] = useState({});\n    const [userId, setUserId] = useState('');\n    const [ingredients, setIngredients] = useState([])\n    const [instructions, setInstructions] = useState(['']);;\n    const [measurements, setMeasurements] = useState([]);\n    const [recipeIngredients, setRecipeIngredients] = useState([{ ingredient: '', amount: '' , measurementId: '' }]);\n    const [suggestions, setSuggestions] = useState([]);\n    const [selectedOptions, setSelectedOptions] = useState({});\n\n    const handleMeasurementChange = (index, value) => {\n        const updatedIngredients = [...recipeIngredients];\n        updatedIngredients[index].measurementId = value;\n        setRecipeIngredients(updatedIngredients);\n    };\n\n    const handleIngredientChange = (index, field, value) => {\n        const updatedIngredients = [...recipeIngredients];\n        updatedIngredients[index][field] = value;\n        setRecipeIngredients(updatedIngredients);\n        // Call a function to filter and update the suggestions based on the current input value\n        updateIngredientSuggestions(value, index);\n    };\n\n    const updateIngredientSuggestions = (inputValue, index) => {\n        // Check if the length of inputValue is at least 3 before searching for suggestions\n        if (inputValue.length >= 3) {\n            const filteredIngredients = ingredients\n                .filter((ingredient) =>\n                    typeof ingredient.ingredient === 'string' &&\n                    ingredient.ingredient.toLowerCase().startsWith(inputValue.toLowerCase())\n                )\n                .map((ingredient) => ingredient.ingredient);\n\n            // Update the suggestions array at the specified index\n            setSuggestions((prevSuggestions) => {\n                const updatedSuggestions = [...prevSuggestions];\n                updatedSuggestions[index] = filteredIngredients;\n                return updatedSuggestions;\n            });\n        } else {\n            // Clear suggestions if inputValue is less than 3 letters\n            setSuggestions((prevSuggestions) => {\n                const updatedSuggestions = [...prevSuggestions];\n                updatedSuggestions[index] = [];\n                return updatedSuggestions;\n            });\n        }\n    };\n\n    const handleSuggestionClick = (index, suggestion) => {\n        const updatedIngredients = [...recipeIngredients];\n        updatedIngredients[index].ingredient = suggestion;\n        setRecipeIngredients(updatedIngredients);\n        // Clear suggestions for the clicked input field\n        setSuggestions([], index);\n    };\n\n    const addIngredient = () => {\n        setRecipeIngredients([...recipeIngredients, { ingredient: '', amount: '' }]);\n    };\n\n    const removeIngredient = (index) => {\n        const updatedIngredients = [...recipeIngredients];\n        updatedIngredients.splice(index, 1);\n        setRecipeIngredients(updatedIngredients);\n    };\n\n    const addInstruction = () => {\n        setInstructions([...instructions, '']);\n    };\n\n    const removeInstruction = (index) => {\n        const updatedInstructions = [...instructions];\n        updatedInstructions.splice(index, 1);\n        setInstructions(updatedInstructions);\n    };\n\n    const handleInstructionChange = (index, value) => {\n        const updatedInstructions = [...instructions];\n        updatedInstructions[index] = value;\n        setInstructions(updatedInstructions);\n    };\n\n    useEffect(() => {\n        const token = localStorage.getItem('token')\n        if (token) {\n            const _user = jwt_decode(token)\n            setName(_user.name)\n            setUser(_user)\n            setUserId(_user.email)\n            if (!_user) {\n                localStorage.removeItem('token')\n                navigate.replace('/login')\n            }\n        }\n    }, [navigate])\n\n\n    useEffect(() => {\n        fetch('http://localhost:1337/api/search_recipe')\n            .then(response => response.json())\n            .then(data => {            \n                const checkedItems = {};\n                Object.keys(data).forEach(category => {                    \n                    checkedItems[category] = {};\n                });\n                setCategories(data);\n                setCheckedItems(checkedItems);\n            })\n            .catch(error => {\n                console.error(error);\n            });\n    }, []);\n\n    useEffect(() => {\n        if (user) {\n            fetch(`http://localhost:1337/api/groceries`)\n                .then(res => res.json())\n                .then(data => {\n                    setIngredients(data)\n                })\n                .catch(error => console.error(error))\n        }\n    }, [user]);\n\n    useEffect(() => {\n        if (user) {\n            fetch(`http://localhost:1337/api/measurements`)\n                .then(res => res.json())\n                .then(data => {\n                    setMeasurements(data)\n                })\n                .catch(error => console.error(error))\n        }\n    }, [user]);\n\n    const handleImageChange = (event) => {\n        const file = event.target.files[0];\n        setSelectedImage(file);\n    };\n\n    console.log(checkedItems)\n\n    // const handleSubmit = async (e) => {\n    //     e.preventDefault();\n    //     const kosherCategoryIds = Object.keys(checkedItems['kosher_categories'] || {});\n    //     const isKosherCategoryValid = kosherCategoryIds.some(\n    //         (checkboxId) => checkedItems['kosher_categories'][checkboxId]\n    //     );\n\n    //     if (!isKosherCategoryValid) {\n    //         setErrorMessage('Please select at least one checkbox in kosher_categories');\n    //         return;\n    //     }\n    //     setErrorMessage('');\n    //     console.log('Form Data:', {\n    //         recipeName,\n    //         selectedImage,\n    //         cookTime,\n    //         prepTime,\n    //         selectedCategory,\n    //         groceryList: ingredientsList,\n    //         description,\n    //         recipeServings,\n    //         recipeYield,\n    //         recipeInstructions: instructions,\n    //         checkedItems,\n    //     });\n    //     // setRecipeName('');\n    //     // setSelectedImage(null);\n    //     // setCookTime('00:00');\n    //     // setPrepTime('00:00');\n    //     // setSelectedCategory('');\n    //     // setSearchTerm('');\n    //     // setSelectedMeasurement('');\n    //     // setAmount('');\n    //     // setDescription('');\n    //     // setRecipeServings(1);\n    //     // setRecipeYield('');\n    //     // setRecipeInstructions('');\n    //     // setCheckedItems({});\n    //     // setGroceryList([]);\n    //     const formData = new FormData();\n    //     formData.append('selectedImage', selectedImage);\n    //     formData.append('recipeName', recipeName);\n    //     formData.append('cookTime', cookTime);\n    //     formData.append('prepTime', prepTime);\n    //     formData.append('selectedCategory', selectedCategory);\n    //     formData.append('groceryList', JSON.stringify(ingredientsList)); // Assuming groceryList is an array\n    //     formData.append('description', description);\n    //     formData.append('recipeServings', recipeServings);\n    //     formData.append('recipeYield', recipeYield);\n    //     formData.append('recipeInstructions', instructions);\n    //     formData.append('checkedItems', JSON.stringify(checkedItems));\n    //     formData.append('name', name);\n    //     formData.append('userId', userId);\n\n    //     try {\n    //         const response = await fetch('http://localhost:1337/api/addRecipe', {\n    //             method: 'POST',\n    //             body: formData,\n    //         });\n    //         if (response.ok) {\n    //             const result = await response.json();\n    //             console.log(result); // Recipe successfully added\n    //         } else {\n    //             console.error(`HTTP Error: ${response.status}`);\n    //             // Handle error response\n    //         }\n    //     } catch (error) {\n    //         console.error(error);\n    //         // Handle fetch error (e.g., network error)\n    //     }\n    // };\n\n\n\n    const formatCategoryName = (category) => {\n        // Replace underscores with spaces, remove the word \"categories,\" and capitalize the first letter of each word\n        return category\n            .replace(/_/g, ' ')\n            .replace(/categories/g, '')\n            .trim()\n            .split(' ')\n            .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n            .join(' ');\n    };\n    // console.log(categories)\n\n    const calculateTotalMinutes = (time) => {\n        const [hours, minutes] = time.split(':').map(Number);\n        return hours * 60 + minutes;\n    };\n\n\n\n\n    useEffect(() => {\n        const computeTimeCategoryTag = (prep, cook) => {\n            const totalMinutes = calculateTotalMinutes(prep) + calculateTotalMinutes(cook);\n\n            if (totalMinutes >= 60) {\n                return 'more than 1 hour';\n            } else if (totalMinutes >= 30) {\n                return '30-60 min';\n            } else if (totalMinutes >= 15) {\n                return '15-30 min';\n            } else {\n                return '0-15 min';\n            }\n        };\n\n        const timeTag = computeTimeCategoryTag(prepTime, cookTime);\n\n        // Update the time category in checkedItems\n        setCheckedItems((prevCheckedItems) => ({\n            ...prevCheckedItems,\n            time_categories: {\n                [timeTag]: true,\n            },\n        }));\n    }, [prepTime, cookTime]);\n\n\n    const handleSelectChange = (category, selectedValues) => {\n        console.log('category: ' + category);\n        console.log('selectedValues: ' + selectedValues);\n\n        setSelectedOptions((prevSelectedOptions) => ({\n            ...prevSelectedOptions,\n            [category]: selectedValues,\n        }));\n\n        // Update checkedItems based on the selected options\n        const categoryIds = selectedValues.map(value => parseInt(value, 10));\n        setCheckedItems((prevCheckedItems) => ({\n            ...prevCheckedItems,\n            [category]: {\n                ...prevCheckedItems[category], // Preserve existing selections\n                ...categoryIds.reduce((acc, categoryId) => {\n                    acc[categoryId] = true;\n                    return acc;\n                }, {}),\n            },\n        }));\n    };\n\n    return (\n        <div>\n            {name && <Navbar name={name} />}\n            <div>\n                {user && (\n                    <form className='add-recipe-form'>\n\n                        <div className='image-details two-sections-wrapper'>\n\n                            <div className='section-left image-details-left'>\n                                <div className='add-image-head'>\n                                    <label className='black-title'>Add Images</label>\n                                </div>\n\n                                <div className='image-container'>\n                                    {selectedImage ? (\n                                        <>\n                                            <img className='recipe-image' src={URL.createObjectURL(selectedImage)} alt=\"Selected\" />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <label className=\"custom-file-upload\">\n                                                <i className=\"bi bi-images\"></i>\n                                                <input className=\"input-file\" type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\n                                            </label>\n                                            <label className='add-file-title'>Upload images</label>\n                                        </>\n                                    )}\n                                </div>\n\n                            </div>\n\n                            <div className='section-right image-details-right'>\n                                <div className='description-head'>Add Your Recipe</div>\n                                <div className='description-bottom'>\n                                    <div className='black-title'>Recipe Name & Description</div>\n\n                                    <div className='description-fields'>\n                                        <div className='desc-field'>\n                                            <label className='input-title'>Recipe Name</label>\n                                            <input\n                                                className='input-field'\n                                                type=\"text\"\n                                                value={recipeName || ''}\n                                                onChange={(e) => setRecipeName(e.target.value)}\n                                                required\n                                            />\n                                        </div>\n\n                                        <div className='times-yields'>\n\n                                            <div className='desc-field'>\n                                                <label className='input-title'>Prep Time</label>\n                                                <input\n                                                    className='input-field time-field'\n                                                    type=\"time\"\n                                                    value={prepTime}\n                                                    onChange={(e) => setPrepTime(e.target.value)}\n                                                    required\n                                                />\n                                            </div>\n\n                                            <div className='desc-field'>\n                                                <label className='input-title'>Cook Time</label>\n                                                <input\n                                                    className='input-field time-field'\n                                                    type=\"time\"\n                                                    value={cookTime}\n                                                    onChange={(e) => setCookTime(e.target.value)}\n                                                />\n                                            </div>\n\n                                            <div className='desc-field yields-field'>\n                                                <label className='input-title'>Yields /Servings</label>\n                                                <input\n                                                    className='input-field'\n                                                    type=\"text\"\n                                                    value={recipeYield}\n                                                    onChange={(e) => setRecipeYield(e.target.value)}\n                                                />\n                                            </div>\n                                        </div>\n\n                                        <div className='desc-field'>\n                                            <label className='input-title'>Description</label>\n                                            <textarea\n                                                className='input-field desc-textbox'\n                                                value={description}\n                                                onChange={(e) => setDescription(e.target.value)}\n                                            />\n                                        </div>\n\n                                        <div className='desc-field'>\n                                            <label className='input-title'>Category</label>\n                                            <select\n                                                className='input-field category-desc'\n                                                value={selectedCategory}\n                                                onChange={(e) => setSelectedCategory(e.target.value)}\n                                                required\n                                            >\n                                                <option value=\"\" disabled>\n                                                    Select Category\n                                                </option>\n                                                {Object.entries(categories).map(([category, entries]) => (\n                                                    entries.map(([id, tagName]) => (\n                                                        <option key={id} value={tagName}>\n                                                            {tagName}\n                                                        </option>\n                                                    ))\n                                                ))}\n                                            </select>\n                                        </div>\n\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className='ingredients-steps two-sections-wrapper'>\n\n                            <div className='section-left ingredients-steps-section'>\n                                <label className='black-title'>Ingredients</label>\n\n\n                                <div className='steps-container'>\n\n\n                                    {recipeIngredients.map((ingredient, index) => (\n                                        <div key={index} className='instruction-row'>\n\n                                            <div className=\"input-container\">\n                                                <input\n                                                    className='input-field step-input'\n                                                    placeholder={`Ingredient ${index + 1}`}\n                                                    value={ingredient.ingredient}\n                                                    onChange={(e) => handleIngredientChange(index, 'ingredient', e.target.value)}\n                                                    required\n                                                />\n\n                                                {Array.isArray(suggestions[index]) && suggestions[index].length > 0 && (\n                                                    <div className='ingredient-suggestions'>\n                                                        <div class='toggle-bar'>\n                                                            <ul>\n                                                                {suggestions[index].map((suggestion, suggestionIndex) => (\n                                                                    <li key={suggestionIndex} onClick={() => handleSuggestionClick(index, suggestion)}>\n                                                                        {suggestion}\n                                                                    </li>\n                                                                ))}\n                                                            </ul>\n                                                        </div>\n                                                    </div>\n                                                )}\n\n                                            </div>\n\n\n\n\n                                            <input\n                                                type=\"number\"\n                                                className='input-field step-input amount-input'\n                                                placeholder={`Amount ${index + 1}`}\n                                                value={ingredient.amount}\n                                                onChange={(e) => handleIngredientChange(index, 'amount', e.target.value)}\n                                                required\n                                            />\n\n                                            <select\n                                                className='input-field step-input amount-input'\n                                                value={ingredient.measurementId || ''}\n                                                onChange={(e) => handleMeasurementChange(index, e.target.value)}\n                                                required\n                                            >\n                                                <option value='' disabled>{`Measurement ${index + 1}`}</option>\n                                                {measurements.map((measurement, measurementIndex) => (\n                                                    <option key={measurementIndex} value={measurement.measurement}>\n                                                        {measurement.measurement}\n                                                    </option>\n                                                ))}\n                                            </select>\n\n                                            <i\n                                                onClick={() => removeIngredient(index)}\n                                                className='bi bi-x-circle remove-icon'\n                                                title='Remove Ingredient'\n                                            ></i>\n                                        </div>\n                                    ))}\n\n\n\n\n\n\n                                    <button onClick={addIngredient} className='add-btn'>\n                                        <i className=\"bi bi-plus-circle add-icon\"></i>\n                                        <span>Add another ingredient</span>\n                                    </button>\n\n                                </div>\n\n                            </div>\n\n                            <div className='section-right ingredients-steps-section'>\n                                <label className='black-title'>Instructions</label>\n\n                                <div className='steps-container'>\n\n                                    {instructions.map((instruction, index) => (\n                                        <div key={index} className='instruction-row'>\n                                            <input\n                                                className='input-field step-input'\n                                                placeholder={`Instruction ${index + 1}`}\n                                                value={instruction}\n                                                onChange={(e) => handleInstructionChange(index, e.target.value)}\n                                                required\n                                            />\n                                            <i\n                                                onClick={() => removeInstruction(index)}\n                                                className='bi bi-x-circle remove-icon'\n                                                title='Remove Instruction'\n                                            ></i>\n                                        </div>\n                                    ))}\n\n                                    <button onClick={addInstruction} className='add-btn'>\n                                        <i className=\"bi bi-plus-circle add-icon\"></i>\n                                        <span>Add another instruction</span>\n                                    </button>\n\n                                </div>\n\n                            </div>\n\n                        </div>\n\n                        <div className='tags-section'>\n                            <label className='black-title'>Tags</label>\n\n                            <div className='tags-container'>\n                                {Object.entries(categories).map(([category, entries]) => (\n                                    // Skip rendering select container for \"time_categories\"\n                                    category !== 'time_categories' && (\n                                        <div key={category} className=\"select-container\">\n                                            <label>{formatCategoryName(category) + \":\"}</label>\n                                            <select\n                                                className='input-field'\n                                                value={selectedOptions[category] || []}\n                                                onChange={(e) => {\n                                                    const selectedValues = Array.from(e.target.selectedOptions, option => option.value);\n                                                    handleSelectChange(category, selectedValues);\n                                                }}\n                                                multiple  // Add this attribute to enable multiple selections\n                                            >\n                                                <option value=\"\" disabled>Select an option</option>\n                                                {entries.map(([id, tagName]) => (\n                                                    <option key={id} value={id}>\n                                                        {tagName}\n                                                    </option>\n                                                ))}\n                                            </select>\n                                        </div>\n                                    )\n                                ))}\n                            </div>\n\n                            <div className='selected-tags'>\n                                <label className='black-title'>Selected Tags</label>\n                                <ul>\n                                    {Object.entries(checkedItems).map(([category, tags]) => (\n                                        category !== 'time_categories' && (\n                                            Object.entries(tags).map(([id, checked]) => (\n                                                checked && (\n                                                    <li key={id}>\n                                                        <strong>{formatCategoryName(category)}:</strong> {categories[category].find(([tagId]) => tagId === parseInt(id, 10))[1]}\n                                                    </li>\n                                                )\n                                            ))\n                                        )\n                                    ))}\n\n                                </ul>\n                            </div>\n\n                        </div>\n\n\n\n                        <div className='submit-section'>\n                            <button className='publish-btn' type=\"submit\">Publish</button>\n                        </div>\n                    </form>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default AddRecipe\n\n\n\n// const [searchTerm, setSearchTerm] = useState('');\n// const [filteredIngredients, setFilteredIngredients] = useState([]);\n// const [selectedIngredient, setSelectedIngredient] = useState('');\n// const [selectedMeasurement, setSelectedMeasurement] = useState('');\n// const [amount, setAmount] = useState('');\n// const [ingredientsList, setIngredientsList] = useState([]);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}