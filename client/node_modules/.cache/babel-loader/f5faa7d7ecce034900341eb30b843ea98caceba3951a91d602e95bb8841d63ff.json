{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import RecipeCard from '../components/RecipeCard';\n\n// const Recommendations = () => {\n//   const [recommendations, setRecommendations] = useState([]);\n//   const [favoritesRecipes, setFavoritesRecipes] = useState([]);\n//   const [fetchTime, setFetchTime] = useState(null);\n\n//   useEffect(() => {\n//     const fetchRecommendations = async () => {\n//       try {\n//         console.log(\"trying to fetch in client\");\n\n//         const startTime = Date.now();\n//         const response = await fetch(`http://localhost:1337/api/recommendations/${userId}`);\n//         const data = await response.json();\n//         const endTime = Date.now();\n\n//         const duration = endTime - startTime;\n//         setFetchTime(duration); // Set the fetch time\n//         console.log(\"duration: \", duration);\n//         setRecommendations(data);\n//       } catch (error) {\n//         console.error('Error fetching recommendations:', error);\n//       }\n//     };\n\n//     fetchRecommendations();\n//   }, [userId]);\n\n//   useEffect(() => {\n//     if (userId) {\n//       fetch(`http://localhost:1337/api/favorites/${userId}`)\n//         .then(res => {\n//           if (!res.ok) {\n//             throw new Error('Network response was not ok');\n//           }\n//           return res.json();\n//         })\n//         .then(data => {\n//           setFavoritesRecipes(data);\n//         })\n//         .catch(error => console.error('Error fetching favorite recipes:', error));\n//     }\n//   }, [userId]);\n\n//   return (\n//     <div>\n//       {fetchTime !== null && (\n//         <div>\n//           Time taken to fetch recommendations: {fetchTime} ms\n//         </div>\n//       )}\n//       <h2>Recommended Recipes</h2>\n//       <div className='favorites-recipes-container'>\n//         {recommendations.map(recipe => (\n\n//           <div className='recipe-card-wrapper'>\n//             {console.log(recipe)}\n//             <RecipeCard recipe={recipe.recipe} user={userId} />\n//             Similarity: {recipe.similarityScore}\n//           </div>\n//         ))}\n//       </div>\n\n//       <h2>Favorite Recipes</h2>\n//       <ul>\n//         {favoritesRecipes.map(recipe => (\n//           <li key={recipe.RecipeId}>\n//             {recipe.Name} ({recipe.RecipeCategory})\n//           </li>\n//         ))}\n//       </ul>\n\n//     </div >\n//   );\n// };\n\n// export default Recommendations;","map":{"version":3,"names":[],"sources":["C:/Users/oria3/Desktop/כללי/לימודים/שנה ג/פרוייקט גמר/code/client/src/components/Recommendations.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import RecipeCard from '../components/RecipeCard';\r\n\r\n\r\n// const Recommendations = () => {\r\n//   const [recommendations, setRecommendations] = useState([]);\r\n//   const [favoritesRecipes, setFavoritesRecipes] = useState([]);\r\n//   const [fetchTime, setFetchTime] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchRecommendations = async () => {\r\n//       try {\r\n//         console.log(\"trying to fetch in client\");\r\n\r\n//         const startTime = Date.now();\r\n//         const response = await fetch(`http://localhost:1337/api/recommendations/${userId}`);\r\n//         const data = await response.json();\r\n//         const endTime = Date.now();\r\n\r\n//         const duration = endTime - startTime;\r\n//         setFetchTime(duration); // Set the fetch time\r\n//         console.log(\"duration: \", duration);\r\n//         setRecommendations(data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching recommendations:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchRecommendations();\r\n//   }, [userId]);\r\n\r\n//   useEffect(() => {\r\n//     if (userId) {\r\n//       fetch(`http://localhost:1337/api/favorites/${userId}`)\r\n//         .then(res => {\r\n//           if (!res.ok) {\r\n//             throw new Error('Network response was not ok');\r\n//           }\r\n//           return res.json();\r\n//         })\r\n//         .then(data => {\r\n//           setFavoritesRecipes(data);\r\n//         })\r\n//         .catch(error => console.error('Error fetching favorite recipes:', error));\r\n//     }\r\n//   }, [userId]);\r\n\r\n//   return (\r\n//     <div>\r\n//       {fetchTime !== null && (\r\n//         <div>\r\n//           Time taken to fetch recommendations: {fetchTime} ms\r\n//         </div>\r\n//       )}\r\n//       <h2>Recommended Recipes</h2>\r\n//       <div className='favorites-recipes-container'>\r\n//         {recommendations.map(recipe => (\r\n\r\n//           <div className='recipe-card-wrapper'>\r\n//             {console.log(recipe)}\r\n//             <RecipeCard recipe={recipe.recipe} user={userId} />\r\n//             Similarity: {recipe.similarityScore}\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n\r\n//       <h2>Favorite Recipes</h2>\r\n//       <ul>\r\n//         {favoritesRecipes.map(recipe => (\r\n//           <li key={recipe.RecipeId}>\r\n//             {recipe.Name} ({recipe.RecipeCategory})\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n\r\n//     </div >\r\n//   );\r\n// };\r\n\r\n// export default Recommendations;\r\n"],"mappings":"AAAA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}