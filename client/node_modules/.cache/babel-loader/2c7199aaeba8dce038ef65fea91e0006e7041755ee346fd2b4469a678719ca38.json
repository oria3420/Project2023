{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oria3\\\\Desktop\\\\\\u05DB\\u05DC\\u05DC\\u05D9\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8 \\u05D2\\u05DE\\u05E8\\\\code\\\\client\\\\src\\\\pages\\\\Groceries.js\",\n  _s = $RefreshSig$();\nimport Navbar from '../components/Navbar';\nimport './App.css';\nimport './Groceries.css';\nimport './AddRecipe.css';\nimport React, { useState, useEffect } from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from 'react-router-dom';\nimport './Connect.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Groceries = () => {\n  _s();\n  const navigate = useNavigate();\n  const [name, setName] = useState(null);\n  const [user, setUser] = useState(null);\n  const [ingredients, setIngredients] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [suggestionsIngredients, setSuggestionsIngredients] = useState([]);\n  const [selectedIngredient, setSelectedIngredient] = useState({});\n  const [groceryList, setGroceryList] = useState([]);\n  const [isSuggestionClicked, setIsSuggestionClicked] = useState(false);\n\n  // try\n  const [recipeIngredients, setRecipeIngredients] = useState([{\n    ingredient: ''\n  }]);\n  const [suggestions, setSuggestions] = useState([]);\n  const handleIngredientChange = (index, field, value) => {\n    const updatedIngredients = [...recipeIngredients];\n    updatedIngredients[index][field] = value;\n    setRecipeIngredients(updatedIngredients);\n    console.log(updatedIngredients);\n    // Call a function to filter and update the suggestions based on the current input value\n    updateIngredientSuggestions(value, index);\n  };\n  const updateIngredientSuggestions = (inputValue, index) => {\n    // Check if the length of inputValue is at least 3 before searching for suggestions\n    if (inputValue.length >= 3) {\n      const filteredIngredients = ingredients.filter(ingredient => typeof ingredient.ingredient === 'string' && ingredient.ingredient.toLowerCase().startsWith(inputValue.toLowerCase())).map(ingredient => ingredient.ingredient);\n\n      // Update the suggestions array at the specified index\n      setSuggestions(prevSuggestions => {\n        const updatedSuggestions = [...prevSuggestions];\n        updatedSuggestions[index] = filteredIngredients;\n        return updatedSuggestions;\n      });\n    } else {\n      // Clear suggestions if inputValue is less than 3 letters\n      setSuggestions(prevSuggestions => {\n        const updatedSuggestions = [...prevSuggestions];\n        updatedSuggestions[index] = [];\n        return updatedSuggestions;\n      });\n    }\n  };\n  const handleSuggestionClick = (index, suggestion) => {\n    const updatedIngredients = [...recipeIngredients];\n    updatedIngredients[index].ingredient = suggestion;\n    setRecipeIngredients(updatedIngredients);\n    // Clear suggestions for the clicked input field\n    setSuggestions([], index);\n  };\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const _user = jwt_decode(token);\n      setName(_user.name);\n      setUser(_user);\n      if (!_user) {\n        localStorage.removeItem('token');\n        navigate.replace('/login');\n      }\n    }\n  }, [navigate]);\n  useEffect(() => {\n    if (user) {\n      fetch(`http://localhost:1337/api/groceries`).then(res => res.json()).then(data => {\n        setIngredients(data);\n      }).catch(error => console.error(error));\n    }\n  }, [user]);\n\n  // useEffect(() => {\n  //   if (searchTerm.length >= 3 && !isSuggestionClicked) {\n  //     const filtered = ingredients.filter((ingred) =>\n  //       ingred.ingredient.toLowerCase().includes(searchTerm.toLowerCase())\n  //     );\n  //     setSuggestionsIngredients(filtered);\n  //   } else {\n  //     setSuggestionsIngredients([]);\n  //   }\n  //   setIsSuggestionClicked(false); // Reset the flag\n  // }, [searchTerm, ingredients, isSuggestionClicked]);\n\n  // const handleSuggestionClick = (ingredient) => {\n  //   setIsSuggestionClicked(true); // Set the flag to true\n  //   setSearchTerm(ingredient.ingredient);\n  //   setSelectedIngredient({\n  //     id: ingredient.id,\n  //     ingredient: ingredient.ingredient,\n  //   });\n  //   setSuggestionsIngredients([]); // Clear suggestions\n\n  // };\n\n  const handleAddToGroceryList = () => {\n    if (selectedIngredient) {\n      const newItem = {\n        id: selectedIngredient.id,\n        ingredient: selectedIngredient.ingredient\n      };\n      setGroceryList([...groceryList, newItem]);\n      // Clear the input fields after adding to the list\n      setSelectedIngredient({});\n      setSearchTerm('');\n    }\n  };\n  useEffect(() => {\n    // Load grocery list from local storage when the component mounts\n    const storedGroceryList = JSON.parse(localStorage.getItem('groceryList')) || [];\n    setGroceryList(storedGroceryList);\n  }, []);\n  useEffect(() => {\n    // Save grocery list to local storage whenever it changes\n    localStorage.setItem('groceryList', JSON.stringify(groceryList));\n  }, [groceryList]);\n  const handleDeleteFromGroceryList = id => {\n    const updatedList = groceryList.filter(item => item.id !== id);\n    setGroceryList(updatedList);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [name && /*#__PURE__*/_jsxDEV(Navbar, {\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ing-page-main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ing-page-head\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ing-page-main-title\",\n          children: [\"Discover Recipes with What\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), \"You Have\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ing-page-sub-title\",\n          children: \"Cook delicious meals using ingredients you already have at home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ing-page-search-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-ing-input-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                id: `ingredient_name`,\n                className: \"input-field ingredient-input\",\n                placeholder: `Ingredient`,\n                value: ingredient,\n                onChange: e => handleIngredientChange(0, 'ingredient', e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 13\n              }, this), Array.isArray(suggestions[0]) && suggestions[0].length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ingredient-suggestions\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"toggle-bar\",\n                  children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                    children: suggestions[index].map((suggestion, suggestionIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n                      onClick: () => handleSuggestionClick(0, suggestion),\n                      children: suggestion\n                    }, suggestionIndex, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 186,\n                      columnNumber: 23\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddToGroceryList,\n            className: \"add-btn-grocery\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-plus-circle add-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ing-page-bottom\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"groceries-list-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"black-title\",\n            children: \"Grocery List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grocery-list\",\n            children: groceryList.map((item, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ing-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"ing-rec\",\n                children: item.ingredient\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-x-circle remove-icon remove-ing\",\n                onClick: () => handleDeleteFromGroceryList(item.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s(Groceries, \"qw8L1AGZxaUacBxIOIXTsKaz2dA=\", false, function () {\n  return [useNavigate];\n});\n_c = Groceries;\nexport default Groceries;\nvar _c;\n$RefreshReg$(_c, \"Groceries\");","map":{"version":3,"names":["Navbar","React","useState","useEffect","jwt_decode","useNavigate","jsxDEV","_jsxDEV","Groceries","_s","navigate","name","setName","user","setUser","ingredients","setIngredients","searchTerm","setSearchTerm","suggestionsIngredients","setSuggestionsIngredients","selectedIngredient","setSelectedIngredient","groceryList","setGroceryList","isSuggestionClicked","setIsSuggestionClicked","recipeIngredients","setRecipeIngredients","ingredient","suggestions","setSuggestions","handleIngredientChange","index","field","value","updatedIngredients","console","log","updateIngredientSuggestions","inputValue","length","filteredIngredients","filter","toLowerCase","startsWith","map","prevSuggestions","updatedSuggestions","handleSuggestionClick","suggestion","token","localStorage","getItem","_user","removeItem","replace","fetch","then","res","json","data","catch","error","handleAddToGroceryList","newItem","id","storedGroceryList","JSON","parse","setItem","stringify","handleDeleteFromGroceryList","updatedList","item","children","fileName","_jsxFileName","lineNumber","columnNumber","className","placeholder","onChange","e","target","required","Array","isArray","suggestionIndex","onClick","_c","$RefreshReg$"],"sources":["C:/Users/oria3/Desktop/כללי/לימודים/שנה ג/פרוייקט גמר/code/client/src/pages/Groceries.js"],"sourcesContent":["import Navbar from '../components/Navbar';\nimport './App.css';\nimport './Groceries.css'\nimport './AddRecipe.css'\nimport React, { useState, useEffect } from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from 'react-router-dom'\nimport './Connect.css';\n\nconst Groceries = () => {\n  const navigate = useNavigate()\n  const [name, setName] = useState(null)\n  const [user, setUser] = useState(null)\n  const [ingredients, setIngredients] = useState([])\n  const [searchTerm, setSearchTerm] = useState('');\n  const [suggestionsIngredients, setSuggestionsIngredients] = useState([]);\n  const [selectedIngredient, setSelectedIngredient] = useState({});\n  const [groceryList, setGroceryList] = useState([]);\n  const [isSuggestionClicked, setIsSuggestionClicked] = useState(false);\n\n  // try\n  const [recipeIngredients, setRecipeIngredients] = useState([{ ingredient: ''}]);\n  const [suggestions, setSuggestions] = useState([]);\n\n  const handleIngredientChange = (index, field, value) => {\n    const updatedIngredients = [...recipeIngredients];\n    updatedIngredients[index][field] = value;\n    setRecipeIngredients(updatedIngredients);\n    console.log(updatedIngredients)\n    // Call a function to filter and update the suggestions based on the current input value\n    updateIngredientSuggestions(value, index);\n  };\n\n  const updateIngredientSuggestions = (inputValue, index) => {\n    // Check if the length of inputValue is at least 3 before searching for suggestions\n    if (inputValue.length >= 3) {\n      const filteredIngredients = ingredients\n        .filter((ingredient) =>\n          typeof ingredient.ingredient === 'string' &&\n          ingredient.ingredient.toLowerCase().startsWith(inputValue.toLowerCase())\n        )\n        .map((ingredient) => ingredient.ingredient);\n\n      // Update the suggestions array at the specified index\n      setSuggestions((prevSuggestions) => {\n        const updatedSuggestions = [...prevSuggestions];\n        updatedSuggestions[index] = filteredIngredients;\n        return updatedSuggestions;\n      });\n    } else {\n      // Clear suggestions if inputValue is less than 3 letters\n      setSuggestions((prevSuggestions) => {\n        const updatedSuggestions = [...prevSuggestions];\n        updatedSuggestions[index] = [];\n        return updatedSuggestions;\n      });\n    }\n  };\n\n  const handleSuggestionClick = (index, suggestion) => {\n    const updatedIngredients = [...recipeIngredients];\n\n    updatedIngredients[index].ingredient = suggestion;\n    setRecipeIngredients(updatedIngredients);\n    // Clear suggestions for the clicked input field\n    setSuggestions([], index);\n  };\n\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      const _user = jwt_decode(token)\n      setName(_user.name)\n      setUser(_user)\n      if (!_user) {\n        localStorage.removeItem('token')\n        navigate.replace('/login')\n      }\n    }\n  }, [navigate])\n\n  useEffect(() => {\n    if (user) {\n      fetch(`http://localhost:1337/api/groceries`)\n        .then(res => res.json())\n        .then(data => {\n          setIngredients(data)\n        })\n        .catch(error => console.error(error))\n    }\n  }, [user]);\n\n  // useEffect(() => {\n  //   if (searchTerm.length >= 3 && !isSuggestionClicked) {\n  //     const filtered = ingredients.filter((ingred) =>\n  //       ingred.ingredient.toLowerCase().includes(searchTerm.toLowerCase())\n  //     );\n  //     setSuggestionsIngredients(filtered);\n  //   } else {\n  //     setSuggestionsIngredients([]);\n  //   }\n  //   setIsSuggestionClicked(false); // Reset the flag\n  // }, [searchTerm, ingredients, isSuggestionClicked]);\n\n  // const handleSuggestionClick = (ingredient) => {\n  //   setIsSuggestionClicked(true); // Set the flag to true\n  //   setSearchTerm(ingredient.ingredient);\n  //   setSelectedIngredient({\n  //     id: ingredient.id,\n  //     ingredient: ingredient.ingredient,\n  //   });\n  //   setSuggestionsIngredients([]); // Clear suggestions\n\n  // };\n\n\n  const handleAddToGroceryList = () => {\n    if (selectedIngredient) {\n      const newItem = {\n        id: selectedIngredient.id,\n        ingredient: selectedIngredient.ingredient,\n      };\n      setGroceryList([...groceryList, newItem]);\n      // Clear the input fields after adding to the list\n      setSelectedIngredient({});\n      setSearchTerm('');\n    }\n  };\n\n  useEffect(() => {\n    // Load grocery list from local storage when the component mounts\n    const storedGroceryList = JSON.parse(localStorage.getItem('groceryList')) || [];\n    setGroceryList(storedGroceryList);\n  }, []);\n\n  useEffect(() => {\n    // Save grocery list to local storage whenever it changes\n    localStorage.setItem('groceryList', JSON.stringify(groceryList));\n  }, [groceryList]);\n\n\n\n  const handleDeleteFromGroceryList = (id) => {\n    const updatedList = groceryList.filter((item) => item.id !== id);\n    setGroceryList(updatedList);\n  };\n\n\n\n  return (\n    <div>\n      {name && <Navbar name={name} />}\n      <div className='ing-page-main-container'>\n\n        <div className='ing-page-head'>\n          <div className='ing-page-main-title'>\n            Discover Recipes with What\n            <br />\n            You Have\n          </div>\n          <div className='ing-page-sub-title'>\n            Cook delicious meals using ingredients you already have at home\n          </div>\n\n\n          <div className='ing-page-search-container'>\n\n            <div className=\"search-ing-input-container\">\n\n            <div className=\"input-container\">\n            <input\n              id={`ingredient_name`}\n              className='input-field ingredient-input'\n              placeholder={`Ingredient`}\n              value={ingredient}\n              onChange={(e) => handleIngredientChange(0, 'ingredient', e.target.value)}\n              required\n            />\n\n            {Array.isArray(suggestions[0]) && suggestions[0].length > 0 && (\n              <div className='ingredient-suggestions'>\n                <div className='toggle-bar'>\n                  <ul>\n                    {suggestions[index].map((suggestion, suggestionIndex) => (\n                      <li key={suggestionIndex} onClick={() => handleSuggestionClick(0, suggestion)}>\n                        {suggestion}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            )}\n\n          </div>\n\n              {/* \n              <input\n                className='input-field grocery-input'\n                type=\"text\"\n                placeholder=\"Add ingredient\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n              />\n\n              {searchTerm.length >= 3 && (\n                <div className=\"ingredient-suggestions\">\n                  <div className='toggle-bar'>\n                    {suggestionsIngredients.map((ingredient) => (\n                      <div\n                        key={ingredient.id}\n                        onClick={() => handleSuggestionClick(ingredient)}\n                      >\n                        {ingredient.ingredient}\n                      </div>\n\n                    ))}\n                  </div>\n                </div>\n              )}\n              */}\n\n            </div>\n\n            <button onClick={handleAddToGroceryList} className='add-btn-grocery'>\n              <i className=\"bi bi-plus-circle add-icon\"></i>\n            </button>\n\n          </div>\n\n        </div>\n\n        <div className='ing-page-bottom'>\n\n          <div className='groceries-list-container'>\n            <div className='black-title'>Grocery List</div>\n\n            <div className='grocery-list'>\n              {groceryList.map((item, index) => (\n\n                <span key={index} className='ing-container'>\n                  <label className='ing-rec'>\n                    {item.ingredient}\n                  </label>\n                  <i\n                    className='bi bi-x-circle remove-icon remove-ing'\n                    onClick={() => handleDeleteFromGroceryList(item.id)}\n                  ></i>\n                </span>\n\n              )\n              )}\n\n            </div>\n\n            {/*\n            <ul>\n              {groceryList.map((item, index) => (\n                <li key={index}>\n                  {item.ingredient}\n                  <button onClick={() => handleDeleteFromGroceryList(item.id)}>Delete</button>\n                </li>\n              ))}\n            </ul>\n            */}\n\n          </div>\n\n        </div>\n\n      </div>\n\n\n    </div>\n  );\n};\n\nexport default Groceries\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}