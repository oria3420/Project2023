{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oria3\\\\Desktop\\\\\\u05DB\\u05DC\\u05DC\\u05D9\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8 \\u05D2\\u05DE\\u05E8\\\\code\\\\client\\\\src\\\\pages\\\\AddRecipe.js\",\n  _s = $RefreshSig$();\nimport Navbar from '../components/Navbar';\nimport './App.css';\nimport './AddRecipe.css';\nimport React, { useState, useEffect } from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddRecipe = () => {\n  _s();\n  const navigate = useNavigate();\n  const [name, setName] = useState(null);\n  const [user, setUser] = useState(null);\n  const [recipeName, setRecipeName] = useState('');\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [cookTime, setCookTime] = useState('00:00');\n  const [prepTime, setPrepTime] = useState('00:00');\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [description, setDescription] = useState('');\n  const [recipeYield, setRecipeYield] = useState('');\n  const [categories, setCategories] = useState([]);\n  const [recipeCategories, setRecipeCategories] = useState({});\n  const [userId, setUserId] = useState('');\n  const [ingredients, setIngredients] = useState([]);\n  const [instructions, setInstructions] = useState(['']);\n  ;\n  const [measurements, setMeasurements] = useState([]);\n  const [recipeIngredients, setRecipeIngredients] = useState([{\n    ingredient: '',\n    amount: '',\n    measurementId: ''\n  }]);\n  const [suggestions, setSuggestions] = useState([]);\n  const [formSubmitted, setFormSubmitted] = useState(false);\n  const handleMeasurementChange = (index, value) => {\n    const updatedIngredients = [...recipeIngredients];\n    updatedIngredients[index].measurementId = value;\n    setRecipeIngredients(updatedIngredients);\n  };\n  const handleIngredientChange = (index, field, value) => {\n    const updatedIngredients = [...recipeIngredients];\n    updatedIngredients[index][field] = value;\n    setRecipeIngredients(updatedIngredients);\n    console.log(updatedIngredients);\n    // Call a function to filter and update the suggestions based on the current input value\n    updateIngredientSuggestions(value, index);\n  };\n  const updateIngredientSuggestions = (inputValue, index) => {\n    // Check if the length of inputValue is at least 3 before searching for suggestions\n    if (inputValue.length >= 3) {\n      const filteredIngredients = ingredients.filter(ingredient => typeof ingredient.ingredient === 'string' && ingredient.ingredient.toLowerCase().startsWith(inputValue.toLowerCase())).map(ingredient => ingredient.ingredient);\n\n      // Update the suggestions array at the specified index\n      setSuggestions(prevSuggestions => {\n        const updatedSuggestions = [...prevSuggestions];\n        updatedSuggestions[index] = filteredIngredients;\n        return updatedSuggestions;\n      });\n    } else {\n      // Clear suggestions if inputValue is less than 3 letters\n      setSuggestions(prevSuggestions => {\n        const updatedSuggestions = [...prevSuggestions];\n        updatedSuggestions[index] = [];\n        return updatedSuggestions;\n      });\n    }\n  };\n  const handleSuggestionClick = (index, suggestion) => {\n    const updatedIngredients = [...recipeIngredients];\n    updatedIngredients[index].ingredient = suggestion;\n    setRecipeIngredients(updatedIngredients);\n    // Clear suggestions for the clicked input field\n    setSuggestions([], index);\n  };\n  const addIngredient = () => {\n    setRecipeIngredients([...recipeIngredients, {\n      ingredient: '',\n      amount: ''\n    }]);\n  };\n  const removeIngredient = index => {\n    const updatedIngredients = [...recipeIngredients];\n    updatedIngredients.splice(index, 1);\n    setRecipeIngredients(updatedIngredients);\n  };\n  const addInstruction = () => {\n    setInstructions([...instructions, '']);\n  };\n  const removeInstruction = index => {\n    const updatedInstructions = [...instructions];\n    updatedInstructions.splice(index, 1);\n    setInstructions(updatedInstructions);\n  };\n  const handleInstructionChange = (index, value) => {\n    const updatedInstructions = [...instructions];\n    updatedInstructions[index] = value;\n    setInstructions(updatedInstructions);\n  };\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const _user = jwt_decode(token);\n      setName(_user.name);\n      setUser(_user);\n      setUserId(_user.email);\n      if (!_user) {\n        localStorage.removeItem('token');\n        navigate.replace('/login');\n      }\n    }\n  }, [navigate]);\n  useEffect(() => {\n    if (user) {\n      fetch(`http://localhost:1337/api/groceries`).then(res => res.json()).then(data => {\n        setIngredients(data);\n      }).catch(error => console.error(error));\n    }\n  }, [user]);\n  useEffect(() => {\n    if (user) {\n      fetch(`http://localhost:1337/api/measurements`).then(res => res.json()).then(data => {\n        setMeasurements(data);\n      }).catch(error => console.error(error));\n    }\n  }, [user]);\n  const handleImageChange = event => {\n    const file = event.target.files[0];\n    setSelectedImage(file);\n  };\n  const handleSubmit = async e => {\n    console.log(\"handleSubmit\");\n    e.preventDefault();\n    const isFormValid = validateForm();\n    console.log(isFormValid);\n    if (true) {\n      // Iterate over recipeIngredients\n      const updatedRecipeIngredients = await Promise.all(recipeIngredients.map(async recipeIngredient => {\n        // Find the corresponding ingredient in the ingredients array\n        const matchingIngredient = ingredients.find(ingredient => ingredient.ingredient === recipeIngredient.ingredient);\n        if (matchingIngredient) {\n          // Extract the ID from the matching ingredient and update the recipeIngredient\n          recipeIngredient.id = matchingIngredient.id;\n        }\n        return recipeIngredient;\n      }));\n\n      // Update state with the modified recipeIngredients array\n      setRecipeIngredients(updatedRecipeIngredients);\n\n      // const kosherCategoryIds = Object.keys(recipeCategories['kosher_categories'] || {});\n      // const isKosherCategoryValid = kosherCategoryIds.some(\n      //     (checkboxId) => recipeCategories['kosher_categories'][checkboxId]\n      // );\n\n      // if (!isKosherCategoryValid) {\n      //     setErrorMessage('Please select at least one checkbox in kosher_categories');\n      //     return;\n      // }\n      // setErrorMessage('');\n      console.log('Form Data:', {\n        recipeName,\n        selectedImage,\n        cookTime,\n        prepTime,\n        selectedCategory,\n        groceryList: recipeIngredients,\n        description,\n        //recipeServings,\n        recipeYield,\n        recipeInstructions: instructions,\n        recipeCategories\n      });\n      // setRecipeName('');\n      // setSelectedImage(null);\n      // setCookTime('00:00');\n      // setPrepTime('00:00');\n      // setSelectedCategory('');\n      // setSearchTerm('');\n      // setSelectedMeasurement('');\n      // setAmount('');\n      // setDescription('');\n      // setRecipeServings(1);\n      // setRecipeYield('');\n      // setRecipeInstructions('');\n      // setRecipeCategories({});\n      // setGroceryList([]);\n      const formData = new FormData();\n      formData.append('selectedImage', selectedImage);\n      formData.append('recipeName', recipeName);\n      formData.append('cookTime', cookTime);\n      formData.append('prepTime', prepTime);\n      formData.append('selectedCategory', selectedCategory);\n      formData.append('groceryList', JSON.stringify(recipeIngredients)); // Assuming groceryList is an array\n      formData.append('description', description);\n      //formData.append('recipeServings', recipeServings);\n      formData.append('recipeYield', recipeYield);\n      formData.append('recipeInstructions', instructions);\n      formData.append('recipeCategories', recipeCategories);\n      formData.append('name', name);\n      formData.append('userId', userId);\n      try {\n        const response = await fetch('http://localhost:1337/api/addRecipe', {\n          method: 'POST',\n          body: formData\n        });\n        if (response.ok) {\n          const result = await response.json();\n          console.log(result); // Recipe successfully added\n          setFormSubmitted(true);\n          console.log(\"check\");\n          window.scrollTo({\n            top: 0,\n            behavior: 'smooth'\n          });\n        } else {\n          console.error(`HTTP Error: ${response.status}`);\n          // Handle error response\n        }\n      } catch (error) {\n        console.error(error);\n        // Handle fetch error (e.g., network error)\n      }\n    } else {\n      // Update state to show the error message\n      setFormSubmitted(true);\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    }\n  };\n  const formatCategoryName = category => {\n    return category.replace(/_/g, ' ').replace(/categories/g, '').trim().split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n  };\n  const calculateTotalMinutes = time => {\n    const [hours, minutes] = time.split(':').map(Number);\n    return hours * 60 + minutes;\n  };\n  useEffect(() => {\n    const computeTimeCategoryTag = (prep, cook) => {\n      const totalMinutes = calculateTotalMinutes(prep) + calculateTotalMinutes(cook);\n      if (totalMinutes >= 60) {\n        return 'more than 1 hour';\n      } else if (totalMinutes >= 30) {\n        return '30-60 min';\n      } else if (totalMinutes >= 15) {\n        return '15-30 min';\n      } else {\n        return '0-15 min';\n      }\n    };\n    const timeTag = computeTimeCategoryTag(prepTime, cookTime);\n\n    // Update the time category in checkedItems\n    setRecipeCategories(prevCheckedItems => ({\n      ...prevCheckedItems,\n      time_categories: {\n        [timeTag]: true\n      }\n    }));\n  }, [prepTime, cookTime]);\n  const handleRemoveTag = (category, id) => {\n    setRecipeCategories(prevCheckedItems => {\n      const updatedCheckedItems = {\n        ...prevCheckedItems\n      };\n      updatedCheckedItems[category] = {\n        ...prevCheckedItems[category],\n        [id]: false\n      };\n      return updatedCheckedItems;\n    });\n  };\n  useEffect(() => {\n    fetch('http://localhost:1337/api/search_recipe').then(response => response.json()).then(data => {\n      const initialRecipeCategories = {};\n      Object.keys(data).forEach(category => {\n        initialRecipeCategories[category] = {};\n        data[category].forEach(_ref => {\n          let [id, tagName] = _ref;\n          initialRecipeCategories[category][id] = false;\n        });\n      });\n      setCategories(data);\n      setRecipeCategories(initialRecipeCategories);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  const handleSelectChange = (category, id) => {\n    setRecipeCategories(prevCategories => ({\n      ...prevCategories,\n      [category]: {\n        ...(prevCategories[category] || {}),\n        [id]: true\n      }\n    }));\n  };\n  const validateForm = () => {\n    console.log(\"in validateForm\");\n    const missingFields = [];\n    if (!recipeName) {\n      missingFields.push(\"recipeName\");\n    }\n    if (!prepTime) {\n      missingFields.push(\"prepTime\");\n    }\n    if (!prepTime) {\n      missingFields.push(\"prepTime\");\n    }\n\n    // Apply the red shadow class to missing input fields\n    const inputFields = document.getElementsByClassName('input-field');\n    for (const field of inputFields) {\n      if (missingFields.includes(field.id)) {\n        field.classList.add('missing-input');\n      } else {\n        field.classList.remove('missing-input');\n      }\n    }\n\n    // Return true if there are no missing fields\n    return missingFields.length === 0;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [name && /*#__PURE__*/_jsxDEV(Navbar, {\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: user && /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"add-recipe-form needs-validation\",\n        children: [formSubmitted &&\n        /*#__PURE__*/\n        /*!validateForm() &&*/\n        _jsxDEV(\"div\", {\n          className: \"alert alert-danger\",\n          role: \"alert\",\n          children: \"Please fill in all required fields.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 29\n        }, this), formSubmitted &&\n        /*#__PURE__*/\n        /*validateForm() &&*/\n        _jsxDEV(\"div\", {\n          className: \"alert alert-success\",\n          role: \"alert\",\n          children: \"Success! Your recipe has been added to our collection. Thank you for sharing your delicious creation with us!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-details two-sections-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-left image-details-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"add-image-head\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"black-title\",\n                children: \"Add Images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-container\",\n              children: selectedImage ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"recipe-image\",\n                  src: URL.createObjectURL(selectedImage),\n                  alt: \"Selected\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"custom-file-upload\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-images\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 391,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"input-file\",\n                    type: \"file\",\n                    accept: \"image/*\",\n                    onChange: handleImageChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 392,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"add-file-title\",\n                  children: \"Upload images\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-right image-details-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"description-head\",\n              children: \"Add Your Recipe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"description-bottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"black-title\",\n                children: \"Recipe Name & Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"description-fields\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"desc-field\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"input-title\",\n                    children: \"Recipe Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 408,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"recipeName\",\n                    className: \"input-field\",\n                    type: \"text\",\n                    value: recipeName || '',\n                    onChange: e => setRecipeName(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 409,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"times-yields\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"desc-field\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"input-title\",\n                      children: \"Prep Time\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 422,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      id: \"prepTime\",\n                      className: \"input-field time-field\",\n                      type: \"time\",\n                      value: prepTime,\n                      onChange: e => setPrepTime(e.target.value),\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 423,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 421,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"desc-field\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"input-title\",\n                      children: \"Cook Time\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 434,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"input-field time-field\",\n                      type: \"time\",\n                      value: cookTime,\n                      onChange: e => setCookTime(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 435,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 433,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"desc-field yields-field\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"input-title\",\n                      children: \"Yields /Servings\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 444,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      id: \"yields\",\n                      className: \"input-field\",\n                      type: \"text\",\n                      value: recipeYield,\n                      onChange: e => setRecipeYield(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 445,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 443,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"desc-field\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"input-title\",\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 456,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    className: \"input-field desc-textbox\",\n                    value: description,\n                    onChange: e => setDescription(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 457,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"desc-field\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"input-title\",\n                    children: \"Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 465,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    className: \"input-field category-desc\",\n                    value: selectedCategory,\n                    onChange: e => setSelectedCategory(e.target.value),\n                    required: true,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      disabled: true,\n                      children: \"Select Category\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 472,\n                      columnNumber: 49\n                    }, this), Object.entries(categories).map(_ref2 => {\n                      let [category, entries] = _ref2;\n                      return entries.map(_ref3 => {\n                        let [id, tagName] = _ref3;\n                        return /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: tagName,\n                          children: tagName\n                        }, id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 477,\n                          columnNumber: 57\n                        }, this);\n                      });\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 466,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ingredients-steps two-sections-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-left ingredients-steps-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"black-title\",\n              children: \"Ingredients\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"steps-container\",\n              children: [recipeIngredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"instruction-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"input-field ingredient-input\",\n                    placeholder: `Ingredient ${index + 1}`,\n                    value: ingredient.ingredient,\n                    onChange: e => handleIngredientChange(index, 'ingredient', e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 503,\n                    columnNumber: 49\n                  }, this), Array.isArray(suggestions[index]) && suggestions[index].length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ingredient-suggestions\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"toggle-bar\",\n                      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                        children: suggestions[index].map((suggestion, suggestionIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n                          onClick: () => handleSuggestionClick(index, suggestion),\n                          children: suggestion\n                        }, suggestionIndex, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 516,\n                          columnNumber: 69\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 514,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 513,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 512,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  className: \"input-field step-input amount-input\",\n                  placeholder: `Amount ${index + 1}`,\n                  value: ingredient.amount,\n                  onChange: e => handleIngredientChange(index, 'amount', e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 527,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"input-field step-input measure-input selectWithScrollbar\",\n                  value: ingredient.measurementId || '',\n                  onChange: e => handleMeasurementChange(index, e.target.value),\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    disabled: true,\n                    children: `Measurement ${index + 1}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 542,\n                    columnNumber: 49\n                  }, this), measurements.map((measurement, measurementIndex) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: measurement.id,\n                    children: measurement.measurement\n                  }, measurementIndex, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 544,\n                    columnNumber: 53\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 536,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  onClick: () => removeIngredient(index),\n                  className: \"bi bi-x-circle remove-icon\",\n                  title: \"Remove Ingredient\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 550,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 41\n              }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: addIngredient,\n                className: \"add-btn\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-plus-circle add-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 559,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Add another ingredient\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 560,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 558,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-right ingredients-steps-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"black-title\",\n              children: \"Instructions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"steps-container\",\n              children: [instructions.map((instruction, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"instruction-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"input-field step-input\",\n                  placeholder: `Instruction ${index + 1}`,\n                  value: instruction,\n                  onChange: e => handleInstructionChange(index, e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 574,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  onClick: () => removeInstruction(index),\n                  className: \"bi bi-x-circle remove-icon\",\n                  title: \"Remove Instruction\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 581,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 573,\n                columnNumber: 41\n              }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: addInstruction,\n                className: \"add-btn\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-plus-circle add-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 590,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Add another instruction\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 591,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 589,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tags-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"black-title\",\n            children: \"Tags\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tags-container\",\n            children: categories && Object.entries(categories).map(_ref4 => {\n              let [category, entries] = _ref4;\n              return category !== 'time_categories' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"select-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"category-name\",\n                  children: formatCategoryName(category)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 607,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"input-field select-category\",\n                  value: recipeCategories[category],\n                  onChange: e => handleSelectChange(category, e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: [\"Select \", formatCategoryName(category)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 613,\n                    columnNumber: 49\n                  }, this), entries && entries.map(_ref5 => {\n                    let [id, tagName] = _ref5;\n                    return /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: id,\n                      children: tagName\n                    }, id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 615,\n                      columnNumber: 53\n                    }, this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 608,\n                  columnNumber: 45\n                }, this)]\n              }, category, true, {\n                fileName: _jsxFileName,\n                lineNumber: 606,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"separator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-tags-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"black-title\",\n              children: \"Selected Tags\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-tags\",\n              children: Object.entries(recipeCategories).map(_ref6 => {\n                let [category, tags] = _ref6;\n                return category !== 'time_categories' && Object.entries(tags).map(_ref7 => {\n                  let [id, checked] = _ref7;\n                  return checked && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"tag-container\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"tag-rec\",\n                      children: categories[category].find(_ref8 => {\n                        let [tagId] = _ref8;\n                        return tagId === parseInt(id, 10);\n                      })[1]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 635,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bi bi-x-circle remove-icon remove-tag\",\n                      onClick: () => handleRemoveTag(category, id)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 638,\n                      columnNumber: 57\n                    }, this)]\n                  }, id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 634,\n                    columnNumber: 53\n                  }, this);\n                });\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submit-section\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"publish-btn\",\n            type: \"submit\",\n            onClick: handleSubmit,\n            children: \"Publish\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 360,\n    columnNumber: 9\n  }, this);\n};\n_s(AddRecipe, \"UBg7obuYsWQ7S3Zj9EWWPCkEN6E=\", false, function () {\n  return [useNavigate];\n});\n_c = AddRecipe;\nexport default AddRecipe;\n\n// const [searchTerm, setSearchTerm] = useState('');\n// const [filteredIngredients, setFilteredIngredients] = useState([]);\n// const [selectedIngredient, setSelectedIngredient] = useState('');\n// const [selectedMeasurement, setSelectedMeasurement] = useState('');\n// const [amount, setAmount] = useState('');\n// const [ingredientsList, setIngredientsList] = useState([]);\nvar _c;\n$RefreshReg$(_c, \"AddRecipe\");","map":{"version":3,"names":["Navbar","React","useState","useEffect","jwt_decode","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","AddRecipe","_s","navigate","name","setName","user","setUser","recipeName","setRecipeName","selectedImage","setSelectedImage","cookTime","setCookTime","prepTime","setPrepTime","selectedCategory","setSelectedCategory","description","setDescription","recipeYield","setRecipeYield","categories","setCategories","recipeCategories","setRecipeCategories","userId","setUserId","ingredients","setIngredients","instructions","setInstructions","measurements","setMeasurements","recipeIngredients","setRecipeIngredients","ingredient","amount","measurementId","suggestions","setSuggestions","formSubmitted","setFormSubmitted","handleMeasurementChange","index","value","updatedIngredients","handleIngredientChange","field","console","log","updateIngredientSuggestions","inputValue","length","filteredIngredients","filter","toLowerCase","startsWith","map","prevSuggestions","updatedSuggestions","handleSuggestionClick","suggestion","addIngredient","removeIngredient","splice","addInstruction","removeInstruction","updatedInstructions","handleInstructionChange","token","localStorage","getItem","_user","email","removeItem","replace","fetch","then","res","json","data","catch","error","handleImageChange","event","file","target","files","handleSubmit","e","preventDefault","isFormValid","validateForm","updatedRecipeIngredients","Promise","all","recipeIngredient","matchingIngredient","find","id","groceryList","recipeInstructions","formData","FormData","append","JSON","stringify","response","method","body","ok","result","window","scrollTo","top","behavior","status","formatCategoryName","category","trim","split","word","charAt","toUpperCase","slice","join","calculateTotalMinutes","time","hours","minutes","Number","computeTimeCategoryTag","prep","cook","totalMinutes","timeTag","prevCheckedItems","time_categories","handleRemoveTag","updatedCheckedItems","initialRecipeCategories","Object","keys","forEach","_ref","tagName","handleSelectChange","prevCategories","missingFields","push","inputFields","document","getElementsByClassName","includes","classList","add","remove","children","fileName","_jsxFileName","lineNumber","columnNumber","className","role","src","URL","createObjectURL","alt","type","accept","onChange","required","disabled","entries","_ref2","_ref3","placeholder","Array","isArray","suggestionIndex","onClick","measurement","measurementIndex","title","instruction","_ref4","_ref5","_ref6","tags","_ref7","checked","_ref8","tagId","parseInt","_c","$RefreshReg$"],"sources":["C:/Users/oria3/Desktop/כללי/לימודים/שנה ג/פרוייקט גמר/code/client/src/pages/AddRecipe.js"],"sourcesContent":["import Navbar from '../components/Navbar';\nimport './App.css';\nimport './AddRecipe.css'\nimport React, { useState, useEffect } from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from 'react-router-dom'\n\nconst AddRecipe = () => {\n    const navigate = useNavigate()\n    const [name, setName] = useState(null)\n    const [user, setUser] = useState(null)\n    const [recipeName, setRecipeName] = useState('');\n    const [selectedImage, setSelectedImage] = useState(null);\n    const [cookTime, setCookTime] = useState('00:00');\n    const [prepTime, setPrepTime] = useState('00:00');\n    const [selectedCategory, setSelectedCategory] = useState('');\n    const [description, setDescription] = useState('');\n    const [recipeYield, setRecipeYield] = useState('');\n    const [categories, setCategories] = useState([]);\n    const [recipeCategories, setRecipeCategories] = useState({});\n    const [userId, setUserId] = useState('');\n    const [ingredients, setIngredients] = useState([])\n    const [instructions, setInstructions] = useState(['']);;\n    const [measurements, setMeasurements] = useState([]);\n    const [recipeIngredients, setRecipeIngredients] = useState([{ ingredient: '', amount: '', measurementId: '' }]);\n    const [suggestions, setSuggestions] = useState([]);\n    const [formSubmitted, setFormSubmitted] = useState(false);\n\n    const handleMeasurementChange = (index, value) => {\n        const updatedIngredients = [...recipeIngredients];\n        updatedIngredients[index].measurementId = value;\n        setRecipeIngredients(updatedIngredients);\n    };\n\n    const handleIngredientChange = (index, field, value) => {\n        const updatedIngredients = [...recipeIngredients];\n        updatedIngredients[index][field] = value;\n        setRecipeIngredients(updatedIngredients);\n        console.log(updatedIngredients)\n        // Call a function to filter and update the suggestions based on the current input value\n        updateIngredientSuggestions(value, index);\n    };\n\n    const updateIngredientSuggestions = (inputValue, index) => {\n        // Check if the length of inputValue is at least 3 before searching for suggestions\n        if (inputValue.length >= 3) {\n            const filteredIngredients = ingredients\n                .filter((ingredient) =>\n                    typeof ingredient.ingredient === 'string' &&\n                    ingredient.ingredient.toLowerCase().startsWith(inputValue.toLowerCase())\n                )\n                .map((ingredient) => ingredient.ingredient);\n\n            // Update the suggestions array at the specified index\n            setSuggestions((prevSuggestions) => {\n                const updatedSuggestions = [...prevSuggestions];\n                updatedSuggestions[index] = filteredIngredients;\n                return updatedSuggestions;\n            });\n        } else {\n            // Clear suggestions if inputValue is less than 3 letters\n            setSuggestions((prevSuggestions) => {\n                const updatedSuggestions = [...prevSuggestions];\n                updatedSuggestions[index] = [];\n                return updatedSuggestions;\n            });\n        }\n    };\n\n    const handleSuggestionClick = (index, suggestion) => {\n        const updatedIngredients = [...recipeIngredients];\n\n        updatedIngredients[index].ingredient = suggestion;\n        setRecipeIngredients(updatedIngredients);\n        // Clear suggestions for the clicked input field\n        setSuggestions([], index);\n    };\n\n    const addIngredient = () => {\n        setRecipeIngredients([...recipeIngredients, { ingredient: '', amount: '' }]);\n    };\n\n    const removeIngredient = (index) => {\n        const updatedIngredients = [...recipeIngredients];\n        updatedIngredients.splice(index, 1);\n        setRecipeIngredients(updatedIngredients);\n    };\n\n    const addInstruction = () => {\n        setInstructions([...instructions, '']);\n    };\n\n    const removeInstruction = (index) => {\n        const updatedInstructions = [...instructions];\n        updatedInstructions.splice(index, 1);\n        setInstructions(updatedInstructions);\n    };\n\n    const handleInstructionChange = (index, value) => {\n        const updatedInstructions = [...instructions];\n        updatedInstructions[index] = value;\n        setInstructions(updatedInstructions);\n    };\n\n    useEffect(() => {\n        const token = localStorage.getItem('token')\n        if (token) {\n            const _user = jwt_decode(token)\n            setName(_user.name)\n            setUser(_user)\n            setUserId(_user.email)\n            if (!_user) {\n                localStorage.removeItem('token')\n                navigate.replace('/login')\n            }\n        }\n    }, [navigate])\n\n    useEffect(() => {\n        if (user) {\n            fetch(`http://localhost:1337/api/groceries`)\n                .then(res => res.json())\n                .then(data => {\n                    setIngredients(data)\n                })\n                .catch(error => console.error(error))\n        }\n    }, [user]);\n\n    useEffect(() => {\n        if (user) {\n            fetch(`http://localhost:1337/api/measurements`)\n                .then(res => res.json())\n                .then(data => {\n                    setMeasurements(data)\n                })\n                .catch(error => console.error(error))\n        }\n    }, [user]);\n\n    const handleImageChange = (event) => {\n        const file = event.target.files[0];\n        setSelectedImage(file);\n    };\n\n     const handleSubmit = async (e) => {\n        console.log(\"handleSubmit\")\n        e.preventDefault();\n\n        const isFormValid = validateForm();\n        console.log(isFormValid)\n        if (true) {\n\n            // Iterate over recipeIngredients\n            const updatedRecipeIngredients = await Promise.all(recipeIngredients.map(async (recipeIngredient) => {\n                // Find the corresponding ingredient in the ingredients array\n                const matchingIngredient = ingredients.find((ingredient) => ingredient.ingredient === recipeIngredient.ingredient);\n\n                if (matchingIngredient) {\n                    // Extract the ID from the matching ingredient and update the recipeIngredient\n                    recipeIngredient.id = matchingIngredient.id;\n                }\n\n                return recipeIngredient;\n            }));\n\n            // Update state with the modified recipeIngredients array\n            setRecipeIngredients(updatedRecipeIngredients);\n\n            // const kosherCategoryIds = Object.keys(recipeCategories['kosher_categories'] || {});\n            // const isKosherCategoryValid = kosherCategoryIds.some(\n            //     (checkboxId) => recipeCategories['kosher_categories'][checkboxId]\n            // );\n\n            // if (!isKosherCategoryValid) {\n            //     setErrorMessage('Please select at least one checkbox in kosher_categories');\n            //     return;\n            // }\n            // setErrorMessage('');\n            console.log('Form Data:', {\n                recipeName,\n                selectedImage,\n                cookTime,\n                prepTime,\n                selectedCategory,\n                groceryList: recipeIngredients,\n                description,\n                //recipeServings,\n                recipeYield,\n                recipeInstructions: instructions,\n                recipeCategories,\n            });\n            // setRecipeName('');\n            // setSelectedImage(null);\n            // setCookTime('00:00');\n            // setPrepTime('00:00');\n            // setSelectedCategory('');\n            // setSearchTerm('');\n            // setSelectedMeasurement('');\n            // setAmount('');\n            // setDescription('');\n            // setRecipeServings(1);\n            // setRecipeYield('');\n            // setRecipeInstructions('');\n            // setRecipeCategories({});\n            // setGroceryList([]);\n            const formData = new FormData();\n            formData.append('selectedImage', selectedImage);\n            formData.append('recipeName', recipeName);\n            formData.append('cookTime', cookTime);\n            formData.append('prepTime', prepTime);\n            formData.append('selectedCategory', selectedCategory);\n            formData.append('groceryList', JSON.stringify(recipeIngredients)); // Assuming groceryList is an array\n            formData.append('description', description);\n            //formData.append('recipeServings', recipeServings);\n            formData.append('recipeYield', recipeYield);\n            formData.append('recipeInstructions', instructions);\n            formData.append('recipeCategories', recipeCategories);\n            formData.append('name', name);\n            formData.append('userId', userId);\n\n            try {\n                const response = await fetch('http://localhost:1337/api/addRecipe', {\n                    method: 'POST',\n                    body: formData,\n                });\n                if (response.ok) {\n                    const result = await response.json();\n                    console.log(result); // Recipe successfully added\n                    setFormSubmitted(true);\n                    console.log(\"check\")\n                    window.scrollTo({ top: 0, behavior: 'smooth' });\n                } else {\n                    console.error(`HTTP Error: ${response.status}`);\n                    // Handle error response\n                }\n            } catch (error) {\n                console.error(error);\n                // Handle fetch error (e.g., network error)\n            }\n\n        } else {\n            // Update state to show the error message\n            setFormSubmitted(true);\n            window.scrollTo({ top: 0, behavior: 'smooth' });\n        }\n    };\n\n    const formatCategoryName = (category) => {\n        return category\n            .replace(/_/g, ' ')\n            .replace(/categories/g, '')\n            .trim()\n            .split(' ')\n            .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n            .join(' ');\n    };\n\n    const calculateTotalMinutes = (time) => {\n        const [hours, minutes] = time.split(':').map(Number);\n        return hours * 60 + minutes;\n    };\n\n    useEffect(() => {\n        const computeTimeCategoryTag = (prep, cook) => {\n            const totalMinutes = calculateTotalMinutes(prep) + calculateTotalMinutes(cook);\n\n            if (totalMinutes >= 60) {\n                return 'more than 1 hour';\n            } else if (totalMinutes >= 30) {\n                return '30-60 min';\n            } else if (totalMinutes >= 15) {\n                return '15-30 min';\n            } else {\n                return '0-15 min';\n            }\n        };\n\n        const timeTag = computeTimeCategoryTag(prepTime, cookTime);\n\n        // Update the time category in checkedItems\n        setRecipeCategories((prevCheckedItems) => ({\n            ...prevCheckedItems,\n            time_categories: {\n                [timeTag]: true,\n            },\n        }));\n    }, [prepTime, cookTime]);\n\n    const handleRemoveTag = (category, id) => {\n        setRecipeCategories((prevCheckedItems) => {\n            const updatedCheckedItems = { ...prevCheckedItems };\n            updatedCheckedItems[category] = {\n                ...prevCheckedItems[category],\n                [id]: false,\n            };\n            return updatedCheckedItems;\n        });\n    };\n\n    useEffect(() => {\n        fetch('http://localhost:1337/api/search_recipe')\n            .then(response => response.json())\n            .then(data => {\n                const initialRecipeCategories = {};\n                Object.keys(data).forEach(category => {\n                    initialRecipeCategories[category] = {};\n                    data[category].forEach(([id, tagName]) => {\n                        initialRecipeCategories[category][id] = false;\n                    });\n                });\n                setCategories(data);\n                setRecipeCategories(initialRecipeCategories);\n            })\n            .catch(error => {\n                console.error(error);\n            });\n    }, []);\n\n    const handleSelectChange = (category, id) => {\n        setRecipeCategories((prevCategories) => ({\n            ...prevCategories,\n            [category]: {\n                ...(prevCategories[category] || {}),\n                [id]: true,\n            },\n        }));\n    };\n\n    const validateForm = () => {\n        console.log(\"in validateForm\");\n\n        const missingFields = [];\n\n        if (!recipeName) {\n            missingFields.push(\"recipeName\");\n        }\n        if (!prepTime) {\n            missingFields.push(\"prepTime\");\n        }\n        if (!prepTime) {\n            missingFields.push(\"prepTime\");\n        }\n\n        // Apply the red shadow class to missing input fields\n        const inputFields = document.getElementsByClassName('input-field');\n        for (const field of inputFields) {\n            if (missingFields.includes(field.id)) {\n                field.classList.add('missing-input');\n            } else {\n                field.classList.remove('missing-input');\n            }\n        }\n\n        // Return true if there are no missing fields\n        return missingFields.length === 0;\n    };\n\n    return (\n        <div>\n            {name && <Navbar name={name} />}\n            <div>\n                {user && (\n                    <form className='add-recipe-form needs-validation' >\n                        {formSubmitted && /*!validateForm() &&*/  (\n                            <div className=\"alert alert-danger\" role=\"alert\">\n                                Please fill in all required fields.\n                            </div>\n                        )}\n                        {formSubmitted && /*validateForm() &&*/ (\n                            <div className=\"alert alert-success\" role=\"alert\">\n                                Success! Your recipe has been added to our collection. Thank you for sharing your delicious creation with us!\n                            </div>\n                        )}\n\n                        <div className='image-details two-sections-wrapper'>\n\n                            <div className='section-left image-details-left'>\n                                <div className='add-image-head'>\n                                    <label className='black-title'>Add Images</label>\n                                </div>\n\n                                <div className='image-container'>\n                                    {selectedImage ? (\n                                        <>\n                                            <img className='recipe-image' src={URL.createObjectURL(selectedImage)} alt=\"Selected\" />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <label className=\"custom-file-upload\">\n                                                <i className=\"bi bi-images\"></i>\n                                                <input className=\"input-file\" type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\n                                            </label>\n                                            <label className='add-file-title'>Upload images</label>\n                                        </>\n                                    )}\n                                </div>\n\n                            </div>\n\n                            <div className='section-right image-details-right'>\n                                <div className='description-head'>Add Your Recipe</div>\n                                <div className='description-bottom'>\n                                    <div className='black-title'>Recipe Name & Description</div>\n\n                                    <div className='description-fields'>\n                                        <div className='desc-field'>\n                                            <label className='input-title'>Recipe Name</label>\n                                            <input\n                                                id='recipeName'\n                                                className='input-field'\n                                                type=\"text\"\n                                                value={recipeName || ''}\n                                                onChange={(e) => setRecipeName(e.target.value)}\n                                                required\n                                            />\n                                        </div>\n\n                                        <div className='times-yields'>\n\n                                            <div className='desc-field'>\n                                                <label className='input-title'>Prep Time</label>\n                                                <input\n                                                    id='prepTime'\n                                                    className='input-field time-field'\n                                                    type=\"time\"\n                                                    value={prepTime}\n                                                    onChange={(e) => setPrepTime(e.target.value)}\n                                                    required\n                                                />\n                                            </div>\n\n                                            <div className='desc-field'>\n                                                <label className='input-title'>Cook Time</label>\n                                                <input\n                                                    className='input-field time-field'\n                                                    type=\"time\"\n                                                    value={cookTime}\n                                                    onChange={(e) => setCookTime(e.target.value)}\n                                                />\n                                            </div>\n\n                                            <div className='desc-field yields-field'>\n                                                <label className='input-title'>Yields /Servings</label>\n                                                <input\n                                                    id='yields'\n                                                    className='input-field'\n                                                    type=\"text\"\n                                                    value={recipeYield}\n                                                    onChange={(e) => setRecipeYield(e.target.value)}\n                                                />\n                                            </div>\n                                        </div>\n\n                                        <div className='desc-field'>\n                                            <label className='input-title'>Description</label>\n                                            <textarea\n                                                className='input-field desc-textbox'\n                                                value={description}\n                                                onChange={(e) => setDescription(e.target.value)}\n                                            />\n                                        </div>\n\n                                        <div className='desc-field'>\n                                            <label className='input-title'>Category</label>\n                                            <select\n                                                className='input-field category-desc'\n                                                value={selectedCategory}\n                                                onChange={(e) => setSelectedCategory(e.target.value)}\n                                                required\n                                            >\n                                                <option value=\"\" disabled>\n                                                    Select Category\n                                                </option>\n                                                {Object.entries(categories).map(([category, entries]) => (\n                                                    entries.map(([id, tagName]) => (\n                                                        <option key={id} value={tagName}>\n                                                            {tagName}\n                                                        </option>\n                                                    ))\n                                                ))}\n                                            </select>\n                                        </div>\n\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className='ingredients-steps two-sections-wrapper'>\n\n                            <div className='section-left ingredients-steps-section'>\n                                <label className='black-title'>Ingredients</label>\n\n\n                                <div className='steps-container'>\n\n\n                                    {recipeIngredients.map((ingredient, index) => (\n                                        <div key={index} className='instruction-row'>\n\n                                            <div className=\"input-container\">\n                                                <input\n                                                    className='input-field ingredient-input'\n                                                    placeholder={`Ingredient ${index + 1}`}\n                                                    value={ingredient.ingredient}\n                                                    onChange={(e) => handleIngredientChange(index, 'ingredient', e.target.value)}\n                                                    required\n                                                />\n\n                                                {Array.isArray(suggestions[index]) && suggestions[index].length > 0 && (\n                                                    <div className='ingredient-suggestions'>\n                                                        <div className='toggle-bar'>\n                                                            <ul>\n                                                                {suggestions[index].map((suggestion, suggestionIndex) => (\n                                                                    <li key={suggestionIndex} onClick={() => handleSuggestionClick(index, suggestion)}>\n                                                                        {suggestion}\n                                                                    </li>\n                                                                ))}\n                                                            </ul>\n                                                        </div>\n                                                    </div>\n                                                )}\n\n                                            </div>\n\n                                            <input\n                                                type=\"number\"\n                                                className='input-field step-input amount-input'\n                                                placeholder={`Amount ${index + 1}`}\n                                                value={ingredient.amount}\n                                                onChange={(e) => handleIngredientChange(index, 'amount', e.target.value)}\n                                                required\n                                            />\n\n                                            <select\n                                                className='input-field step-input measure-input selectWithScrollbar'\n                                                value={ingredient.measurementId || ''}\n                                                onChange={(e) => handleMeasurementChange(index, e.target.value)}\n                                                required\n                                            >\n                                                <option value='' disabled>{`Measurement ${index + 1}`}</option>\n                                                {measurements.map((measurement, measurementIndex) => (\n                                                    <option key={measurementIndex} value={measurement.id}>\n                                                        {measurement.measurement}\n                                                    </option>\n                                                ))}\n                                            </select>\n\n                                            <i\n                                                onClick={() => removeIngredient(index)}\n                                                className='bi bi-x-circle remove-icon'\n                                                title='Remove Ingredient'\n                                            ></i>\n                                        </div>\n                                    ))}\n\n                                    <button onClick={addIngredient} className='add-btn'>\n                                        <i className=\"bi bi-plus-circle add-icon\"></i>\n                                        <span>Add another ingredient</span>\n                                    </button>\n\n                                </div>\n\n                            </div>\n\n                            <div className='section-right ingredients-steps-section'>\n                                <label className='black-title'>Instructions</label>\n\n                                <div className='steps-container'>\n\n                                    {instructions.map((instruction, index) => (\n                                        <div key={index} className='instruction-row'>\n                                            <input\n                                                className='input-field step-input'\n                                                placeholder={`Instruction ${index + 1}`}\n                                                value={instruction}\n                                                onChange={(e) => handleInstructionChange(index, e.target.value)}\n                                                required\n                                            />\n                                            <i\n                                                onClick={() => removeInstruction(index)}\n                                                className='bi bi-x-circle remove-icon'\n                                                title='Remove Instruction'\n                                            ></i>\n                                        </div>\n                                    ))}\n\n                                    <button onClick={addInstruction} className='add-btn'>\n                                        <i className=\"bi bi-plus-circle add-icon\"></i>\n                                        <span>Add another instruction</span>\n                                    </button>\n\n                                </div>\n\n                            </div>\n\n                        </div>\n\n                        <div className='tags-section'>\n                            <label className='black-title'>Tags</label>\n\n                            <div className='tags-container'>\n                                {categories && Object.entries(categories).map(([category, entries]) => (\n                                    category !== 'time_categories' && (\n                                        <div key={category} className=\"select-container\">\n                                            <label className='category-name'>{formatCategoryName(category)}</label>\n                                            <select\n                                                className='input-field select-category'\n                                                value={recipeCategories[category]}\n                                                onChange={(e) => handleSelectChange(category, e.target.value)}\n                                            >\n                                                <option value=\"\">Select {formatCategoryName(category)}</option>\n                                                {entries && entries.map(([id, tagName]) => (\n                                                    <option key={id} value={id}>\n                                                        {tagName}\n                                                    </option>\n                                                ))}\n                                            </select>\n                                        </div>\n                                    )\n                                ))}\n                            </div>\n\n                            <hr className=\"separator\" />\n\n                            <div className='selected-tags-container'>\n                                <label className='black-title'>Selected Tags</label>\n                                <div className='selected-tags'>\n                                    {Object.entries(recipeCategories).map(([category, tags]) => (\n                                        category !== 'time_categories' && (\n                                            Object.entries(tags).map(([id, checked]) => (\n                                                checked && (\n                                                    <span key={id} className='tag-container'>\n                                                        <label className='tag-rec'>\n                                                            {categories[category].find(([tagId]) => tagId === parseInt(id, 10))[1]}\n                                                        </label>\n                                                        <i\n                                                            className='bi bi-x-circle remove-icon remove-tag'\n                                                            onClick={() => handleRemoveTag(category, id)}\n                                                        ></i>\n                                                    </span>\n                                                )\n                                            ))\n                                        )\n                                    ))}\n                                </div>\n                            </div>\n\n                        </div>\n\n\n\n                        <div className='submit-section'>\n                            <button className='publish-btn' type=\"submit\" onClick={handleSubmit} >Publish</button>\n                        </div>\n                    </form>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default AddRecipe\n\n\n\n// const [searchTerm, setSearchTerm] = useState('');\n// const [filteredIngredients, setFilteredIngredients] = useState([]);\n// const [selectedIngredient, setSelectedIngredient] = useState('');\n// const [selectedMeasurement, setSelectedMeasurement] = useState('');\n// const [amount, setAmount] = useState('');\n// const [ingredientsList, setIngredientsList] = useState([]);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}